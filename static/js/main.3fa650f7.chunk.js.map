{"version":3,"sources":["components/Charts/chart-defaults.js","components/Charts/agechart.js","constants.js","utils/commonfunctions.js","components/Charts/allstates.js","components/Charts/dailyconfirmedchart.js","components/Charts/genderchart.js","components/Charts/growthtrendchart.js","components/Charts/nationalitychart.js","components/Charts/totalconfirmedchart.js","components/deepdive.js","components/footer.js","components/level.js","components/legend.js","components/choropleth.js","components/mapexplorer.js","components/minigraph.js","components/row.js","components/table.js","components/timeseries.js","utils/hooks.js","components/timeseriesexplorer.js","components/updates.js","components/home.js","components/languageswitcher.js","components/navbar.js","components/downloadblock.js","components/patientsview.js","components/patients.js","components/patientdb.js","components/clusters.js","components/deltabargraph.js","components/state.js","App.js","serviceWorker.js","i18n/detector.js","i18n/index.js","index.js"],"names":["defaults","global","deepmerge","defaultFontFamily","elements","line","fill","point","pointStyle","tooltips","intersect","mode","position","displayColors","borderWidth","titleSpacing","titleMarginBottom","bodySpacing","cornerRadius","xPadding","yPadding","caretSize","legend","display","labels","padding","usePointStyle","hover","layout","left","right","top","bottom","formatNumber","number","window","Intl","NumberFormat","format","defaultOptions","responsive","events","maintainAspectRatio","backgroundColor","titleFontColor","bodyFontColor","callbacks","label","tooltipItem","data","datasets","datasetIndex","Math","round","yLabel","radius","tension","yAxisDefaults","type","ticks","beginAtZero","max","undefined","precision","callback","value","gridLines","color","drawBorder","tickMarkLength","xAxisDefaults","AgeChart","props","t","useTranslation","ages","Array","length","forEach","patient","agebracket","age","parseInt","i","chartData","chartOptions","scales","xAxes","stacked","yAxes","sampleSize","reduce","a","b","className","title","options","size","MAP_TYPES","MAP_META","Myanmar","name","geoDataFile","mapType","graphObjectName","Ayeyarwady","Bago","Chin","Kachin","Kayah","Kayin","Magway","Mandalay","Mon","Rakhine","Sagaing","Shan","Tanintharyi","Yangon","STATE_CODES","reverseStateCodes","Object","keys","map","key","index","stateCodes","push","code","months","getStateName","i18n","toUpperCase","toLowerCase","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","Number","preprocessTimeseries","timeseries","today","Date","setHours","dataTypes","filter","d","every","dt","date","moment","toDate","validateCTS","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","totalactive","dailyactive","numberFormatter","isNaN","parseStateTimeseries","states_daily","statewiseSeries","c","isBefore","entries","k","v","stateCode","prev","AllStatesChart","dates","chartReference","React","createRef","statesData","Map","status","trim","has","set","previousValue","get","currentValue","sortedMap","sort","colors","borderCapStyle","pointBackgroundColor","borderColor","pointHoverRadius","dataset","boxWidth","fontSize","scaleLabel","labelString","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","week","quarter","ref","style","marginTop","height","onClick","ci","current","chartInstance","meta","getDatasetMeta","hidden","update","DailyConfirmedChart","confirmed","recovered","deceased","barDataSet","GenderChart","male","female","gender","total","_meta","percentage","parseFloat","toFixed","GrowthTrendChart","caretPadding","statesDailyData","x","stateData","weekSum","idx","y","order","cubicInterpolationMode","min","values","toString","NationalityChart","nationality","hasOwnProperty","country","TotalConfirmedChart","DeepDive","useState","fetched","setFetched","setTimeseries","rawData","setRawData","statesTimeSeries","setStatesTimeSeries","useEffect","getStates","Promise","all","axios","response","rawDataResponse","stateDailyResponse","cases_time_series","raw_data","console","log","animationDelay","memo","href","target","rel","setData","useEffectOnce","active","deaths","deltaconfirmed","deltadeaths","deltarecovered","ramp","n","canvas","document","createElement","context","width","getContext","fillStyle","fillRect","tickSize","marginRight","marginBottom","marginLeft","tickFormat","tickValues","svg","d3","attr","tickAdjust","g","selectAll","interpolate","domain","range","copy","rangeRound","append","toDataURL","interpolator","assign","invertExtent","thresholds","quantiles","thresholdFormat","join","bandwidth","call","select","remove","text","node","propertyFieldMap","state","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","setSelectedRegion","isCountryLoaded","choroplethMap","useRef","choroplethLegend","svgRenderCount","setSvgRenderCount","ready","useCallback","geoData","path","propertyField","topology","topojson","objects","projection","widthStyle","fitWidth","heightStyle","fitSize","bBox","bounds","split","svgLegend","colorScale","maxConfirmed","widthLegend","margin","barWidth","heightLegend","isInteger","onceTouchedRegion","features","properties","on","handleMouseEnter","stopPropagation","toTitleCase","err","str","charAt","prevCount","classed","nodes","parentNode","appendChild","id","preserveAspectRatio","getRegionFromState","region","states","stateDistrictWiseData","regionHighlighted","stateTestData","onMapHighlightChange","anchor","setAnchor","panelRegion","setPanelRegion","currentHoveredRegion","setCurrentHoveredRegion","currentMap","setCurrentMap","useMemo","currentMapData","acc","districtWiseData","districtData","district","find","getRegionFromDistrict","statecode","newMap","switchMapToState","topDistrict","lastupdatedtime","innerWidth","parse","formatDistance","fontWeight","Unknown","to","timeSeriesData","setTimeSeriesData","svgRef1","svgRef2","svgRef3","svgRef4","graphData","chartRight","chartBottom","svg1","svg2","svg3","svg4","xScale","svgArray","dailyMin","dailyMax","domainMinMax","yScale","datum","curve","totalLength","getTotalLength","transition","delay","duration","enter","viewBox","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","showDistricts","setShowDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","tooltipStyles","tooltip","background","borderRadius","opacity","wrapper","cursor","textAlign","arrow","handleReveal","sortDistricts","aDistricts","sorted","district1","district2","value1","value2","comparisonValue","handleSort","column","setItem","Fragment","onMouseEnter","onHighlightState","onMouseLeave","reveal","statenotes","e","content","styles","colSpan","onHighlightDistrict","delta","setStates","revealedStates","setRevealedStates","count","setCount","summary","s","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","Infinity","lastDaysCount","setLastDaysCount","datapoint","setDatapoint","setIndex","setMode","logMode","setLogMode","chartType","setChartType","moving","setMoving","wrapperRef","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","observer","entry","contentRect","observe","unobserve","useResizeObserver","transformTimeSeries","slicedTimeseries","days","sliceTimeseriesFromEnd","T","dateMin","setDate","getDate","dateMax","yScales","clamp","numTicksX","xAxis","xAxis2","yAxis","tickPadding","plotTotal","dataTypesTotal","dataTypesDaily","uniformScaleMin","yScaleUniformLinear","nice","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","typeTotal","typeDaily","reverse","p","getPointAtLength","repeat","mousemove","mouseout","xm","this","invert","bisectDate","f","j","focusDate","dateStr","isSame","subtract","chartKey1","chartKey2","chartKey3","chartKey4","currentStatusCount","currentDiff","formatedDiff","aria-label","activeStateCode","useLocalStorage","graphOption","setGraphOption","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","htmlFor","checked","onChange","event","disabled","selectedState","selectedOptions","JSON","statedata","stringify","currentDate","Updates","updates","setUpdates","then","catch","activity","replace","activityDate","timestamp","dangerouslySetInnerHTML","__html","setStateDistrictWiseData","lastUpdated","setLastUpdated","setActiveStateCode","setRegionHighlighted","showUpdates","setShowUpdates","lastViewedLog","setLastViewedLog","newUpdate","setNewUpdate","useFavicon","lastTimestamp","stateDistrictWiseResponse","statesDailyResponse","statewise","ts","LanguageSwitcher","changeLanguage","language","locales","lang","activeNavIcon","stroke","location","pathname","Expand","expand","pages","setExpand","expandElement","anime","targets","translateX","easing","page","showInNavbar","pageLink","animationDelayForNavbar","displayName","Navbar","darkMode","setDarkMode","useLockBodyScroll","prevMode","strokeDashoffset","setDashoffset","el","direction","loop","PatientsView","logs","setModal","setPatient","applyClass","indexTwo","patientnumber","Patients","patients","setPatients","setLogs","modal","onclick","getElementById","parseByDate","dateannounced","list","colorMode","typeoftransmission","getClassNameFn","contractedfromwhichpatientsuspected","patientid","patientIndex","switchPatient","detectedcity","detecteddistrict","detectedstate","notes","source1","source2","source3","filterByObject","obj","filters","PatientDB","filteredPatients","setFilteredPatients","useLocation","setColorMode","scaleMode","setScaleMode","filterDate","setFilterDate","showReminder","setShowReminder","message","setMessage","loading","setLoading","setFilters","scrollTo","querySelectorAll","setAttribute","handleFilters","newFilters","city","selectedIndex","getSortedValues","setValues","Set","add","from","defaultValue","selected","minDate","maxDate","subDays","calendarIcon","inputProps","onkeydown","preventDefault","clearIcon","fomattedDate","stateRawData","setStateRawData","networkData","setNetworkData","getData","contractedStr","sources","match","nodesSet","links","contracted","pid","group","raw","source","prepareNetworkData","NetworkGraph","fgRef","fg","offsetWidth","d3Force","strength","currNode","nodeLabel","nodeColor","linkDirectionalParticleColor","linkDirectionalParticles","linkDirectionalParticleWidth","link","enableZoomPanInteraction","ReactDOM","render","arrayKey","svgRef","formatTime","paddingInner","w","h","r","y0","roundedBar","mapRef","tsRef","useParams","setStateData","setDistrictData","stateName","getState","dataResponse","forwardRef","App","view","Home","State","classList","exact","component","Boolean","hostname","lookup","languageDetector","LanguageDetector","addDetector","Detector","use","Backend","init","debug","fallbackLng","backend","loadPath","detection","interpolation","escapeValue","lng","local","toLocaleString","fallback","navigator","serviceWorker","registration","unregister","error"],"mappings":"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","file":"static/js/main.3fa650f7.chunk.js","sourcesContent":["import deepmerge from 'deepmerge';\nimport {defaults} from 'react-chartjs-2';\n\ndefaults.global = deepmerge(defaults.global, {\n  defaultFontFamily: 'Archia',\n  elements: {\n    line: {\n      fill: false,\n    },\n    point: {\n      pointStyle: 'rectRounded',\n    },\n  },\n  tooltips: {\n    intersect: false,\n    mode: 'nearest',\n    position: 'average',\n    displayColors: false,\n    borderWidth: 0,\n    titleSpacing: 4,\n    titleMarginBottom: 8,\n    bodySpacing: 5,\n    cornerRadius: 3,\n    xPadding: 6,\n    yPadding: 6,\n    caretSize: 0,\n  },\n  legend: {\n    display: true,\n    position: 'bottom',\n    labels: {\n      padding: 15,\n      usePointStyle: true,\n    },\n  },\n  hover: {\n    intersect: false,\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 20,\n    },\n  },\n});\n\nconst formatNumber = (number) =>\n  'Intl' in window ? new Intl.NumberFormat('my-MM').format(number) : number;\n\nconst defaultOptions = {\n  responsive: true,\n  events: [\n    'click',\n    'mousemove',\n    'mouseout',\n    'touchstart',\n    'touchmove',\n    'touchend',\n  ],\n  maintainAspectRatio: false,\n  tooltips: {\n    backgroundColor: 'rgba(20,20,20,0.9)',\n    titleFontColor: 'rgba(255,255,255, 0.9)',\n    bodyFontColor: 'rgba(255,255,255, 0.9)',\n    caretSize: 0,\n    borderWidth: 0,\n    mode: 'index',\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let label = data.datasets[tooltipItem.datasetIndex].label || '';\n        if (label) {\n          label += ': ';\n        }\n        label += formatNumber(Math.round(tooltipItem.yLabel * 100) / 100);\n        return label;\n      },\n    },\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n    line: {\n      tension: 0.1,\n    },\n  },\n};\n\nconst yAxisDefaults = {\n  type: 'linear',\n  ticks: {\n    beginAtZero: true,\n    max: undefined,\n    precision: 0,\n    callback: (value) => formatNumber(value),\n  },\n  gridLines: {\n    color: 'rgba(0, 0, 0, 0.07)',\n    drawBorder: false,\n    tickMarkLength: 6,\n  },\n};\n\nconst xAxisDefaults = {\n  gridLines: {\n    color: 'rgba(0, 0, 0, 0)',\n  },\n};\n\nexport {defaultOptions, formatNumber, yAxisDefaults, xAxisDefaults};\n","import {defaultOptions, xAxisDefaults} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction AgeChart(props) {\n  const {t} = useTranslation();\n  \n  const ages = Array(10).fill(0);\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.agebracket) {\n      const age = parseInt(patient.agebracket);\n      for (let i = 0; i < 10; i++) {\n        if (age > i * 10 && age <= (i + 1) * 10) {\n          ages[i]++;\n        }\n      }\n    }\n  });\n\n  const chartData = {\n    labels: [\n      '0-10',\n      '11-20',\n      '21-30',\n      '31-40',\n      '41-50',\n      '51-60',\n      '61-70',\n      '71-80',\n      '81-90',\n      '91-100',\n    ],\n    datasets: [\n      {\n        data: ages,\n        label: 'Cases',\n        backgroundColor: '#bc79c9',\n      },\n    ],\n  };\n\n  const chartOptions = deepmerge(defaultOptions, {\n    legend: {\n      display: false,\n    },\n    scales: {\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          stacked: true,\n        }),\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n  });\n\n  const sampleSize = ages.reduce((a, b) => a + b, 0);\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Bar data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">\n        {t(\"Sample size number of patients\", {size: sampleSize})}\n      </div>\n    </div>\n  );\n}\n\nexport default AgeChart;\n","export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nexport const MAPS_DIR = '/maps';\n\nexport const MAP_META = {\n  Myanmar: {\n    name: 'Myanmar',\n    geoDataFile: `${MAPS_DIR}/myanmar.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'myanmar',\n  },\n  Ayeyarwady: {\n    name: 'Ayeyarwady',\n    geoDataFile: `${MAPS_DIR}/ayeyarwady.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'ayeyarwady',\n  },\n  Bago: {\n    name: 'Bago',\n    geoDataFile: `${MAPS_DIR}/bago.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'bago',\n  },\n  Chin: {\n    name: 'Chin',\n    geoDataFile: `${MAPS_DIR}/chin.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chin',\n  },\n  Kachin: {\n    name: 'Kachin',\n    geoDataFile: `${MAPS_DIR}/kachin.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kachin',\n  },\n  Kayah: {\n    name: 'Kayah',\n    geoDataFile: `${MAPS_DIR}/kayah.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kayah',\n  },\n  Kayin: {\n    name: 'Kayin',\n    geoDataFile: `${MAPS_DIR}/kayin.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kayin',\n  },\n  Magway: {\n    name: 'Magway',\n    geoDataFile: `${MAPS_DIR}/magway.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'magway',\n  },\n  Mandalay: {\n    name: 'Mandalay',\n    geoDataFile: `${MAPS_DIR}/mandalay.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mandalay',\n  },\n  Mon: {\n    name: 'Mon',\n    geoDataFile: `${MAPS_DIR}/mon.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mon',\n  },\n  'Nay Pyi Taw': {\n    name: 'Nay Pyi Taw',\n    geoDataFile: `${MAPS_DIR}/naypyitaw.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'naypyitaw',\n  },\n  Rakhine: {\n    name: 'Rakhine',\n    geoDataFile: `${MAPS_DIR}/rakhine.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'rakhine',\n  },\n  Sagaing: {\n    name: 'Sagaing',\n    geoDataFile: `${MAPS_DIR}/sagaing.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'sagaing',\n  },\n  Shan: {\n    name: 'Shan',\n    geoDataFile: `${MAPS_DIR}/shan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'shan',\n  },\n  Tanintharyi: {\n    name: 'Tanintharyi',\n    geoDataFile: `${MAPS_DIR}/tanintharyi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tanintharyi',\n  },\n  Yangon: {\n    name: 'Yangon',\n    geoDataFile: `${MAPS_DIR}/yangon.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'yangon',\n  },\n};\n\nexport const STATE_CODES = {\n  \"MM-07\": 'Ayayarwady',\n  \"MM-02\": 'Bago',\n  \"MM-14\": 'Chin',\n  \"MM-11\": 'Kachin',\n  \"MM-12\": 'Kayah',\n  \"MM-13\": 'Kayin',\n  \"MM-03\": 'Magway',\n  \"MM-04\": 'Mandalay',\n  \"MM-15\": 'Mon',\n  \"MM-18\": 'Nay Pyi Taw',\n  \"MM-16\": 'Rakhine',\n  \"MM-01\": 'Sagaing',\n  \"MM-17\": 'Shan',\n  \"MM-05\": 'Tanintaryi',\n  \"MM-06\": 'Yangon',\n};\n\nconst reverseStateCodes = {};\nObject.keys(STATE_CODES).map((key, index) => {\n  reverseStateCodes[STATE_CODES[key]] = key;\n  return null;\n});\nexport const STATE_CODES_REVERSE = reverseStateCodes;\n\nconst stateCodes = [];\nObject.keys(STATE_CODES).map((key, index) => {\n  stateCodes.push({code: key, name: STATE_CODES[key]});\n  return null;\n});\nexport const STATE_CODES_ARRAY = stateCodes;\n\nexport const DISTRICTS_ARRAY = [\n  \n];\n","import {STATE_CODES} from '../constants';\nimport i18n from 'i18next';\n\nimport moment from 'moment';\n\nconst months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nexport const getStateName = (code) => {\n  return i18n.t(`statenames.${STATE_CODES[code.toUpperCase()].toLowerCase()}`);\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+06:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = Number(unformattedDate.slice(0, 2));\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return i18n.t(`absoluteDate`, {\n    time: time.slice(0, 5),\n    day: day,\n    month: i18n.t(months[month]),\n  });\n};\n\nconst validateCTS = (data = []) => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      return moment(d.date, \"DD/MM/yyyy\").toDate() < today;\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return validateCTS(timeseries).map((stat) => ({\n    date: moment(stat.date, \"DD/MM/yyyy\").toDate(),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n    // Active = Confimed - Recovered - Deceased\n    totalactive:\n      +stat.totalconfirmed - +stat.totalrecovered - +stat.totaldeceased,\n    dailyactive:\n      +stat.dailyconfirmed - +stat.dailyrecovered - +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\nexport const formatNumber = (value) => {\n  const numberFormatter = new Intl.NumberFormat('en-US');\n  return isNaN(value) ? '-' : numberFormatter.format(value);\n};\n\nexport const parseStateTimeseries = ({states_daily: data}) => {\n  const statewiseSeries = Object.keys(STATE_CODES).reduce((a, c) => {\n    a[c] = [];\n    return a;\n  }, {});\n\n  const today = moment();\n  for (let i = 0; i < data.length; i += 3) {\n    const date = moment(data[i].date, \"DD/MM/yyyy\");\n    // Skip data from the current day\n    if (date.isBefore(today, 'Date')) {\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\n        const stateCode = k.toLowerCase();\n        const prev = v[v.length - 1] || {};\n        // Parser\n        const dailyconfirmed = +data[i][stateCode] || 0;\n        const dailyrecovered = +data[i + 1][stateCode] || 0;\n        const dailydeceased = +data[i + 2][stateCode] || 0;\n        const totalconfirmed = +data[i][stateCode] + (prev.totalconfirmed || 0);\n        const totalrecovered =\n          +data[i + 1][stateCode] + (prev.totalrecovered || 0);\n        const totaldeceased =\n          +data[i + 2][stateCode] + (prev.totaldeceased || 0);\n        // Push\n        v.push({\n          date: date.toDate(),\n          dailyconfirmed: dailyconfirmed,\n          dailyrecovered: dailyrecovered,\n          dailydeceased: dailydeceased,\n          totalconfirmed: totalconfirmed,\n          totalrecovered: totalrecovered,\n          totaldeceased: totaldeceased,\n          // Active = Confimed - Recovered - Deceased\n          totalactive: totalconfirmed - totalrecovered - totaldeceased,\n          dailyactive: dailyconfirmed - dailyrecovered - dailydeceased,\n        });\n      });\n    }\n  }\n\n  return statewiseSeries;\n};\n","import {defaultOptions, xAxisDefaults, yAxisDefaults} from './chart-defaults';\n\nimport {getStateName} from '../../utils/commonfunctions';\n\nimport deepmerge from 'deepmerge';\nimport moment from 'moment';\nimport React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction AllStatesChart(props) {\n  const {t} = useTranslation();\n  const dates = [];\n  const chartReference = React.createRef();\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n\n  props.data.forEach((data) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        dates.push(moment(data.date.trim(), 'DD/MM/yyyy'));\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1])\n          : 0;\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n      statesData.get(key).push(previousValue + currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1] < b[1][b[1].length - 1] ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#718af0',\n    '#7dd6fa',\n    '#59b3aa',\n    '#9bc26b',\n    '#e5d22f',\n    '#ffb041',\n    '#ff8a66',\n    '#db6b8f',\n    '#bd66cc',\n    '#8e8e8e',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      borderWidth: 2,\n      data: statesData.get(key),\n      borderCapStyle: 'round',\n      pointBackgroundColor: colors[index],\n      label: getStateName(key),\n      borderColor: colors[index],\n      pointHoverRadius: 0.5,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: datasets,\n  };\n\n  const options = deepmerge(defaultOptions, {\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0,\n      },\n    },\n    legend: {\n      labels: {\n        boxWidth: 20,\n        fontSize: 11,\n      },\n    },\n    scales: {\n      yAxes: [\n        deepmerge(yAxisDefaults, {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        }),\n      ],\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        }),\n      ],\n    },\n  });\n\n  function toggleSelection() {\n    // Get reference of chartInstance and update it\n    const ci = chartReference.current.chartInstance;\n    for (let i = 0; i < ci.data.datasets.length; i++) {\n      const meta = ci.getDatasetMeta(i);\n      meta.hidden =\n        meta.hidden === null\n          ? !chartReference.current.chartInstance.data.datasets[i].hidden\n          : null;\n    }\n    ci.update();\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} ref={chartReference} />\n      </div>\n      <div className=\"chart-note\" style={{marginTop: '0px', height: '30px'}}>\n        <button onClick={toggleSelection}>{t(\"Toggle Selection\")}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AllStatesChart;\n","import {\n  defaultOptions,\n  xAxisDefaults,\n  yAxisDefaults,\n  formatNumber,\n} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport moment from 'moment';\nimport React from 'react';\nimport {Bar} from 'react-chartjs-2';\n\nfunction DailyConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 0) {\n      dates.push(moment(data.date.trim(), 'DD/MM/yyyy').format('DD MMM'));\n      confirmed.push(data.dailyconfirmed);\n      recovered.push(data.dailyrecovered);\n      deceased.push(data.dailydeceased);\n    }\n  });\n\n  const barDataSet = {\n    labels: dates,\n    datasets: [\n      {\n        data: recovered,\n        label: 'Recovered',\n        backgroundColor: '#7ebf80',\n      },\n      {\n        data: deceased,\n        label: 'Deceased',\n        backgroundColor: '#6c757d',\n      },\n      {\n        data: confirmed,\n        label: 'confirmed',\n        backgroundColor: '#ff6862',\n      },\n    ],\n  };\n\n  const options = deepmerge(defaultOptions, {\n    tooltips: {\n      mode: 'index',\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          stacked: true,\n        }),\n      ],\n      yAxes: [\n        deepmerge(yAxisDefaults, {\n          stacked: true,\n          ticks: {\n            callback: (value) => formatNumber(value),\n          },\n        }),\n      ],\n    },\n  });\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Bar data={barDataSet} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default DailyConfirmedChart;\n","import {defaultOptions, formatNumber} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Doughnut} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction GenderChart(props) {\n  const {t} = useTranslation();\n  \n  let male = 0;\n  let female = 0;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.gender === 'M') {\n      male++;\n    } else if (patient.gender === 'F') {\n      female++;\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: [male, female],\n        backgroundColor: ['#6497f3', '#ea6e9a'],\n        label: 'Hola',\n      },\n    ],\n    labels: [t('Male'), t('Female')],\n  };\n\n  const chartOptions = deepmerge(defaultOptions, {\n    tooltips: {\n      mode: 'point',\n      position: 'nearest',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return formatNumber(currentValue) + ' (' + formatNumber(percentage) + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  });\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">\n        {t(\"Sample size number of patients\", {size: (male + female)})}\n      </div>\n    </div>\n  );\n}\n\nexport default GenderChart;\n","import {defaultOptions, xAxisDefaults, yAxisDefaults} from './chart-defaults';\n\nimport {getStateName} from '../../utils/commonfunctions';\n\nimport deepmerge from 'deepmerge';\nimport moment from 'moment';\nimport React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction GrowthTrendChart(props) {\n  const {t} = useTranslation();\n  const dates = [];\n\n  defaults.global.elements.line.fill = false;\n\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n  const statesDailyData = new Map();\n\n  props.data.forEach((data, index) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        dates.push(moment(data.date.trim(), 'DD MMM'));\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n\n      if (currentValue === 0 && !statesData.has(key)) {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n        statesDailyData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1].x)\n          : 0;\n\n      const stateData = statesDailyData.get(key);\n      let weekSum = 0;\n      for (let i = 1; i <= 7; ++i) {\n        const idx = stateData.length - i;\n        if (idx >= 0) {\n          weekSum += stateData[idx];\n        }\n      }\n      statesData.get(key).push({x: previousValue + currentValue, y: weekSum});\n      statesDailyData.get(key).push(currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1].x < b[1][b[1].length - 1].x ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#ff073a',\n    '#28a745',\n    '#342ead',\n    '#7D5BA6',\n    '#DD7596',\n    '#16c8f0',\n    '#f67575',\n    '#2b580c',\n    '#9D44B5',\n    '#91132d',\n    '#6D9DC5',\n    '#2b580c',\n    '#6c757d',\n    '#f67575',\n    '#d4f8e8',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      data: statesData.get(key),\n      label: getStateName(key),\n      order: index,\n      borderWidth: 1.0,\n      borderCapStyle: 'round',\n      borderColor: colors[index],\n      pointBackgroundColor: colors[index],\n      pointHoverRadius: 1.0,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    datasets: datasets,\n  };\n\n  const options = deepmerge(defaultOptions, {\n    responsive: true,\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        cubicInterpolationMode: 'monotone',\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        deepmerge(yAxisDefaults, {\n          type: 'logarithmic',\n          ticks: {\n            beginAtZero: true,\n            min: 1,\n            max: 2000,\n            precision: 0,\n            callback: function (value, index, values) {\n              return Number(value.toString());\n            },\n          },\n          scaleLabel: {\n            display: true,\n            labelString: t('New Cases (since last 7 days)'),\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        }),\n      ],\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          type: 'logarithmic',\n          ticks: {\n            beginAtZero: true,\n            min: 0,\n            max: 2000,\n            precision: 0,\n            callback: function (value, index, values) {\n              return Number(value.toString());\n            },\n          },\n          scaleLabel: {\n            display: true,\n            labelString: t('Total Cases'),\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        }),\n      ],\n    },\n  });\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default GrowthTrendChart;\n","import {defaultOptions, formatNumber} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Doughnut} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction NationalityChart(props) {\n  const {t} = useTranslation();\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const nationality = {};\n\n  props.data.forEach((patient) => {\n    if (!patient.nationality) {\n      return;\n    }\n    if (!nationality.hasOwnProperty(patient.nationality.toLowerCase())) {\n      nationality[patient.nationality.toLowerCase()] = 0;\n    }\n    nationality[patient.nationality.toLowerCase()]++;\n  });\n\n  // delete nationality.india;\n  const data = [];\n  const labels = [];\n\n  Object.keys(nationality).forEach((country) => {\n    if (country) {\n      labels.push(country.toUpperCase());\n      data.push(nationality[country]);\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: data,\n        backgroundColor: [\n          '#ff8a66',\n          '#718af0',\n          '#7dd6fa',\n          '#59b3aa',\n          '#9bc26b',\n          '#e5d22f',\n          '#ffb041',\n          '#db6b8f',\n          '#bd66cc',\n          '#8e8e8e',\n        ],\n      },\n    ],\n    labels: labels,\n  };\n\n  const chartOptions = deepmerge(defaultOptions, {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    legend: {\n      display: false,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return formatNumber(currentValue) + ' (' + formatNumber(percentage) + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  });\n\n  const sampleSize = data.reduce((a, b) => a + b, 0);\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">\n        {t(\"Sample size number of patients\", {size: sampleSize})}\n      </div>\n    </div>\n  );\n}\n\nexport default NationalityChart;\n","import {defaultOptions, xAxisDefaults, yAxisDefaults} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport moment from 'moment';\nimport React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction TotalConfirmedChart(props) {\n  const {t} = useTranslation();\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 0) {\n      dates.push(moment(data.date.trim(), 'DD/MM/YYYY'));\n      confirmed.push(data.totalconfirmed);\n      recovered.push(data.totalrecovered);\n      deceased.push(data.totaldeceased);\n    }\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: [\n      {\n        borderWidth: 2,\n        data: confirmed,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#ff6862',\n        label: t('confirmed.full'),\n        borderColor: '#ff6862',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: recovered,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#7ebf80',\n        label: t('recovered.full'),\n        borderColor: '#7ebf80',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: deceased,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#6c757d',\n        label: t('deceased.full'),\n        borderColor: '#6c757d',\n        pointHoverRadius: 2,\n      },\n    ],\n  };\n\n  const options = deepmerge(defaultOptions, {\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0.1,\n      },\n    },\n    scales: {\n      yAxes: [\n        deepmerge(yAxisDefaults, {\n          scaleLabel: {\n            display: false,\n            labelString: t('Total Cases'),\n          },\n        }),\n      ],\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n        }),\n      ],\n    },\n  });\n\n  if (props.mode) {\n    options.scales.yAxes = [\n      {\n        type: 'logarithmic',\n        ticks: {\n          min: 0,\n          max: 10000,\n          callback: function (value, index, values) {\n            if (value === 10000) return '10000';\n            if (value === 2000) return '2500';\n            if (value === 500) return '500';\n            if (value === 100) return '100';\n            if (value === 20) return '25';\n            if (value === 5) return '5';\n            if (value === 0) return '0';\n            return null;\n          },\n        },\n        scaleLabel: {\n          display: false,\n          labelString: t('Total Cases'),\n        },\n      },\n    ];\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default TotalConfirmedChart;\n","import AgeChart from './Charts/agechart';\nimport AllStatesChart from './Charts/allstates';\nimport DailyConfirmedChart from './Charts/dailyconfirmedchart';\nimport GenderChart from './Charts/genderchart';\nimport GrowthTrendChart from './Charts/growthtrendchart';\nimport NationalityChart from './Charts/nationalitychart';\nimport TotalConfirmedChart from './Charts/totalconfirmedchart';\n\nimport axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nfunction DeepDive() {\n  const {t} = useTranslation();\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState([]);\n  const [rawData, setRawData] = useState([]);\n  const [statesTimeSeries, setStatesTimeSeries] = useState([]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        response,\n        rawDataResponse,\n        stateDailyResponse,\n      ] = await Promise.all([\n        axios.get('https://thantthet.github.io/covid19-api/data.json'),\n        axios.get('https://thantthet.github.io/covid19-api/raw_data.json'),\n        axios.get('https://thantthet.github.io/covid19-api/states_daily.json'),\n      ]);\n      setTimeseries(response.data.cases_time_series);\n      setStatesTimeSeries(stateDailyResponse.data.states_daily);\n      setRawData(rawDataResponse.data.raw_data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"cards-container\">\n      <section className=\"cards\">\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <TotalConfirmedChart title={t(\"Total Cases\")} timeseries={timeseries} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <DailyConfirmedChart title={t(\"Daily Cases\")} timeseries={timeseries} />\n        </div>\n\n        <div\n          className=\"card card-big fadeInUp\"\n          style={{animationDelay: '0.7s'}}\n        >\n          <AllStatesChart\n            title={t(\"Total Cases by State\")}\n            data={statesTimeSeries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <GrowthTrendChart\n            title={t(\"States - Growth Trend\")}\n            data={statesTimeSeries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <GenderChart title={t(\"Patient Gender\")} data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AgeChart title={t(\"Patients by Age\")} data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <NationalityChart title={t(\"Patients by  Nationality\")} data={rawData} />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default DeepDive;\n","import React from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nfunction Footer(props) {\n  const {t} = useTranslation();\n  return (\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n      <h5>{t(\"We stand with everyone fighting on the frontlines\")}</h5>\n      <a\n        href=\"https://github.com/thantthet/covid19myanmar-react\"\n        className=\"button github\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.GitHub />\n        <span>A fork of covid19india.org</span>\n      </a>\n\n      <a\n        className=\"button excel\"\n        href=\"http://covidmyanmar.com\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.Database />\n        <span>Live data from covidmyanmar.com</span>\n      </a>\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n","import {formatNumber} from '../utils/commonfunctions';\n\nimport React, {useState} from 'react';\nimport {useEffectOnce} from 'react-use';\nimport {useTranslation} from 'react-i18next';\n\nfunction Level(props) {\n  const {t} = useTranslation();\n  const [data, setData] = useState(props.data);\n\n  useEffectOnce(() => {\n    setData({\n      active: +props.data.active,\n      confirmed: +props.data.confirmed,\n      recovered: +props.data.recovered,\n      deaths: +props.data.deaths,\n      deltaconfirmed: +props.data.deltaconfirmed,\n      deltadeaths: +props.data.deltadeaths,\n      deltarecovered: +props.data.deltarecovered,\n    });\n  });\n\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>{(t(\"confirmed.full\"))}</h5>\n        <h4>\n          [\n          {isNaN(data.deltaconfirmed)\n            ? ''\n            : data.deltaconfirmed > 0\n            ? '+' + formatNumber(data.deltaconfirmed)\n            : '+0'}\n          ]\n        </h4>\n        <h1>{formatNumber(data.confirmed)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">{t(\"active.full\")}</h5>\n        <h4>&nbsp;</h4>\n        <h1 className=\"title has-text-info\">{formatNumber(data.active)}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">{t(\"recovered.full\")}</h5>\n        <h4>\n          [\n          {isNaN(data.deltarecovered)\n            ? ''\n            : data.deltarecovered > 0\n            ? '+' + formatNumber(data.deltarecovered)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">\n          {formatNumber(data.recovered)}{' '}\n        </h1>\n      </div>\n\n      <div\n        className=\"level-item is-gray fadeInUp\"\n        style={{animationDelay: '1.3s'}}\n      >\n        <h5 className=\"heading\">{t(\"deceased.full\")}</h5>\n        <h4>\n          [\n          {isNaN(data.deltadeaths)\n            ? ''\n            : data.deltadeaths > 0\n            ? '+' + formatNumber(data.deltadeaths)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{formatNumber(data.deaths)}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Level);\n","/* Source: https://observablehq.com/@d3/color-legend */\n\nimport * as d3 from 'd3';\n\nfunction legend({\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n} = {}) {\n  const svg = d3\n    .create('svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', [0, 0, width, height])\n    .style('overflow', 'visible')\n    .style('display', 'block');\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\n      );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\n        ).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL());\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = d3\n          .range(n)\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? d3.format(tickFormat)\n        : tickFormat;\n\n    x = d3\n      .scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = d3.range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    x = d3\n      .scaleBand()\n      .domain(color.domain())\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.domain())\n      .join('rect')\n      .attr('x', x)\n      .attr('y', marginTop)\n      .attr('width', Math.max(0, x.bandwidth() - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', color);\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .append('g')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .call(\n      d3\n        .axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .call(tickAdjust)\n    .call((g) => g.select('.domain').remove())\n    .call((g) =>\n      g\n        .append('text')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  const canvas = document.createElement('canvas');\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n\nexport default legend;\n","import legend from './legend';\n\nimport {MAP_TYPES} from '../constants';\n\nimport * as d3 from 'd3';\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as topojson from 'topojson';\nimport {useTranslation} from 'react-i18next';\n\nconst propertyFieldMap = {\n  country: 'ST',\n  state: 'DT',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n  setSelectedRegion,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const choroplethMap = useRef(null);\n  const choroplethLegend = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const svg = d3.select(choroplethMap.current);\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n\n      // Set size of the map\n      let path;\n      let width;\n      let height;\n      if (!svg.attr('viewBox')) {\n        const widthStyle = parseInt(svg.style('width'));\n        if (isCountryLoaded) projection.fitWidth(widthStyle, topology);\n        else {\n          const heightStyle = parseInt(svg.style('height'));\n          projection.fitSize([widthStyle, heightStyle], topology);\n        }\n        path = d3.geoPath(projection);\n        const bBox = path.bounds(topology);\n        width = +bBox[1][0];\n        height = +bBox[1][1];\n        svg.attr('viewBox', `0 0 ${width} ${height}`);\n      }\n      const bBox = svg.attr('viewBox').split(' ');\n      width = +bBox[2];\n      height = +bBox[3];\n      projection.fitSize([width, height], topology);\n      path = d3.geoPath(projection);\n\n      /* Legend */\n      const svgLegend = d3.select(choroplethLegend.current);\n      svgLegend.selectAll('*').remove();\n      const redInterpolator = (t) => d3.interpolateReds(t * 0.85);\n      const colorScale = d3.scaleSequential(\n        [0, statistic.maxConfirmed],\n        redInterpolator\n      );\n      // Colorbar\n      const widthLegend = parseInt(svgLegend.style('width'));\n      const margin = {left: 0.02 * widthLegend, right: 0.02 * widthLegend};\n      const barWidth = widthLegend - margin.left - margin.right;\n      const heightLegend = +svgLegend.attr('height');\n      svgLegend\n        .append('g')\n        .style('transform', `translateX(${margin.left}px)`)\n        .append(() =>\n          legend({\n            color: colorScale,\n            title: t('map.legends.confirmedcases'),\n            width: barWidth,\n            height: 0.8 * heightLegend,\n            ticks: 6,\n            tickFormat: function (d, i, n) {\n              if (!Number.isInteger(d)) return;\n              if (i === n.length - 1) return d + '+';\n              return d;\n            },\n          })\n        );\n      svgLegend.attr('viewBox', `0 0 ${widthLegend} ${heightLegend}`);\n\n      /* Draw map */\n      let onceTouchedRegion = null;\n      const g = svg.append('g').attr('class', mapMeta.graphObjectName);\n      g.append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .join('path')\n        .attr('class', 'path-region')\n        .attr('fill', function (d) {\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\n          const color = n === 0 ? '#ffffff' : colorScale(n);\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseenter', (d) => {\n          handleMouseEnter(d.properties[propertyField]);\n        })\n        .on('mouseleave', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', handleClick)\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const value = mapData[d.properties[propertyField]] || 0;\n          return (\n            Number(\n              parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2)\n            ).toString() +\n            '% from ' +\n            toTitleCase(d.properties[propertyField])\n          );\n        });\n\n      g.append('path')\n        .attr('class', 'borders')\n        .attr('stroke', '#ff073a20')\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n\n      const handleMouseEnter = (name) => {\n        try {\n          setSelectedRegion(name);\n          setHoveredRegion(name, mapMeta);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      function handleClick(d) {\n        d3.event.stopPropagation();\n        if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE) return;\n        changeMap(d.properties[propertyField]);\n      }\n\n      // Reset on tapping outside map\n      svg.on('click', () => {\n        setSelectedRegion(null);\n        if (mapMeta.mapType === MAP_TYPES.COUNTRY)\n          setHoveredRegion('Total', mapMeta);\n      });\n    },\n    [\n      mapData,\n      mapMeta,\n      statistic.total,\n      statistic.maxConfirmed,\n      changeMap,\n      setHoveredRegion,\n      setSelectedRegion,\n      isCountryLoaded,\n      t,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, ready]);\n\n  const highlightRegionInMap = (name) => {\n    const paths = d3.selectAll('.path-region');\n    paths.classed('map-hover', (d, i, nodes) => {\n      const propertyField =\n        propertyFieldMap['state'] in d.properties\n          ? propertyFieldMap['state']\n          : propertyFieldMap['country'];\n      if (name === d.properties[propertyField]) {\n        nodes[i].parentNode.appendChild(nodes[i]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    highlightRegionInMap(selectedRegion);\n  }, [svgRenderCount, selectedRegion]);\n\n  return (\n    <div>\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n        <svg\n          id=\"chart\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethMap}\n        ></svg>\n      </div>\n      <div\n        className=\"svg-parent legend fadeInUp\"\n        style={{animationDelay: '2.5s'}}\n      >\n        <svg\n          id=\"legend\"\n          height=\"65\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethLegend}\n        ></svg>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(ChoroplethMap);\n","import ChoroplethMap from './choropleth';\n\nimport {MAP_TYPES, MAP_META} from '../constants';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  formatNumber,\n} from '../utils/commonfunctions';\n\nimport {formatDistance} from 'date-fns';\nimport React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport * as Icon from 'react-feather';\nimport {Link} from 'react-router-dom';\n\nconst getRegionFromState = (state) => {\n  if (!state) return;\n  const region = {...state};\n  if (!region.name) region.name = region.state;\n  return region;\n};\n\nconst getRegionFromDistrict = (districtData, name) => {\n  if (!districtData) return;\n  const region = {...districtData};\n  if (!region.name) region.name = name;\n  return region;\n};\n\nfunction MapExplorer({\n  mapMeta,\n  states,\n  stateDistrictWiseData,\n  stateTestData,\n  regionHighlighted,\n  onMapHighlightChange,\n  isCountryLoaded,\n  anchor,\n  setAnchor,\n}) {\n  const {t} = useTranslation();\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [panelRegion, setPanelRegion] = useState(getRegionFromState(states[0]));\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState(\n    getRegionFromState(states[0])\n  );\n  const [currentMap, setCurrentMap] = useState(mapMeta);\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = {total: 0, maxConfirmed: 0};\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        const confirmed = parseInt(state.confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n\n        acc[state.state] = state.confirmed;\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n        acc[district] = districtWiseData[district].confirmed;\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        const region = getRegionFromState(\n          states.find((state) => name === state.state)\n        );\n        setCurrentHoveredRegion(region);\n        setPanelRegion(region);\n        onMapHighlightChange(region);\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            deaths: 0,\n            recovered: 0,\n          };\n        }\n        const currentHoveredRegion = getRegionFromDistrict(districtData, name);\n        const panelRegion = getRegionFromState(\n          states.find((state) => currentMap.name === state.state)\n        );\n        setPanelRegion(panelRegion);\n        currentHoveredRegion.statecode = panelRegion.statecode;\n        setCurrentHoveredRegion(currentHoveredRegion);\n        if (onMapHighlightChange) onMapHighlightChange(panelRegion);\n      }\n    },\n    [states, stateDistrictWiseData, onMapHighlightChange]\n  );\n\n  useEffect(() => {\n    if (regionHighlighted === undefined || regionHighlighted === null) return;\n\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = MAP_META.Myanmar;\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setHoveredRegion(region.name, newMap);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = MAP_META[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, setHoveredRegion]);\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = MAP_META[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setSelectedRegion(null);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[0].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const {districtData} = stateDistrictWiseData[name] || {districtData:{}};\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n        setSelectedRegion(topDistrict);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n\n  const {name, lastupdatedtime} = currentHoveredRegion;\n\n  // useEffect(() => {\n  //   setTestObj(\n  //     stateTestData.find(\n  //       (obj) => obj.state === panelRegion.name && obj.totaltested !== ''\n  //     )\n  //   );\n  // }, [panelRegion, stateTestData, testObj]);\n\n  return (\n    <div\n      className={`MapExplorer fadeInUp ${\n        anchor === 'mapexplorer' ? 'stickied' : ''\n      }`}\n      style={{\n        animationDelay: '1.5s',\n        display: anchor === 'timeseries' ? 'none' : '',\n      }}\n    >\n      {window.innerWidth > 769 && (\n        <div\n          className={`anchor ${anchor === 'mapexplorer' ? 'stickied' : ''}`}\n          onClick={() => {\n            setAnchor(anchor === 'mapexplorer' ? null : 'mapexplorer');\n          }}\n        >\n          <Icon.Anchor />\n        </div>\n      )}\n      <div className=\"header\">\n        <h1>{t(\"Map\", {name: t(currentMap.name)})}</h1>\n        <h6>\n        {window.innerWidth <= 769 ?\n        (currentMap.mapType === MAP_TYPES.COUNTRY ? t('map.tap.state') : t('map.tap.district'))\n        : (currentMap.mapType === MAP_TYPES.COUNTRY ? t('map.hover.state') : t('map.hover.district'))}\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div className=\"stats fadeInUp\" style={{animationDelay: '2s'}}>\n          <h5>{window.innerWidth <= 769 ? t('confirmed.short') : t('confirmed.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltaconfirmed)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-blue fadeInUp\"\n          style={{animationDelay: '2.1s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? t('active.short') : t('active.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.active)}</h1>\n            <h6>{` `}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-green fadeInUp\"\n          style={{animationDelay: '2.2s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? t('recovered.short') : t('recovered.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltarecovered)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-gray fadeInUp\"\n          style={{animationDelay: '2.3s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? t('deceased.short') : t('deceased.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltadeaths)}`}</h6>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2>{currentMap.mapType === MAP_TYPES.COUNTRY ? t(`statenames.${name.toLowerCase()}`) : name}</h2>\n        {lastupdatedtime && (\n          <div\n            className={`last-update ${\n              currentMap.mapType === MAP_TYPES.STATE\n                ? 'district-last-update'\n                : 'state-last-update'\n            }`}\n          >\n            <h6>{t(\"Last updated\")}</h6>\n            <h3\n              title={\n                isNaN(Date.parse(formatDate(lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(lastupdatedtime)\n              }\n            >\n              {t('ago', {time: isNaN(Date.parse(formatDate(lastupdatedtime)))\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(lastupdatedtime)),\n                    new Date()\n                  )})}\n            </h3>\n          </div>\n        )}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentHoveredRegion.name !== currentMap.name ? (\n          <h1 className=\"district-confirmed\">\n            {currentMapData[currentHoveredRegion.name]\n              ? currentMapData[currentHoveredRegion.name]\n              : 0}\n            <br />\n            <span style={{fontSize: '0.75rem', fontWeight: 600}}>\n              {t(\"confirmed.full\")}\n            </span>\n          </h1>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('Myanmar')}\n          >\n            {t(\"Back\")}\n          </div>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <Link to={`state/${currentHoveredRegion.statecode}`}>\n            <div className=\"button state-page-button\">\n              <abbr>{t(\"Visit state page\")}</abbr>\n              <Icon.ArrowRightCircle />\n            </div>\n          </Link>\n        ) : null}\n      </div>\n\n      <ChoroplethMap\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={setHoveredRegion}\n        changeMap={switchMapToState}\n        selectedRegion={selectedRegion}\n        setSelectedRegion={setSelectedRegion}\n        isCountryLoaded={isCountryLoaded}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(MapExplorer);\n","import * as d3 from 'd3';\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\n\nfunction Minigraph({timeseries}) {\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  useEffect(() => {\n    setTimeSeriesData(timeseries.slice(timeseries.length - 20));\n  }, [timeseries]);\n\n  const graphData = useCallback((data) => {\n    if (data.length <= 1) return 0;\n\n    const margin = {top: 0, right: 10, bottom: 30, left: 0};\n    const chartRight = 100 - margin.right;\n    const chartBottom = 100 - margin.bottom;\n\n    const svg1 = d3.select(svgRef1.current);\n    const svg2 = d3.select(svgRef2.current);\n    const svg3 = d3.select(svgRef3.current);\n    const svg4 = d3.select(svgRef4.current);\n\n    data.forEach((d) => {\n      d['dailyactive'] = d.dailyconfirmed - d.dailyrecovered - d.dailydeceased;\n    });\n\n    const xScale = d3\n      .scaleTime()\n      .domain(d3.extent(data, (d) => d.date))\n      .range([margin.left, chartRight]);\n\n    const svgArray = [svg1, svg2, svg3, svg4];\n    const dataTypes = [\n      'dailyconfirmed',\n      'dailyactive',\n      'dailyrecovered',\n      'dailydeceased',\n    ];\n    const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\n\n    const dailyMin = d3.min(data, (d) => d.dailyactive);\n    const dailyMax = d3.max(data, (d) =>\n      Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n    );\n    const domainMinMax = Math.max(-dailyMin, dailyMax);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([-domainMinMax, domainMinMax])\n      .range([chartBottom, margin.top]);\n\n    svgArray.forEach((svg, i) => {\n      const type = dataTypes[i];\n      const color = colors[i];\n\n      const path = svg\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', color + '99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => xScale(d.date))\n            .y((d) => yScale(d[type]))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength = path.node().getTotalLength();\n      path\n        .attr('stroke-dasharray', totalLength + ' ' + totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', color)\n        .attr('stroke', color)\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => xScale(d.date))\n        .attr('cy', (d) => yScale(d[type]))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n    });\n  }, []);\n\n  useEffect(() => {\n    graphData(timeSeriesData);\n  }, [timeSeriesData, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\n        <svg\n          ref={svgRef1}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '1.5s'}}\n      >\n        <svg\n          ref={svgRef2}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '1.6s'}}\n      >\n        <svg\n          ref={svgRef3}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '1.7s'}}\n      >\n        <svg\n          ref={svgRef4}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Minigraph);\n","import {\n  formatDate,\n  formatDateAbsolute,\n  formatNumber,\n} from '../utils/commonfunctions';\n\nimport {formatDistance} from 'date-fns';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {Tooltip} from 'react-lightweight-tooltip';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\n\nfunction Row(props) {\n  const {t} = useTranslation();\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn')\n      ? localStorage.getItem('district.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending')\n      ? localStorage.getItem('district.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const tooltipStyles = {\n    tooltip: {\n      background: '#000',\n      borderRadius: '10px',\n      fontSize: '.8em',\n      left: '250%',\n      opacity: 0.65,\n    },\n    wrapper: {\n      cursor: 'cursor',\n      display: 'inline-block',\n      position: 'relative',\n      textAlign: 'center',\n    },\n    arrow: {\n      left: '37%',\n    },\n  };\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n    setShowDistricts(!showDistricts);\n  };\n\n  const handleTooltip = (e) => {\n    e.stopPropagation();\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === 'district'\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === 'district'\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={`state ${props.total ? 'is-total' : ''} ${\n          props.index % 2 === 0 ? 'is-odd' : ''\n        }`}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        onClick={!props.total ? handleReveal : null}\n        style={{background: props.index % 2 === 0 ? '#f8f9fa' : ''}}\n      >\n        <td style={{fontWeight: 600}}>\n          <div className=\"table__title-wrapper\">\n            <span\n              className={`dropdown ${\n                props.reveal && showDistricts\n                  ? 'rotateRightDown'\n                  : 'rotateDownRight'\n              }`}\n              onClick={() => {\n                handleReveal();\n              }}\n            >\n              <Icon.ChevronDown />\n            </span>\n            <span className=\"actual__title-wrapper\">\n              {t(`statenames.${state.state.toLowerCase()}`)}\n              {state.statenotes && (\n                <span onClick={handleTooltip}>\n                  <Tooltip\n                    content={[`${state.statenotes}`]}\n                    styles={tooltipStyles}\n                  >\n                    <Icon.Info />\n                  </Tooltip>\n                </span>\n              )}\n            </span>\n          </div>\n        </td>\n        <td>\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\n            {state.deltaconfirmed > 0 && <Icon.ArrowUp />}\n            {state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.confirmed) === 0\n              ? '-'\n              : formatNumber(state.confirmed)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          {parseInt(state.active) === 0 ? '-' : formatNumber(state.active)}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          <span className=\"deltas\" style={{color: '#28a745'}}>\n            {state.deltarecovered > 0 && <Icon.ArrowUp />}\n            {state.deltarecovered > 0 ? `${state.deltarecovered}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.recovered) === 0\n              ? '-'\n              : formatNumber(state.recovered)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          <span className=\"deltas\" style={{color: '#6c757d'}}>\n            {state.deltadeaths > 0 && <Icon.ArrowUp />}\n            {state.deltadeaths > 0 ? `${state.deltadeaths}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.deaths) === 0 ? '-' : formatNumber(state.deaths)}\n          </span>\n        </td>\n      </tr>\n\n      {showDistricts && (\n        <React.Fragment>\n          <tr className={'state-last-update'}>\n            <td colSpan={2}>\n              <div className=\"last-update\">\n                <h6>{t(\"Last updated\")}&nbsp;</h6>\n                <h6\n                  title={\n                    isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                      ? ''\n                      : formatDateAbsolute(props.state.lastupdatedtime)\n                  }\n                >\n                  {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                    ? ''\n                    : `${formatDistance(\n                        new Date(formatDate(props.state.lastupdatedtime)),\n                        new Date()\n                      )} ago`}\n                </h6>\n              </div>\n            </td>\n          </tr>\n\n          <tr className={`district-heading`}>\n            <td onClick={(e) => handleSort('district')}>\n              <div className=\"heading-content\">\n                <abbr title=\"District\">{t(\"District\")}</abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'district' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </td>\n            <td onClick={(e) => handleSort('confirmed')}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                  title=\"Confirmed\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                    ? t('confirmed.shorter')\n                    : t('confirmed.short')\n                  : t('confirmed.full')}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </td>\n            <td className=\"state-page-link\" colSpan={3}>\n              <Link to={`state/${state.statecode}`}>\n                <div>\n                  <abbr>{t(\"Visit state page\")}</abbr>\n                  <Icon.ArrowRightCircle />\n                </div>\n              </Link>\n            </td>\n          </tr>\n        </React.Fragment>\n      )}\n\n      {sortedDistricts &&\n        showDistricts &&\n        Object.keys(sortedDistricts)\n          .filter((district) => district.toLowerCase() !== 'unknown')\n          .map((district, index) => {\n            if (district.toLowerCase() !== 'unknown') {\n              return (\n                <tr\n                  key={index}\n                  className={`district ${index % 2 === 0 ? 'is-odd' : ''}`}\n                  style={{\n                    background: index % 2 === 0 ? '#f8f9fa' : '',\n                  }}\n                  onMouseEnter={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                  onMouseLeave={() => props.onHighlightDistrict?.()}\n                >\n                  <td style={{fontWeight: 600}}>{district}</td>\n                  <td>\n                    <span className=\"deltas\" style={{color: '#ff073a'}}>\n                      {sortedDistricts[district].delta.confirmed > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.confirmed > 0\n                        ? `${sortedDistricts[district].delta.confirmed}`\n                        : ''}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {formatNumber(sortedDistricts[district].confirmed)}\n                    </span>\n                  </td>\n                </tr>\n              );\n            }\n            return null;\n          })}\n\n      {sortedDistricts?.Unknown && showDistricts && (\n        <React.Fragment>\n          <tr className={`district`}>\n            <td className=\"unknown\" style={{fontWeight: 600}}>\n              Unknown\n              <Tooltip\n                content={['Awaiting patient-level details from State Bulletin']}\n                styles={tooltipStyles}\n              >\n                <Icon.Info />\n              </Tooltip>\n            </td>\n            <td>\n              <span className=\"deltas\" style={{color: '#ff073a'}}>\n                {sortedDistricts['Unknown'].delta.confirmed > 0 && (\n                  <Icon.ArrowUp />\n                )}\n                {sortedDistricts['Unknown'].delta.confirmed > 0\n                  ? `${sortedDistricts['Unknown'].delta.confirmed}`\n                  : ''}\n              </span>\n              <span className=\"table__count-text\">\n                {formatNumber(sortedDistricts['Unknown'].confirmed)}\n              </span>\n            </td>\n          </tr>\n        </React.Fragment>\n      )}\n\n      <tr\n        className={`spacer`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(Row);\n","import Row from './row';\n\nimport React, {useState, useEffect} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nconst isEqual = () => {\n  return true;\n};\n\nfunction Table(props) {\n  const {t} = useTranslation();\n  const [states, setStates] = useState(props.states);\n  const [revealedStates, setRevealedStates] = useState({});\n  const [districts, setDistricts] = useState({});\n  const [count, setCount] = useState(0);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('state.sortColumn')\n      ? localStorage.getItem('state.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('state.isAscending')\n      ? localStorage.getItem('state.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9));\n    } else {\n      setStates(props.states);\n    }\n  }, [props.states, props.summary]);\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        props.states.reduce((a, state) => {\n          return {...a, [state.state]: false};\n        }, {})\n      );\n    }\n  }, [props.states]);\n\n  useEffect(() => {\n    if (states.length > 0) {\n      // slice to ignore the first item which is the total count\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\n    }\n  }, [states]);\n\n  useEffect(() => {\n    setDistricts(props.stateDistrictWiseData);\n  }, [props.stateDistrictWiseData]);\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1);\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn;\n      let value1 = StateData1[sortColumn];\n      let value2 = StateData2[sortColumn];\n\n      if (sortColumn !== 'state') {\n        value1 = parseInt(StateData1[sortColumn]);\n        value2 = parseInt(StateData2[sortColumn]);\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      }\n    });\n    states.unshift(totalRow[0]);\n  };\n\n  const handleSort = (e, props) => {\n    const currentsortColumn = e.currentTarget\n      .querySelector('abbr')\n      .getAttribute('title')\n      .toLowerCase();\n    const isAscending =\n      sortData.sortColumn === currentsortColumn\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'state';\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('state.sortColumn', currentsortColumn);\n    localStorage.setItem('state.isAscending', isAscending);\n  };\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    });\n  };\n\n  doSort();\n\n  if (states.length > 0) {\n    return (\n      <React.Fragment>\n        <h5\n          className=\"table-fineprint fadeInUp\"\n          style={{animationDelay: '1.5s'}}\n        >\n          {t(\"data compilation info\")}\n        </h5>\n        <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\n          <thead>\n            <tr>\n              <th\n                className=\"sticky state-heading\"\n                onClick={(e) => handleSort(e, props)}\n              >\n                <div className=\"heading-content\">\n                  <abbr title=\"State\">{t('states')}</abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'state' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                    title=\"Confirmed\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('confirmed.shorter')\n                        : t('confirmed.short')\n                      : t('confirmed.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'confirmed'\n                          ? 'initial'\n                          : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\n                    title=\"Active\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('active.shorter')\n                        : t('active.short')\n                      : t('active.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'active' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\n                    title=\"Recovered\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('recovered.shorter')\n                        : t('recovered.short')\n                      : t('recovered.full')}\n                  </abbr>\n                  <div\n                    className={\n                      sortData.sortColumn === 'recovered' ? 'sort-black' : ''\n                    }\n                  ></div>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'recovered'\n                          ? 'initial'\n                          : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                    title=\"Deaths\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('deceased.shorter')\n                        : t('deceased.short')\n                      : t('deceased.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'deaths' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {states.map((state, index) => {\n              if (index !== 0 && state.confirmed > 0) {\n                return (\n                  <Row\n                    key={state.state}\n                    index={index}\n                    state={state}\n                    total={false}\n                    reveal={revealedStates[state.state]}\n                    districts={\n                      state.state in districts\n                        ? districts[state.state].districtData\n                        : []\n                    }\n                    onHighlightState={props.onHighlightState}\n                    onHighlightDistrict={props.onHighlightDistrict}\n                    handleReveal={handleReveal}\n                  />\n                );\n              }\n              return null;\n            })}\n          </tbody>\n\n          <tbody>\n            {states.length > 1 && props.summary === false && (\n              <Row\n                key={0}\n                state={states[0]}\n                total={true}\n                onHighlightState={props.onHighlightState}\n              />\n            )}\n          </tbody>\n        </table>\n        <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\n          {t('States Affected', {count})}\n        </h5>\n      </React.Fragment>\n    );\n  } else {\n    return <div style={{height: '50rem'}}></div>;\n  }\n}\n\nexport default React.memo(Table, isEqual);\n","import {sliceTimeseriesFromEnd, formatNumber} from '../utils/commonfunctions';\nimport {useResizeObserver} from '../utils/hooks';\n\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nfunction TimeSeries(props) {\n  const {t} = useTranslation();\n\n  const [lastDaysCount, setLastDaysCount] = useState(\n    window.innerWidth > 512 ? Infinity : 30\n  );\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(0);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [chartType, setChartType] = useState(props.type);\n  const [stateCode] = useState(props.stateCode);\n  const [moving, setMoving] = useState(false);\n\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const transformTimeSeries = useCallback(\n    (timeseries) => {\n      if (timeseries.length > 1) {\n        const slicedTimeseries = sliceTimeseriesFromEnd(\n          timeseries,\n          lastDaysCount\n        );\n        setIndex(slicedTimeseries.length - 1);\n        setTimeseries(slicedTimeseries);\n      }\n    },\n    [lastDaysCount]\n  );\n\n  useEffect(() => {\n    transformTimeSeries(props.timeseries);\n  }, [stateCode, lastDaysCount, transformTimeSeries, props.timeseries]);\n\n  useEffect(() => {\n    setMode(props.mode);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n  }, [props.logMode]);\n\n  useEffect(() => {\n    setChartType(props.type);\n  }, [props.type]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      if (!dimensions) return;\n      const width = dimensions.width;\n      const height = dimensions.height;\n\n      // Margins\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\n      const chartRight = width - margin.right;\n      const chartBottom = height - margin.bottom;\n\n      const T = timeseries.length;\n      const yBuffer = 1.1;\n\n      setDatapoint(timeseries[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(svgRef1.current);\n      const svg2 = d3.select(svgRef2.current);\n      const svg3 = d3.select(svgRef3.current);\n      const svg4 = d3.select(svgRef4.current);\n\n      const dateMin = new Date(timeseries[0]['date']);\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(timeseries[T - 1]['date']);\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const xScale = d3\n        .scaleTime()\n        .clamp(true)\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      // Number of x-axis ticks\n      const numTicksX = width < 480 ? 4 : 7;\n\n      const xAxis = (g) =>\n        g\n          .attr('class', 'x-axis')\n          .call(d3.axisBottom(xScale).ticks(numTicksX))\n          .style('transform', `translateY(${chartBottom}px)`);\n\n      const xAxis2 = (g, yScale) => {\n        g.attr('class', 'x-axis2')\n          .call(d3.axisBottom(xScale).tickValues([]).tickSize(0))\n          .select('.domain')\n          .style('transform', `translateY(${yScale(0)}px)`);\n\n        if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\n        else g.select('.domain').attr('opacity', 0);\n      };\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr('class', 'y-axis')\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5))\n          .style('transform', `translateX(${chartRight}px)`);\n\n      // Arrays of objects\n      const svgArray = [svg1, svg2, svg3, svg4];\n      const plotTotal = chartType === 1;\n      const dataTypesTotal = [\n        'totalconfirmed',\n        'totalactive',\n        'totalrecovered',\n        'totaldeceased',\n      ];\n      const dataTypesDaily = [\n        'dailyconfirmed',\n        'dailyactive',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n\n      const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\n\n      let yScales;\n      if (plotTotal) {\n        let uniformScaleMin = Infinity;\n        dataTypesTotal.forEach((type) => {\n          uniformScaleMin = Math.min(\n            uniformScaleMin,\n            d3.min(timeseries, (d) => d[type])\n          );\n        });\n        const yScaleUniformLinear = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            uniformScaleMin,\n            Math.max(1, yBuffer * d3.max(timeseries, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        const yScaleUniformLog = d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(1, uniformScaleMin),\n            Math.max(1, yBuffer * d3.max(timeseries, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesTotal.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(timeseries, (d) => d[type]),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(timeseries, (d) => d[type])\n              ),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          if (logMode) return mode ? yScaleUniformLog : yScaleLog;\n          else return mode ? yScaleUniformLinear : yScaleLinear;\n        });\n      } else {\n        const yScaleDailyUniform = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            yBuffer *\n              Math.min(\n                0,\n                d3.min(timeseries, (d) => d.dailyactive)\n              ),\n            Math.max(\n              1,\n              yBuffer *\n                d3.max(timeseries, (d) =>\n                  Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n                )\n            ),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesDaily.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              yBuffer *\n                Math.min(\n                  0,\n                  d3.min(timeseries, (d) => d[type])\n                ),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          return mode ? yScaleDailyUniform : yScaleLinear;\n        });\n      }\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll('.focus')\n          .data([timeseries[T - 1]], (d) => d.date)\n          .join('circle')\n          .attr('class', 'focus')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 4);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(timeseries, date, 1);\n        if (0 <= i && i < T) {\n          if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\n          setDatapoint(timeseries[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = timeseries[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n            f.attr('cx', xScale(d.date)).attr('cy', yScale(d[type]));\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(timeseries[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          f.attr('cx', xScale(timeseries[T - 1].date)).attr(\n            'cy',\n            yScale(timeseries[T - 1][type])\n          );\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n        const typeTotal = dataTypesTotal[i];\n        const typeDaily = dataTypesDaily[i];\n        const type = plotTotal ? typeTotal : typeDaily;\n\n        const color = colors[i];\n        const yScale = yScales[i];\n\n        /* X axis */\n        svg.select('.x-axis').transition(t).call(xAxis);\n        svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n        /* Y axis */\n        svg.select('.y-axis').transition(t).call(yAxis, yScale);\n\n        /* Path dots */\n        svg\n          .selectAll('.dot')\n          .data(timeseries, (d) => d.date)\n          .join((enter) => enter.append('circle').attr('cy', chartBottom))\n          .attr('class', 'dot')\n          .attr('fill', color)\n          .attr('stroke', color)\n          .attr('r', 2)\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        focus[i]\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        if (plotTotal) {\n          /* TOTAL TRENDS */\n          svg.selectAll('.stem').remove();\n          const path = svg\n            .selectAll('.trend')\n            .data([[...timeseries].reverse()])\n            .join('path')\n            .attr('class', 'trend')\n            .attr('fill', 'none')\n            .attr('stroke', color + '99')\n            .attr('stroke-width', 4);\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr('d')) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              'd',\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n          path\n            .transition(t)\n            .attr('opacity', plotTotal ? 1 : 0)\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => xScale(d.date))\n                .y((d) => yScale(d[typeTotal]))\n                .curve(d3.curveMonotoneX)\n            );\n          // Using d3-interpolate-path\n          // .attrTween('d', function (d) {\n          //   var previous = path.attr('d');\n          //   var current = line(d);\n          //   return interpolatePath(previous, current);\n          // });\n        } else {\n          /* DAILY TRENDS */\n          svg.selectAll('.trend').remove();\n          svg\n            .selectAll('.stem')\n            .data(timeseries, (d) => d.date)\n            .join((enter) =>\n              enter\n                .append('line')\n                .attr('x1', (d) => xScale(d.date))\n                .attr('x2', (d) => xScale(d.date))\n                .attr('y1', chartBottom)\n                .attr('y2', chartBottom)\n            )\n            .attr('class', 'stem')\n            .style('stroke', color + '99')\n            .style('stroke-width', 4)\n            .transition(t)\n            .attr('y1', yScale(0))\n            .attr('x1', (d) => xScale(d.date))\n            .attr('x2', (d) => xScale(d.date))\n            .attr('y2', (d) => yScale(d[typeDaily]));\n        }\n\n        svg\n          .on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n      });\n    },\n    [dimensions, chartType, logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const focusDate = moment(datapoint.date);\n  let dateStr = focusDate.isSame(moment().subtract(1, 'days'), 'day')\n    ? t(\"Yesterday\")\n    : focusDate.format('DD MMMM');\n\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalactive' : 'dailyactive';\n  const chartKey3 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey4 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\n\n  // Function for calculate increased/decreased count for each type of data\n  const currentStatusCount = (chartType) => {\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length)\n      return '';\n    const currentDiff =\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"TimeSeries fadeInUp\" style={{animationDelay: '2.7s'}}>\n        <div className=\"svg-parent\" ref={wrapperRef}>\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"confirmed.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\n              <h6>{currentStatusCount(chartKey1)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-blue\">\n          <div className=\"stats is-blue\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"active.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\n              <h6>{currentStatusCount(chartKey2)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"recovered.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\n              <h6>{currentStatusCount(chartKey3)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"deceased.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey4])}</h2>\n              <h6>{currentStatusCount(chartKey4)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef4} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n      </div>\n\n      <div className=\"pills\">\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? 'selected' : ''}\n        >\n          {t(\"Beginning\")}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? 'selected' : ''}\n          aria-label={t(\"1 month\")}\n        >\n          {t(\"1 Month\")}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? 'selected' : ''}\n          aria-label={t(\"14 days\")}\n        >\n          {t(\"2 Weeks\")}\n        </button>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(TimeSeries);\n","import {ResizeObserver} from '@juggle/resize-observer';\nimport {useState, useEffect} from 'react';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n","import TimeSeries from './timeseries';\n\nimport React from 'react';\nimport * as Icon from 'react-feather';\nimport {useLocalStorage} from 'react-use';\nimport {useTranslation} from 'react-i18next';\n\nfunction TimeSeriesExplorer({\n  timeseries,\n  activeStateCode,\n  onHighlightState,\n  states,\n  anchor,\n  setAnchor,\n}) {\n  const {t} = useTranslation();\n  const [graphOption, setGraphOption] = useLocalStorage(\n    'timeseriesGraphOption',\n    1\n  );\n\n  const [timeseriesMode, setTimeseriesMode] = useLocalStorage(\n    'timeseriesMode',\n    true\n  );\n  const [timeseriesLogMode, setTimeseriesLogMode] = useLocalStorage(\n    'timeseriesLogMode',\n    false\n  );\n\n  return (\n    <div\n      className={`TimeSeriesExplorer ${\n        anchor === 'timeseries' ? 'stickied' : ''\n      }`}\n      style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n    >\n      <div\n        className=\"timeseries-header fadeInUp\"\n        style={{animationDelay: '2.5s'}}\n      >\n        {window.innerWidth > 769 && (\n          <div\n            className={`anchor ${anchor === 'timeseries' ? 'stickied' : ''}`}\n            onClick={() => {\n              setAnchor(anchor === 'timeseries' ? null : 'timeseries');\n            }}\n          >\n            <Icon.Anchor />\n          </div>\n        )}\n\n        <h1>{t(\"Spread Trends\")}</h1>\n        <div className=\"tabs\">\n          <div\n            className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n            onClick={() => {\n              setGraphOption(1);\n            }}\n          >\n            <h4>{t(\"Cumulative\")}</h4>\n          </div>\n          <div\n            className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n            onClick={() => {\n              setGraphOption(2);\n            }}\n          >\n            <h4>{t(\"Daily\")}</h4>\n          </div>\n        </div>\n\n        <div className=\"scale-modes\">\n          <label className=\"main\">{t(\"Scale Modes\")}</label>\n          <div className=\"timeseries-mode\">\n            <label htmlFor=\"timeseries-mode\">{t(\"chart.mode.uniform\")}</label>\n            <input\n              id=\"timeseries-mode\"\n              type=\"checkbox\"\n              checked={timeseriesMode}\n              className=\"switch\"\n              aria-label=\"Checked by default to scale uniformly.\"\n              onChange={(event) => {\n                setTimeseriesMode(!timeseriesMode);\n              }}\n            />\n          </div>\n          <div\n            className={`timeseries-logmode ${\n              graphOption !== 1 ? 'disabled' : ''\n            }`}\n          >\n            <label htmlFor=\"timeseries-logmode\">{t(\"chart.mode.logarithmic\")}</label>\n            <input\n              id=\"timeseries-logmode\"\n              type=\"checkbox\"\n              checked={graphOption === 1 && timeseriesLogMode}\n              className=\"switch\"\n              disabled={graphOption !== 1}\n              onChange={(event) => {\n                setTimeseriesLogMode(!timeseriesLogMode);\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"trends-state-name\">\n          <select\n            value={activeStateCode}\n            onChange={({target}) => {\n              const selectedState = target.selectedOptions[0].getAttribute(\n                'statedata'\n              );\n              onHighlightState(JSON.parse(selectedState));\n            }}\n          >\n            {states.map((s) => {\n              return (\n                <option\n                  value={s.statecode}\n                  key={s.statecode}\n                  statedata={JSON.stringify(s)}\n                >\n                  {s.statecode === 'TT' ? t('All States') : t(`statenames.${s.state.toLowerCase()}`)}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </div>\n\n      <TimeSeries\n        timeseries={timeseries[activeStateCode]}\n        stateCode={activeStateCode}\n        type={graphOption}\n        mode={timeseriesMode}\n        logMode={timeseriesLogMode}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(TimeSeriesExplorer);\n","import axios from 'axios';\nimport {formatDistance, format} from 'date-fns';\nimport React, {useState} from 'react';\nimport {useEffectOnce} from 'react-use';\n\nlet currentDate = new Date();\n\nfunction Updates(props) {\n  const [updates, setUpdates] = useState([]);\n\n  useEffectOnce(() => {\n    axios\n      .get('https://thantthet.github.io/covid19-api/updatelog/log.json')\n      .then((response) => {\n        setUpdates(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n\n  return (\n    <div className=\"updates\">\n      <div className=\"updates-header\">\n        <h2>{format(currentDate, 'd MMM')}</h2>\n      </div>\n\n      {updates\n        .slice(-5)\n        .reverse()\n        .map(function (activity, index) {\n          activity.update = activity.update.replace('\\n', '<br/>');\n          const activityDate = new Date(activity.timestamp * 1000);\n          const addHeader = () => {\n            currentDate = activityDate;\n\n            return (\n              <React.Fragment>\n                {index === 0 ? (\n                  <div className=\"update\">\n                    <h4>No updates yet!</h4>\n                  </div>\n                ) : (\n                  ''\n                )}\n                <div className=\"updates-header\">\n                  <h2>{format(activityDate, 'd MMM')}</h2>\n                </div>\n              </React.Fragment>\n            );\n          };\n\n          return (\n            <React.Fragment key={index}>\n              {activityDate.getDate() !== currentDate.getDate()\n                ? addHeader()\n                : ' '}\n              <div key={index} className=\"update\">\n                <h5>\n                  {formatDistance(\n                    new Date(activity.timestamp * 1000),\n                    new Date()\n                  ) + ' ago'}\n                </h5>\n                <h4\n                  dangerouslySetInnerHTML={{\n                    __html: activity.update,\n                  }}\n                ></h4>\n              </div>\n            </React.Fragment>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default Updates;\n","import Footer from './footer';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport Table from './table';\nimport TimeSeriesExplorer from './timeseriesexplorer';\nimport Updates from './updates';\n\nimport {MAP_META} from '../constants';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  preprocessTimeseries,\n  parseStateTimeseries,\n} from '../utils/commonfunctions';\n\nimport axios from 'axios';\nimport React, {useState, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {useEffectOnce, useLocalStorage, useFavicon} from 'react-use';\n\nfunction Home(props) {\n  const [states, setStates] = useState([]);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [activeStateCode, setActiveStateCode] = useState('TT');\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n  const [showUpdates, setShowUpdates] = useState(false);\n  const [anchor, setAnchor] = useState(null);\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage(\n    'lastViewedLog',\n    null\n  );\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\n\n  useFavicon(newUpdate ? '/icon_update.png' : '/favicon.ico');\n\n  useEffectOnce(() => {\n    getStates();\n  });\n\n  useEffectOnce(() => {\n    axios\n      .get('https://thantthet.github.io/covid19-api/log.json')\n      .then((response) => {\n        const lastTimestamp = response.data\n          .slice()\n          .reverse()[0]\n          .timestamp.toString();\n        if (lastTimestamp !== lastViewedLog) {\n          setNewUpdate(true);\n          setLastViewedLog(lastTimestamp);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n\n  const getStates = async () => {\n    try {\n      const [\n        {data},\n        stateDistrictWiseResponse,\n        {data: statesDailyResponse},\n      ] = await Promise.all([\n        axios.get('https://thantthet.github.io/covid19-api/data.json'),\n        axios.get('https://thantthet.github.io/covid19-api/state_district_wise.json'),\n        axios.get('https://thantthet.github.io/covid19-api/states_daily.json'),\n      ]);\n\n      setStates(data.statewise);\n\n      const ts = parseStateTimeseries(statesDailyResponse);\n      ts['TT'] = preprocessTimeseries(data.cases_time_series);\n      setTimeseries(ts);\n\n      setLastUpdated(data.statewise[0].lastupdatedtime);\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) return setRegionHighlighted(null);\n    setRegionHighlighted({state, index});\n  };\n\n  const onHighlightDistrict = (district, state, index) => {\n    if (!state && !index && !district) return setRegionHighlighted(null);\n    setRegionHighlighted({district, state, index});\n  };\n\n  const onMapHighlightChange = useCallback(({statecode}) => {\n    setActiveStateCode(statecode);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"Home\">\n        <div className=\"home-left\">\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\n            <div className=\"actions\">\n              <h5>\n                {isNaN(Date.parse(formatDate(lastUpdated)))\n                  ? ''\n                  : formatDateAbsolute(lastUpdated)}\n              </h5>\n              {!showUpdates && (\n                <div className=\"bell-icon\">\n                  {fetched && (\n                    <Icon.Bell\n                      onClick={() => {\n                        setShowUpdates(!showUpdates);\n                        setNewUpdate(false);\n                      }}\n                    />\n                  )}\n                  {newUpdate && <div className=\"indicator\"></div>}\n                </div>\n              )}\n              {showUpdates && (\n                <Icon.BellOff\n                  onClick={() => {\n                    setShowUpdates(!showUpdates);\n                  }}\n                />\n              )}\n            </div>\n          </div>\n\n          {showUpdates && <Updates />}\n\n          {fetched && <Level data={states[0]} />}\n          {fetched && <Minigraph timeseries={timeseries['TT']} />}\n          {fetched && (\n            <Table\n              states={states}\n              summary={false}\n              stateDistrictWiseData={stateDistrictWiseData}\n              onHighlightState={onHighlightState}\n              onHighlightDistrict={onHighlightDistrict}\n            />\n          )}\n        </div>\n\n        <div className=\"home-right\">\n          {fetched && (\n            <React.Fragment>\n              <MapExplorer\n                mapMeta={MAP_META.Myanmar}\n                states={states}\n                stateDistrictWiseData={stateDistrictWiseData}\n                // stateTestData={stateTestData}\n                regionHighlighted={regionHighlighted}\n                onMapHighlightChange={onMapHighlightChange}\n                isCountryLoaded={true}\n                anchor={anchor}\n                setAnchor={setAnchor}\n              />\n\n              {fetched && (\n                <TimeSeriesExplorer\n                  timeseries={timeseries}\n                  activeStateCode={activeStateCode}\n                  onHighlightState={onHighlightState}\n                  states={states}\n                  anchor={anchor}\n                  setAnchor={setAnchor}\n                />\n              )}\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n      {fetched && <Footer />}\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(Home);\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\n\nimport locales from '../i18n/locales.json';\n\nexport default function LanguageSwitcher() {\n  const {i18n, t} = useTranslation();\n\n  const onLanguageChange = (e) => {\n    i18n.changeLanguage(e.target.value);\n  };\n\n  return (\n    <div className=\"language-switcher select-dropdown\">\n      <select onChange={onLanguageChange} aria-label={t('Select Language')} value={i18n.language}>\n        {Object.entries(locales).map(([key, lang]) => (\n          <option key={key} value={key}>\n            {lang}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","import anime from 'animejs';\nimport React, {useState, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {Link} from 'react-router-dom';\nimport {useEffectOnce, useLockBodyScroll} from 'react-use';\nimport LanguageSwitcher from './languageswitcher';\nimport {useTranslation} from 'react-i18next';\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n  style: {\n    animationDelay: `${animationDelay}s`,\n  },\n});\n\nconst activeNavIcon = (path) => ({\n  style: {\n    stroke: window.location.pathname === path ? '#4c75f2' : '',\n  },\n});\n\nfunction Navbar({pages, darkMode, setDarkMode}) {\n  const {t} = useTranslation();\n  const [expand, setExpand] = useState(false);\n  useLockBodyScroll(expand);\n\n  return (\n    <div className=\"Navbar\">\n      <div\n        className=\"navbar-left\"\n        onClick={() => setDarkMode((prevMode) => !prevMode)}\n      >\n        {darkMode ? <Icon.Sun color={'#ffc107'} /> : <Icon.Moon />}\n      </div>\n      <div className=\"navbar-middle\">\n        <Link\n          to=\"/\"\n          onClick={() => {\n            setExpand(false);\n          }}\n        >\n          Covid19<span>Myanmar</span>\n        </Link>\n      </div>\n\n      <div\n        className=\"navbar-right\"\n        onClick={() => {\n          setExpand(!expand);\n        }}\n        onMouseEnter={() => {\n          if (window.innerWidth > 769) {\n            setExpand(true);\n            anime({\n              targets: '.navbar-right path',\n              strokeDashoffset: [anime.setDashoffset, 0],\n              easing: 'easeInOutSine',\n              duration: 250,\n              delay: function (el, i) {\n                return i * 250;\n              },\n              direction: 'alternate',\n              loop: false,\n            });\n          }\n        }}\n      >\n        {window.innerWidth < 769 && <span>{expand ? t('Close') : t('Menu')}</span>}\n        {window.innerWidth > 769 && (\n          <React.Fragment>\n            <span>\n              <Link to=\"/\">\n                <Icon.Home {...activeNavIcon('/')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/demographics\">\n                <Icon.Users {...activeNavIcon('/demographics')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/deepdive\">\n                <Icon.BarChart2 {...activeNavIcon('/deepdive')} />\n              </Link>\n            </span>\n          </React.Fragment>\n        )}\n      </div>\n\n      {expand && <Expand expand={expand} pages={pages} setExpand={setExpand} />}\n    </div>\n  );\n}\n\nfunction Expand({expand, pages, setExpand}) {\n  const expandElement = useRef(null);\n\n  useEffectOnce(() => {\n    anime({\n      targets: expandElement.current,\n      translateX: '10rem',\n      easing: 'easeOutExpo',\n      duration: 250,\n    });\n  });\n\n  return (\n    <div\n      className=\"expand\"\n      ref={expandElement}\n      onMouseLeave={() => {\n        setExpand(false);\n      }}\n    >\n      {pages.map((page, i) => {\n        if (page.showInNavbar === true) {\n          return (\n            <Link\n              to={page.pageLink}\n              key={i}\n              onClick={() => {\n                setExpand(false);\n              }}\n            >\n              <span\n                {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n              >\n                {page.displayName}\n              </span>\n            </Link>\n          );\n        }\n        return null;\n      })}\n      \n      <div className=\"expand-language fadeInUp\" style={{animationDelay: '0.6s'}}>\n        <h5>Change Language</h5>\n        <LanguageSwitcher />\n      </div>\n      <div className=\"expand-bottom fadeInUp\" style={{animationDelay: '0.7s'}}>\n        <h5>A crowdsourced initiative.</h5>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport * as Icon from 'react-feather';\n\nfunction DownloadBlock(props) {\n  return (\n    <div className=\"DownloadBlock fadeInUp\" style={{animationDelay: '0.5s'}}>\n      <a\n        className=\"button\"\n        target=\"_noblank\"\n        href=\"https://raw.githubusercontent.com/covid19india/api/gh-pages/raw_data.json\"\n      >\n        <Icon.Download /> <span>JSON</span>\n      </a>\n      <a\n        className=\"button\"\n        target=\"_noblank\"\n        href=\"https://raw.githubusercontent.com/covid19india/api/gh-pages/csv/latest/raw_data.csv\"\n      >\n        <Icon.Download /> <span>CSV</span>\n      </a>\n    </div>\n  );\n}\n\nexport default React.memo(DownloadBlock, () => {\n  return true;\n});\n","import {format} from 'date-fns';\nimport React from 'react';\n\nfunction PatientsView({\n  logs,\n  summary,\n  setModal,\n  setPatient,\n  expand,\n  applyClass,\n}) {\n  return (\n    <div className=\"Patients fadeInUp\" style={{animationDelay: '1s'}}>\n      {Object.keys(logs)\n        .slice(summary ? -1 : 0)\n        .map((day, index) => {\n          if (day !== 'Invalid Date') {\n            return (\n              <React.Fragment key={index}>\n                <h5 className=\"daylabel\">\n                  {format(new Date(day), 'dd MMM, yyyy')}{' '}\n                  {'(' + logs[day].length + ')'}\n                </h5>\n                <div key={index} className={`day ${summary ? 'summary' : ''}`}>\n                  {logs[day]\n                    .slice(summary ? -40 : 0)\n                    .map((patient, indexTwo) => {\n                      return (\n                        <div\n                          key={indexTwo}\n                          className={applyClass(patient)}\n                          onClick={() => {\n                            setModal(true);\n                            setPatient(patient);\n                          }}\n                        >\n                          <h3>{expand ? `P${patient.patientnumber}` : ''}</h3>\n                        </div>\n                      );\n                    })}\n                </div>\n              </React.Fragment>\n            );\n          } else {\n            return null;\n          }\n        })}\n    </div>\n  );\n}\n\nexport default PatientsView;\n","import PatientsView from './patientsview';\n\nimport {parse} from 'date-fns';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {useLockBodyScroll} from 'react-use';\nimport {useTranslation} from 'react-i18next';\n\nfunction Patients(props) {\n  const {t} = useTranslation();\n\n  const [patients, setPatients] = useState(props.patients);\n  const [patient, setPatient] = useState(props.patients.slice(-1));\n  const [logs, setLogs] = useState({});\n  const [modal, setModal] = useState(false);\n\n  useLockBodyScroll(modal);\n\n  window.onclick = function (event) {\n    const modal = document.getElementById('modal');\n    if (event.target === modal) {\n      setModal(false);\n    }\n  };\n\n  useEffect(() => {\n    setPatients(props.patients);\n  }, [props.patients]);\n\n  const parseByDate = useCallback((patients) => {\n    const log = {};\n    for (let i = 0; i < patients.length; i++) {\n      const day = new Date(\n        parse(patients[i].dateannounced, 'dd/MM/yyyy', new Date())\n      );\n      if (!(day in log)) {\n        const list = [];\n        list.push(patients[i]);\n        log[day] = list;\n      } else {\n        const list = log[day];\n        list.push(patients[i]);\n        log[day] = list;\n      }\n    }\n    setLogs(log);\n  }, []);\n\n  useEffect(() => {\n    if (patients.length) {\n      parseByDate(patients);\n    }\n  }, [parseByDate, patients]);\n\n  const switchPatient = (patientIndex) => {\n    if (patientIndex === '') return;\n    try {\n      // eslint-disable-next-line\n      patients.map((patient, index) => {\n        if (+patient.patientnumber === +patientIndex) setPatient(patient);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getClassNameFn = (colorMode) => {\n    switch (colorMode) {\n      case 'genders':\n        return (patient) => {\n          return `patient-card ${\n            patient.gender === 'F'\n              ? 'is-femme'\n              : patient.gender === 'M'\n              ? 'is-male'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'transmission':\n        return (patient) => {\n          return `patient-card ${\n            patient.typeoftransmission === 'Local'\n              ? 'is-local'\n              : patient.typeoftransmission === 'Imported'\n              ? 'is-imported'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'nationality':\n        return (patient) => {\n          return `patient-card ${\n            patient.nationality === 'myanmar'\n              ? 'is-mm'\n              : patient.nationality === 'french'\n              ? 'is-fr'\n              : patient.nationality === 'swiz'\n              ? 'is-ch'\n              : patient.nationality === 'american'\n              ? 'is-us'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'age':\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n      default:\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PatientsView\n        logs={logs}\n        setModal={setModal}\n        setPatient={setPatient}\n        expand={props.expand}\n        applyClass={getClassNameFn(props.colorMode)}\n      />\n\n      {modal && (\n        <div className=\"modal\" id=\"modal\">\n          <div\n            className={`modal-content ${modal ? 'fadeInUp' : 'fadeOutDown'}`}\n          >\n            <div className=\"close-button\">\n              <Icon.XCircle\n                onClick={() => {\n                  setModal(false);\n                }}\n              />\n            </div>\n\n            <div className=\"modal-top\">\n              <h1>#{patient.patientnumber}</h1>\n            </div>\n\n            <div className=\"meta\">\n              <h5>{t(\"Date Announced\")}</h5>\n              <h3>{patient.dateannounced ? patient.dateannounced : '?'}</h3>\n\n              <h5>{t(\"Contracted from\")}</h5>\n              <h3 className=\"contracted-from\">\n                {patient.contractedfromwhichpatientsuspected\n                  ? patient.contractedfromwhichpatientsuspected.split(',').map((patientid, i) => {\n                    return <span key={i} onClick={() => switchPatient(patientid)}>{patientid},</span>\n                  })\n                  : '?'}\n              </h3>\n\n              <h5>{t(\"Detected City\")}</h5>\n              <h3>{patient.detectedcity ? patient.detectedcity : '?'}</h3>\n\n              <h5>{t(\"Detected District\")}</h5>\n              <h3>\n                {patient.detecteddistrict ? patient.detecteddistrict : '?'}\n              </h3>\n\n              <h5>{t(\"Detected State\")}</h5>\n              <h3>{patient.detectedstate ? patient.detectedstate : '?'}</h3>\n\n              <h5>{t(\"Nationality\")}</h5>\n              <h3>{patient.nationality ? patient.nationality : '?'}</h3>\n\n              <h5>{t(\"Age\")}</h5>\n              <h3>{patient.agebracket ? patient.agebracket : '?'}</h3>\n\n              <h5>{t(\"Gender\")}</h5>\n              <h3>{patient.gender ? patient.gender : '?'}</h3>\n\n              <h5>{t(\"Type of transmission\")}</h5>\n              <h3>\n                {patient.typeoftransmission ? patient.typeoftransmission : '?'}\n              </h3>\n            </div>\n\n            <div className=\"notes\">\n              <h5>{t(\"Notes\")}</h5>\n              <h3>{patient.notes}</h3>\n            </div>\n\n            <h5>{t(\"Source 1\")}</h5>\n            <div className=\"link\">\n              <a href={patient.source1} target=\"_noblank\">\n                {patient.source1}\n              </a>\n            </div>\n\n            <h5>{t(\"Source 2\")}</h5>\n            <div className=\"link\">\n              <a href={patient.source2} target=\"_noblank\">\n                {patient.source2}\n              </a>\n            </div>\n\n            <h5>{t(\"Source 3\")}</h5>\n            <div className=\"link\">\n              <a href={patient.source3} target=\"_noblank\">\n                {patient.source3}\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Patients;\n","import DownloadBlock from './downloadblock';\nimport Footer from './footer';\nimport Patients from './patients';\n\nimport axios from 'axios';\nimport {format, subDays} from 'date-fns';\nimport React, {useState, useEffect} from 'react';\nimport DatePicker from 'react-date-picker';\nimport {useTranslation} from 'react-i18next';\nimport * as Icon from 'react-feather';\nimport {useLocation} from 'react-router-dom';\nimport {useEffectOnce, useLocalStorage} from 'react-use';\n\nfunction filterByObject(obj, filters) {\n  const keys = Object.keys(filters);\n  return obj.filter((p) => {\n    return keys.every((key) => {\n      if (!filters[key].length) return true;\n      return p[key] === filters[key];\n    });\n  });\n}\n\nfunction PatientDB(props) {\n  const {t} = useTranslation();\n  const [fetched, setFetched] = useState(false);\n  const [patients, setPatients] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const {pathname} = useLocation();\n  const [colorMode, setColorMode] = useState('genders');\n  const [scaleMode, setScaleMode] = useState(false);\n  const [filterDate, setFilterDate] = useState(null);\n  const [showReminder, setShowReminder] = useLocalStorage('showReminder', true);\n  const [message, setMessage] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    detectedstate: '',\n    detecteddistrict: '',\n    detectedcity: '',\n    dateannounced: '',\n    // unfilter until data are low enough to show\n  });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  useEffectOnce(() => {\n    try {\n      axios\n        .get('https://thantthet.github.io/covid19-api/raw_data.json')\n        .then((response) => {\n          setPatients(response.data.raw_data.reverse());\n          setFetched(true);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  });\n\n  useEffect(() => {\n    const datePickers = document.querySelectorAll(\n      '.react-date-picker__inputGroup input'\n    );\n    datePickers.forEach((el) => el.setAttribute('readOnly', true));\n  }, []);\n\n  const handleFilters = (label, value) => {\n    setFilters((f) => {\n      // Create new object (deep copy)\n      const newFilters = {...f};\n      newFilters[label] = value;\n      if (label === 'detectedstate') {\n        const district = document.getElementById('district');\n        const city = document.getElementById('city');\n        // Hide boxes\n        if (value === '') district.style.display = 'none';\n        else district.style.display = 'inline';\n        city.style.display = 'none';\n        // Default to empty selection\n        district.selectedIndex = 0;\n        city.selectedIndex = 0;\n        newFilters['detecteddistrict'] = '';\n        newFilters['detectedcity'] = '';\n      } else if (label === 'detecteddistrict') {\n        const city = document.getElementById('city');\n        // Hide box\n        if (value === '') city.style.display = 'none';\n        else city.style.display = 'inline';\n        // Default to empty selection\n        city.selectedIndex = 0;\n        newFilters['detectedcity'] = '';\n      }\n      return newFilters;\n    });\n  };\n\n  useEffect(() => {\n    if (filterByObject(patients, filters).length > 0) {\n      setFilteredPatients(filterByObject(patients, filters));\n      setMessage(false);\n      setLoading(false);\n    } else {\n      setMessage(true);\n    }\n  }, [patients, filters]);\n\n  function getSortedValues(obj, key) {\n    const setValues = new Set(obj.map((p) => p[key]));\n    if (setValues.size > 1) setValues.add('');\n    if (key === 'dateannounced') return Array.from(setValues);\n    return Array.from(setValues).sort();\n  }\n\n  return (\n    <div className=\"PatientsDB\">\n      <div className=\"filters fadeInUp\" style={{animationDelay: '0.2s'}}>\n        <div className=\"filters-left\">\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.3s'}}\n              id=\"state\"\n              onChange={(event) => {\n                handleFilters('detectedstate', event.target.value);\n              }}\n              defaultValue={filters.detectedstate}\n            >\n              <option value=\"\" disabled selected>\n                {t(\"Select State\")}\n              </option>\n              {getSortedValues(patients, 'detectedstate').map(\n                (state, index) => {\n                  return (\n                    <option key={index} value={state}>\n                      {state === '' ? t('All') : t(`statenames.${state.toLowerCase()}`)}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('detecteddistrict', event.target.value);\n              }}\n              defaultValue={filters.detecteddistrict}\n            >\n              <option value=\"\" disabled>\n                Select District\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'detecteddistrict'\n              ).map((district, index) => {\n                return (\n                  <option key={index} value={district}>\n                    {district === '' ? t('All') : district}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n              defaultValue={filters.detectedcity}\n            >\n              <option value=\"\" disabled>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? t('All') : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n              defaultValue={filters.detectedcity}\n            >\n              <option value=\"\" disabled>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <DatePicker\n              value={filterDate}\n              minDate={new Date('22-Mar-2020')}\n              maxDate={subDays(new Date(), 1)}\n              format=\"dd/MM/y\"\n              calendarIcon={<Icon.Calendar />}\n              inputProps={\n                (onkeydown = (e) => {\n                  e.preventDefault();\n                })\n              }\n              clearIcon={<Icon.XCircle />}\n              onChange={(date) => {\n                setFilterDate(date);\n                const fomattedDate = !!date ? format(date, 'dd/MM/yyyy') : '';\n                handleFilters('dateannounced', fomattedDate);\n              }}\n            />\n          </div>\n\n          {/* <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              {Array.from(new Set(patients.map((p) => p.dateannounced))).map(\n                (date, index) => {\n                  return (\n                    <option key={index} value={date}>\n                      {date}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>*/}\n        </div>\n\n        <div className=\"legend\">\n          {colorMode === 'genders' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-female\"></div>\n              <h5 className=\"is-female\">{t(\"Female\")}</h5>\n              <div className=\"circle is-male\"></div>\n              <h5 className=\"is-male\">{t(\"Male\")}</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">{t(\"Unknown\")}</h5>\n            </div>\n          )}\n\n          {colorMode === 'transmission' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-local\"></div>\n              <h5 className=\"is-local\">{t(\"Local\")}</h5>\n              <div className=\"circle is-imported\"></div>\n              <h5 className=\"is-imported\">{t(\"Imported\")}</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">{t(\"Unknown\")}</h5>\n            </div>\n          )}\n\n          {colorMode === 'nationality' && (\n            <div className=\"legend-left nationality\">\n              <div className=\"circle is-mm\"></div>\n              <h5 className=\"is-mm\">Mm</h5>\n              <div className=\"circle is-fr\"></div>\n              <h5 className=\"is-us\">Fr</h5>\n              <div className=\"circle is-ch\"></div>\n              <h5 className=\"is-us\">Ch</h5>\n              <div className=\"circle is-us\"></div>\n              <h5 className=\"is-us\">Us</h5>\n            </div>\n          )}\n\n          <div className={`select ${colorMode}`}>\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                setColorMode(event.target.value);\n              }}\n              defaultValue={colorMode}\n            >\n              {/* <option value=\"\" disabled>\n                Color modes\n              </option> */}\n              <option value=\"genders\">{t(\"Genders\")}</option>\n              <option value=\"transmission\">{t(\"Transmission\")}</option>\n              <option value=\"nationality\">{t(\"Nationality\")}</option>\n              {/* <option value=\"age\">Age</option>*/}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"header fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <div>\n          <h1>{t('demographics.title')}</h1>\n\n          <div className=\"deep-dive\">\n            <h5>Expand</h5>\n            <input\n              type=\"checkbox\"\n              checked={scaleMode}\n              onChange={(event) => {\n                setScaleMode(!scaleMode);\n              }}\n              className=\"switch\"\n            />\n          </div>\n        </div>\n        <h6 className=\"disclaimer\">\n        {t('demographics.disclaimer')}\n        </h6>\n      </div>\n\n      <div\n        className=\"reminder fadeInUp\"\n        style={{animationDelay: '1s', display: showReminder ? '' : 'none'}}\n      >\n        <Icon.XCircle\n          onClick={() => {\n            setShowReminder(false);\n          }}\n        />\n        <p>\n        {t('demographics.reminder.line1')}\n        <br/>\n        <br/>\n        {t('demographics.reminder.line2')}\n        </p>\n      </div>\n\n      {fetched && (\n        <div className=\"patientdb-wrapper\">\n          {loading ? (\n            ' '\n          ) : message ? (\n            <div className=\"no-result\">\n              <h5>\n                There were no new cases in\n                <span>\n                  {filters.detectedcity.length > 0\n                    ? ` ${filters.detectedcity}, `\n                    : ''}\n                  {filters.detecteddistrict.length > 0\n                    ? ` ${filters.detecteddistrict}, `\n                    : ''}\n                  {' ' + filters.detectedstate}\n                </span>{' '}\n                on <span>{filters.dateannounced}.</span>\n              </h5>\n            </div>\n          ) : (\n            <Patients\n              patients={filteredPatients}\n              colorMode={colorMode}\n              expand={scaleMode}\n            />\n          )}\n        </div>\n      )}\n\n      <DownloadBlock patients={patients} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default PatientDB;\n","import axios from 'axios';\nimport * as d3 from 'd3';\nimport React, {useEffect, useRef, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport ForceGraph2D from 'react-force-graph-2d';\n\nconst isEqual = () => {\n  return true;\n};\n\nfunction Clusters({stateCode}) {\n  const [fetched, setFetched] = useState(false);\n  const [stateRawData, setStateRawData] = useState([]);\n  const [networkData, setNetworkData] = useState([]);\n\n  function prepareNetworkData(data) {\n    // Parse data\n    let contractedStr = data.reduce(\n      (acc, v) => acc + v.contractedfromwhichpatientsuspected + ', ',\n      ''\n    );\n    contractedStr = contractedStr.replace(/\\s+/g, '');\n    const sources = new Set(contractedStr.match(/[^,]+/g));\n\n    // Prepare nodes and links\n    const nodes = [];\n    const nodesSet = new Set();\n    const links = [];\n    data.forEach((d) => {\n      const contractedStr = d.contractedfromwhichpatientsuspected.replace(\n        /\\s+/g,\n        ''\n      );\n      const contracted = contractedStr.match(/[^,]+/g);\n      if (contracted) {\n        const pid = 'P' + d.patientnumber;\n        nodesSet.add(pid);\n        nodes.push({\n          id: pid,\n          group: sources.has(d.patientnumber) ? 'source' : 'target',\n          raw: d,\n        });\n        contracted.forEach((p) => {\n          links.push({\n            source: 'P' + p,\n            target: pid,\n          });\n        });\n      }\n    });\n\n    // Add missing nodes\n    links.forEach((d) => {\n      if (!nodesSet.has(d.source)) {\n        nodes.push({\n          id: d.source,\n          group: 'source',\n          raw: d.source,\n        });\n        nodesSet.add(d.source);\n      }\n    });\n    return {\n      nodes: nodes,\n      links: links,\n    };\n  }\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const rawDataResponse = await axios.get(\n          'https://thantthet.github.io/covid19-api/raw_data.json'\n        );\n        setStateRawData(\n          rawDataResponse.data.raw_data.filter((d) => d.statecode === stateCode)\n        );\n        setFetched(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    if (!fetched) {\n      getData();\n    }\n  }, [fetched, stateCode]);\n\n  useEffect(() => {\n    setNetworkData(prepareNetworkData(stateRawData));\n  }, [stateRawData]);\n\n  const NetworkGraph = () => {\n    const fgRef = useRef();\n\n    useEffect(() => {\n      const fg = fgRef.current;\n      const width = document.getElementById('clusters').offsetWidth;\n      const height = width;\n      // Deactivate existing forces\n      fg.d3Force('charge').strength(-60);\n      fg.d3Force('collision', d3.forceCollide());\n      fg.d3Force('x', d3.forceX().strength(0.3));\n      fg.d3Force('y', d3.forceY().strength(0.3));\n      fg.d3Force('box', boxForce);\n\n      // Custom force to keep everything inside box\n      function boxForce() {\n        for (let i = 0, n = networkData.nodes.length; i < n; ++i) {\n          const currNode = networkData.nodes[i];\n          currNode.x = Math.max(-width, Math.min(width, currNode.x));\n          currNode.y = Math.max(-height, Math.min(height, currNode.y));\n        }\n      }\n    }, []);\n\n    const width = document.getElementById('clusters').offsetWidth;\n    const height = width;\n\n    return (\n      <ForceGraph2D\n        ref={fgRef}\n        width={width}\n        height={height}\n        graphData={networkData}\n        nodeLabel=\"id\"\n        nodeColor={(node) => (node.group === 'source' ? '#dc3545' : 'gray')}\n        linkDirectionalParticleColor={() => 'red'}\n        linkDirectionalParticles={1}\n        linkDirectionalParticleWidth={(link) =>\n          link.source.id[0] === 'P' ? 2 : 0\n        }\n        enableZoomPanInteraction={false}\n      />\n    );\n  };\n\n  useEffect(() => {\n    ReactDOM.render(<NetworkGraph />, document.getElementById('clusters'));\n  }, [networkData]);\n\n  return <div id=\"clusters\"></div>;\n}\n\nexport default React.memo(Clusters, isEqual);\n","import * as d3 from 'd3';\nimport React, {useEffect, useRef, useState} from 'react';\n\nfunction DeltaBarGraph({timeseries, arrayKey}) {\n  const [data, setData] = useState([]);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    setData(timeseries);\n  }, [timeseries]);\n\n  useEffect(() => {\n    if (!data.length) return;\n\n    const svg = d3.select(svgRef.current);\n    const width = +svg.attr('width');\n    const height = +svg.attr('height');\n\n    const margin = {top: 50, right: 0, bottom: 50, left: 0};\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const barRadius = 5;\n\n    const formatTime = d3.timeFormat('%e %b');\n    const xScale = d3\n      .scaleBand()\n      .domain(data.map((d) => formatTime(d.date)))\n      .range([margin.left, chartRight])\n      .paddingInner(0.33);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([\n        0,\n        Math.max(\n          1,\n          d3.max(data, (d) => d[arrayKey])\n        ),\n      ])\n      .range([chartBottom, margin.top]); // - barRadius\n\n    const xAxis = d3.axisBottom(xScale).tickSize(0);\n\n    svg\n      .select('.x-axis')\n      .style('transform', `translateY(${chartBottom}px)`)\n      .call(xAxis)\n      .call((g) => g.select('.domain').remove())\n      .selectAll('text')\n      .attr('y', 0)\n      .attr('x', -40)\n      .attr('dy', '.35em')\n      .attr('transform', 'rotate(-90)')\n      .style('text-anchor', 'start');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .join('path')\n      .attr('class', 'bar')\n      .attr('d', (d) =>\n        roundedBar(\n          xScale(formatTime(d.date)),\n          chartBottom,\n          xScale.bandwidth(),\n          chartBottom - yScale(d[arrayKey]),\n          barRadius\n        )\n      )\n      .attr('fill', (d, i) => (i < data.length - 1 ? '#dc354590' : '#dc3545'));\n\n    svg\n      .selectAll('.delta')\n      .data(data)\n      .join('text')\n      .attr('class', 'delta')\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '11px')\n      .attr('x', (d) => xScale(formatTime(d.date)) + xScale.bandwidth() / 2)\n      .attr('y', (d) => yScale(d[arrayKey]) - 6)\n      .text((d) => d[arrayKey])\n      .append('tspan')\n      .attr('class', 'percent')\n      .attr('x', (d) => xScale(formatTime(d.date)) + xScale.bandwidth() / 2)\n      .attr('dy', '-1.2em')\n      .text((d, i) =>\n        i && data[i - 1][arrayKey]\n          ? d3.format('+.1%')(\n              (data[i][arrayKey] - data[i - 1][arrayKey]) /\n                data[i - 1][arrayKey]\n            )\n          : ''\n      );\n  }, [data, arrayKey]);\n\n  return (\n    <div className=\"DeltaBarGraph fadeInUp\" style={{animationDelay: '0.8s'}}>\n      <svg\n        ref={svgRef}\n        width=\"250\"\n        height=\"250\"\n        viewBox=\"0 0 250 250\"\n        preserveAspectRatio=\"xMidYMid meet\"\n      >\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  );\n}\n\nexport default React.memo(DeltaBarGraph);\n\nfunction roundedBar(x, y, w, h, r, f) {\n  if (!h) return;\n  // Flag for sweep:\n  if (f === undefined) f = 1;\n  // x coordinates of top of arcs\n  const x0 = x + r;\n  const x1 = x + w - r;\n  // y coordinates of bottom of arcs\n  const y0 = y - h + r;\n\n  const parts = [\n    'M',\n    x,\n    y,\n    'L',\n    x,\n    y0,\n    'A',\n    r,\n    r,\n    0,\n    0,\n    f,\n    x0,\n    y - h,\n    'L',\n    x1,\n    y - h,\n    'A',\n    r,\n    r,\n    0,\n    0,\n    f,\n    x + w,\n    y0,\n    'L',\n    x + w,\n    y,\n    'Z',\n  ];\n  return parts.join(' ');\n}\n","import {useTranslation} from 'react-i18next';\nimport Clusters from './clusters';\nimport DeltaBarGraph from './deltabargraph';\nimport Footer from './footer';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport TimeSeries from './timeseries';\n\nimport {MAP_META, STATE_CODES} from '../constants';\nimport {\n  formatDateAbsolute,\n  parseStateTimeseries,\n} from '../utils/commonfunctions';\n\nimport axios from 'axios';\nimport React, {useEffect, useRef, useState} from 'react';\nimport * as Icon from 'react-feather';\nimport {Link, useParams} from 'react-router-dom';\n\nfunction State(props) {\n  const {t} = useTranslation();\n  const mapRef = useRef();\n  const tsRef = useRef();\n\n  const {stateCode} = useParams();\n\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState({});\n  const [graphOption, setGraphOption] = useState(1);\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [stateData, setStateData] = useState({});\n  const [districtData, setDistrictData] = useState({});\n  const [stateName] = useState(STATE_CODES[stateCode]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getState(stateCode);\n    }\n  }, [fetched, stateCode]);\n\n  const getState = async (code) => {\n    try {\n      const [\n        {data: dataResponse},\n        {data: stateDistrictWiseResponse},\n        {data: statesDailyResponse},\n      ] = await Promise.all([\n        axios.get('https://thantthet.github.io/covid19-api/data.json'),\n        axios.get('https://thantthet.github.io/covid19-api/state_district_wise.json'),\n        axios.get('https://thantthet.github.io/covid19-api/states_daily.json'),\n      ]);\n      const states = dataResponse.statewise;\n      setStateData(states.find((s) => s.statecode === code));\n      const ts = parseStateTimeseries(statesDailyResponse)[code];\n      setTimeseries(ts);\n      const name = STATE_CODES[code];\n      setDistrictData({\n        [name]: stateDistrictWiseResponse[name],\n      });\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"State\">\n        <div className=\"state-left\">\n          <div className=\"breadcrumb fadeInUp\">\n            <Link to=\"/\">Home</Link>/\n            <Link to={`${stateCode}`}>{stateName}</Link>\n          </div>\n\n          <div className=\"header\">\n            <div\n              className=\"header-left fadeInUp\"\n              style={{animationDelay: '0.3s'}}\n            >\n              <h1>{t(`statenames.${stateName.toLowerCase()}`)}</h1>\n              <h5>\n                {t('statepage.lastUpdatedOn', {time: Object.keys(stateData).length\n                  ? formatDateAbsolute(stateData.lastupdatedtime)\n                  : ''})}\n              </h5>\n            </div>\u001b\n          </div>\n\n          {fetched && <Level data={stateData} />}\n          {fetched && <Minigraph timeseries={timeseries} />}\n          {fetched && (\n            <React.Fragment>\n              {\n                <MapExplorer\n                  forwardRef={mapRef}\n                  mapMeta={MAP_META[stateName]}\n                  states={[stateData]}\n                  stateDistrictWiseData={districtData}\n                  isCountryLoaded={false}\n                />\n              }\n            </React.Fragment>\n          )}\n\n          {fetched && (\n            <div className=\"meta-secondary\">\n              <div className=\"unknown\">\n                <Icon.AlertCircle />\n                <div className=\"unknown-right\">\n                  Awaiting district details for{' '}\n                  {districtData[stateName]?.districtData['Unknown']\n                    ?.confirmed || '0'}{' '}\n                  cases\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"state-right\">\n          {fetched && (\n            <React.Fragment>\n              <div className=\"district-bar\">\n                <div\n                  className=\"district-bar-left fadeInUp\"\n                  style={{animationDelay: '0.6s'}}\n                >\n                  <h2>{t(\"statepage.topDistrict\")}</h2>\n                  <div className=\"districts\">\n                    {districtData[stateName]\n                      ? Object.keys(districtData[stateName].districtData)\n                          .filter((d) => d !== 'Unknown')\n                          .sort(\n                            (a, b) =>\n                              districtData[stateName].districtData[b]\n                                .confirmed -\n                              districtData[stateName].districtData[a].confirmed\n                          )\n                          .slice(0, 6)\n                          .map((district, index) => {\n                            return (\n                              <div key={index} className=\"district\">\n                                <h2>\n                                  {\n                                    districtData[stateName].districtData[\n                                      district\n                                    ].confirmed\n                                  }\n                                </h2>\n                                <h5>{district}</h5>\n                                <div className=\"delta\">\n                                  <Icon.ArrowUp />\n                                  <h6>\n                                    {\n                                      districtData[stateName].districtData[\n                                        district\n                                      ].delta.confirmed\n                                    }\n                                  </h6>\n                                </div>\n                              </div>\n                            );\n                          })\n                      : ''}\n                  </div>\n                </div>\n                <div className=\"district-bar-right\">\n                  {\n                    <DeltaBarGraph\n                      timeseries={timeseries.slice(-5)}\n                      arrayKey={'dailyconfirmed'}\n                    />\n                  }\n                </div>\n              </div>\n\n              <div\n                className=\"timeseries-header fadeInUp\"\n                style={{animationDelay: '2.5s'}}\n                ref={tsRef}\n              >\n                <div className=\"tabs\">\n                  <div\n                    className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(1);\n                    }}\n                  >\n                    <h4>{t(\"Cumulative\")}</h4>\n                  </div>\n                  <div\n                    className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(2);\n                    }}\n                  >\n                    <h4>{t(\"Daily\")}</h4>\n                  </div>\n                </div>\n\n                <div className=\"scale-modes\">\n                  <label className=\"main\">{t(\"Scale Modes\")}</label>\n                  <div className=\"timeseries-mode\">\n                    <label htmlFor=\"timeseries-mode\">{t(\"chart.mode.uniform\")}</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={timeseriesMode}\n                      className=\"switch\"\n                      aria-label=\"Checked by default to scale uniformly.\"\n                      onChange={(event) => {\n                        setTimeseriesMode(!timeseriesMode);\n                      }}\n                    />\n                  </div>\n                  <div\n                    className={`timeseries-logmode ${\n                      graphOption !== 1 ? 'disabled' : ''\n                    }`}\n                  >\n                    <label htmlFor=\"timeseries-logmode\">{t(\"chart.mode.logarithmic\")}</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={graphOption === 1 && timeseriesLogMode}\n                      className=\"switch\"\n                      disabled={graphOption !== 1}\n                      onChange={(event) => {\n                        setTimeseriesLogMode(!timeseriesLogMode);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <TimeSeries\n                timeseries={timeseries}\n                type={graphOption}\n                mode={timeseriesMode}\n                logMode={timeseriesLogMode}\n              />\n            </React.Fragment>\n          )}\n        </div>\n\n        <div className=\"state-left\">\n          <div className=\"Clusters fadeInUp\" style={{animationDelay: '0.8s'}}>\n            <h1>{t(\"Network of transmission\")}</h1>\n            <Clusters stateCode={stateCode} />\n          </div>\n        </div>\n\n        <div className=\"state-right\"></div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(State);\n","import {useTranslation} from 'react-i18next';\nimport './App.scss';\n\nimport DeepDive from './components/deepdive';\nimport Home from './components/home';\nimport Navbar from './components/navbar';\nimport PatientDB from './components/patientdb';\nimport State from './components/state';\n\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport {useLocalStorage} from 'react-use';\n\nfunction App() {\n  const {t} = useTranslation();\n\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: t('menu.home'),\n      animationDelayForNavbar: 0.2,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/demographics',\n      view: PatientDB,\n      displayName: t('menu.demographics'),\n      animationDelayForNavbar: 0.3,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/deepdive',\n      view: DeepDive,\n      displayName: t('menu.deepdrive'),\n      animationDelayForNavbar: 0.4,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/state/:stateCode',\n      view: State,\n      displayName: t('menu.state'),\n      animationDelayForNavbar: 0.7,\n      showInNavbar: false,\n    },\n  ];\n\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\n\n  React.useEffect(() => {\n    if (darkMode) {\n      document.querySelector('body').classList.add('dark-mode');\n    } else {\n      document.querySelector('body').classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n      <Router>\n        <Route\n          render={({location}) => (\n            <div className=\"Almighty-Router\">\n              <Navbar\n                pages={pages}\n                darkMode={darkMode}\n                setDarkMode={setDarkMode}\n              />\n              <Switch location={location}>\n                {pages.map((page, index) => {\n                  return (\n                    <Route\n                      exact\n                      path={page.pageLink}\n                      component={page.view}\n                      key={index}\n                    />\n                  );\n                })}\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n          )}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n  name: 'default',\n  lookup(options) {\n    if (localStorage.getItem('i18nextLng')) {\n      return undefined\n    }\n    // defaults\n    return 'my-MM';\n  }\n};","import i18n from 'i18next';\nimport moment from 'moment';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Detector from './detector';\n\nconst languageDetector = new LanguageDetector();\nlanguageDetector.addDetector(Detector);\n\ni18n\n  .use(Backend)\n  .use(languageDetector)\n  .init({\n    debug: false,\n    fallbackLng: 'en',\n    backend: {\n      loadPath: '/locales/{{lng}}.json',\n    },\n    detection: {\n      // order and from where user language should be detected\n      order: ['default', 'querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain']\n    },\n    interpolation: {\n      escapeValue: false,\n      format: function(value, format, lng) {\n        if (value instanceof Date) return moment(value).local(lng).format(format);\n        if (format === 'numeric') return Number(value).toLocaleString(lng);\n        return value;\n      }\n    }\n  });\n\nexport default i18n;\n","import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {I18nextProvider} from 'react-i18next';\nimport i18n from './i18n';\n\nReactDOM.render(\n  <Suspense fallback={''}>\n    <I18nextProvider i18n={i18n}>\n\t\t<App />\n    </I18nextProvider>\n  </Suspense>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}