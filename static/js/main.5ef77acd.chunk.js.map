{"version":3,"sources":["components/Charts/chart-defaults.js","components/Charts/agechart.js","constants.js","utils/commonfunctions.js","components/Charts/allstates.js","components/Charts/dailyconfirmedchart.js","components/Charts/genderchart.js","components/Charts/growthtrendchart.js","components/Charts/nationalitychart.js","components/Charts/totalconfirmedchart.js","components/deepdive.js","components/footer.js","components/level.js","components/legend.js","components/choropleth.js","components/mapexplorer.js","components/minigraph.js","components/row.js","components/table.js","components/timeseries.js","utils/hooks.js","components/timeseriesexplorer.js","components/updates.js","components/home.js","components/languageswitcher.js","components/navbar.js","components/downloadblock.js","components/patientsview.js","components/patients.js","components/patientdb.js","components/clusters.js","components/deltabargraph.js","components/state.js","utils/ScrollToTop.js","App.js","serviceWorker.js","i18n/detector.js","i18n/index.js","index.js"],"names":["defaults","global","deepmerge","defaultFontFamily","elements","line","fill","point","pointStyle","tooltips","intersect","mode","position","displayColors","borderWidth","titleSpacing","titleMarginBottom","bodySpacing","cornerRadius","xPadding","yPadding","caretSize","legend","display","labels","padding","usePointStyle","hover","layout","left","right","top","bottom","formatNumber","number","window","Intl","NumberFormat","i18n","language","format","defaultOptions","responsive","events","maintainAspectRatio","backgroundColor","titleFontColor","bodyFontColor","callbacks","label","tooltipItem","data","datasets","datasetIndex","Math","round","yLabel","radius","tension","yAxisDefaults","type","ticks","beginAtZero","max","undefined","precision","callback","value","gridLines","color","drawBorder","tickMarkLength","xAxisDefaults","AgeChart","props","t","useTranslation","ages","Array","length","forEach","patient","agebracket","age","parseInt","i","chartData","chartOptions","scales","xAxes","stacked","yAxes","sampleSize","reduce","a","b","className","title","options","size","MAP_TYPES","MAP_META","Myanmar","name","geoDataFile","mapType","graphObjectName","Ayeyarwady","Bago","Chin","Kachin","Kayah","Kayin","Magway","Mandalay","Mon","Rakhine","Sagaing","Shan","Tanintharyi","Yangon","STATE_CODES","stateCodes","reverseStateCodes","Object","keys","map","key","index","push","code","months","localizedStateName","toLowerCase","getStateName","toUpperCase","getMyanmarDay","startOfDay","utcToZonedTime","Date","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","Number","preprocessTimeseries","timeseries","dataTypes","filter","d","every","dt","date","today","parse","isBefore","validateCTS","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","totalactive","dailyactive","numberFormatter","isNaN","parseStateTimeseries","states_daily","statewiseSeries","c","entries","k","v","stateCode","prev","AllStatesChart","dates","chartReference","React","createRef","statesData","Map","status","has","set","previousValue","get","currentValue","sortedMap","sort","colors","borderCapStyle","pointBackgroundColor","borderColor","pointHoverRadius","dataset","boxWidth","fontSize","scaleLabel","labelString","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","week","quarter","ref","style","marginTop","height","onClick","ci","current","chartInstance","meta","getDatasetMeta","hidden","update","DailyConfirmedChart","confirmed","recovered","deceased","barDataSet","reverse","generateLabels","chart","GenderChart","male","female","gender","total","_meta","percentage","parseFloat","toFixed","GrowthTrendChart","caretPadding","statesDailyData","x","stateData","weekSum","idx","y","order","cubicInterpolationMode","min","values","toString","NationalityChart","nationality","hasOwnProperty","country","TotalConfirmedChart","DeepDive","useState","fetched","setFetched","setTimeseries","rawData","setRawData","statesTimeSeries","setStatesTimeSeries","useEffect","getStates","Promise","all","axios","response","rawDataResponse","stateDailyResponse","cases_time_series","raw_data","console","log","Helmet","content","animationDelay","memo","href","target","rel","setData","useEffectOnce","active","deaths","deltaconfirmed","deltadeaths","deltarecovered","ramp","n","canvas","document","createElement","context","width","getContext","fillStyle","fillRect","tickSize","marginRight","marginBottom","marginLeft","tickFormat","tickValues","svg","d3","attr","tickAdjust","g","selectAll","interpolate","domain","range","copy","rangeRound","append","toDataURL","interpolator","assign","invertExtent","thresholds","quantiles","thresholdFormat","join","bandwidth","call","select","remove","text","node","propertyFieldMap","state","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","setSelectedRegion","isCountryLoaded","mapOption","choroplethMap","useRef","choroplethLegend","svgRenderCount","setSvgRenderCount","ready","useCallback","geoData","path","propertyField","topology","topojson","objects","projection","widthStyle","fitWidth","heightStyle","fitSize","bBox","bounds","split","svgLegend","colorScale","widthLegend","heightLegend","isInteger","onceTouchedRegion","features","region","properties","on","handleMouseEnter","stopPropagation","toTitleCase","err","str","charAt","prevCount","classed","nodes","parentNode","appendChild","id","preserveAspectRatio","Unknown","colorInterpolationFilters","getRegionFromState","states","stateDistrictWiseData","regionHighlighted","onMapHighlightChange","anchor","setAnchor","mapOptionProp","panelRegion","setPanelRegion","currentHoveredRegion","setCurrentHoveredRegion","currentMap","setCurrentMap","useLocalStorage","setMapOption","useMemo","acc","dtype","currentMapData","typeCount","districtWiseData","districtData","district","find","getRegionFromDistrict","statecode","districtName","newMap","switchMapToState","topDistrict","innerWidth","lastupdatedtime","formatDistance","to","fontWeight","timeSeriesData","setTimeSeriesData","svgRef1","svgRef2","svgRef3","svgRef4","graphData","margin","chartRight","chartBottom","svg1","svg2","svg3","svg4","xScale","svgArray","dailyMin","dailyMax","domainMinMax","yScale","datum","curve","totalLength","getTotalLength","transition","delay","duration","enter","viewBox","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","showDistricts","setShowDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","handleTooltip","e","sortDistricts","aDistricts","sorted","district1","district2","value1","value2","comparisonValue","handleSort","column","setItem","Fragment","isHighlighted","onMouseEnter","onHighlightState","onMouseLeave","handleReveal","background","reveal","statenotes","data-tip","data-event","data-event-off","place","effect","multiline","scrollHide","globalEventOff","colSpan","highlightedDistrict","onHighlightDistrict","data-for","notes","delta","setStates","revealedStates","setRevealedStates","count","setCount","summary","s","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","rowHighlighted","isDistrict","prevProps","currProps","JSON","stringify","Infinity","lastDaysCount","setLastDaysCount","datapoint","setDatapoint","setIndex","setMode","logMode","setLogMode","chartType","setChartType","moving","setMoving","wrapperRef","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","observer","entry","contentRect","observe","unobserve","useResizeObserver","transformTimeSeries","slicedTimeseries","days","sliceTimeseriesFromEnd","T","yScales","dateMin","subDays","dateMax","addDays","clamp","numTicksX","xAxis","xAxis2","yAxis","tickPadding","plotTotal","dataTypesTotal","dataTypesDaily","uniformScaleMin","uniformScaleMax","yScaleUniformLinear","nice","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","typeTotal","typeDaily","filteredTimeseries","p","getPointAtLength","repeat","mousemove","mouseout","xm","this","invert","bisectDate","f","j","dateStr","chartKey1","chartKey2","chartKey3","chartKey4","currentStatusCount","currentDiff","formatedDiff","aria-label","activeStateCode","graphOption","setGraphOption","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","htmlFor","checked","onChange","event","disabled","selectedState","selectedOptions","statedata","isTotal","newDate","currentDate","Updates","updates","setUpdates","then","catch","useLayoutEffect","activity","replace","activityDate","timestamp","getDate","dangerouslySetInnerHTML","__html","setStateDistrictWiseData","lastUpdated","setLastUpdated","setActiveStateCode","setRegionHighlighted","setRowHighlighted","showUpdates","setShowUpdates","lastViewedLog","setLastViewedLog","newUpdate","setNewUpdate","useFavicon","lastTimestamp","stateDistrictWiseResponse","statesDailyResponse","statewise","ts","LanguageSwitcher","changeLanguage","locales","lang","activeNavIcon","stroke","location","pathname","Expand","expand","pages","setExpand","expandElement","anime","targets","translateX","easing","page","showInNavbar","pageLink","animationDelayForNavbar","displayName","Navbar","darkMode","setDarkMode","setIsThemeSet","useLockBodyScroll","windowSize","useWindowSize","prevMode","strokeDashoffset","setDashoffset","el","direction","loop","PatientsView","logs","setModal","setPatient","applyClass","indexTwo","patientnumber","Patients","patients","setPatients","setLogs","modal","onclick","getElementById","parseByDate","dateannounced","list","colorMode","typeoftransmission","getClassNameFn","contractedfromwhichpatientsuspected","patientid","patientIndex","switchPatient","detectedcity","detecteddistrict","detectedstate","source1","source2","source3","filterByObject","obj","filters","PatientDB","filteredPatients","setFilteredPatients","useLocation","setColorMode","scaleMode","setScaleMode","filterDate","setFilterDate","showReminder","setShowReminder","message","setMessage","loading","setLoading","setFilters","scrollTo","querySelectorAll","setAttribute","handleFilters","newFilters","city","selectedIndex","getSortedValues","setValues","Set","add","from","defaultValue","selected","minDate","maxDate","calendarIcon","inputProps","onkeydown","preventDefault","clearIcon","fomattedDate","stateRawData","setStateRawData","networkData","setNetworkData","getData","contractedStr","sources","match","nodesSet","links","contracted","pid","group","raw","source","prepareNetworkData","NetworkGraph","fgRef","fg","offsetWidth","d3Force","strength","currNode","nodeLabel","nodeColor","linkDirectionalParticleColor","linkDirectionalParticles","linkDirectionalParticleWidth","link","enableZoomPanInteraction","ReactDOM","render","arrayKey","svgRef","formatTime","paddingInner","w","h","r","y0","roundedBar","mapRef","useParams","allStateData","setAllStateData","setStateData","setDistrictData","stateName","useMeasure","mapSwitcher","showAllDistricts","setShowAllDistricts","getState","dataResponse","opacity","gridRowCount","gridColumnCount","districtCount","ceil","getGridRowCount","Item","Caret","Menu","transform","forwardRef","gridTemplateRows","ScrollToTop","schemaMarkup","alternateName","url","image","App","view","Home","State","isThemeSet","matchMedia","matches","classList","exact","params","Boolean","hostname","lookup","languageDetector","LanguageDetector","addDetector","Detector","use","Backend","init","debug","fallbackLng","backend","loadPath","detection","interpolation","escapeValue","lng","moment","local","toLocaleString","fallback","navigator","serviceWorker","registration","unregister","error"],"mappings":"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","file":"static/js/main.5ef77acd.chunk.js","sourcesContent":["import deepmerge from 'deepmerge';\nimport {defaults} from 'react-chartjs-2';\nimport i18n from 'i18next';\n\ndefaults.global = deepmerge(defaults.global, {\n  defaultFontFamily: 'Archia',\n  elements: {\n    line: {\n      fill: false,\n    },\n    point: {\n      pointStyle: 'rectRounded',\n    },\n  },\n  tooltips: {\n    intersect: false,\n    mode: 'nearest',\n    position: 'average',\n    displayColors: false,\n    borderWidth: 0,\n    titleSpacing: 4,\n    titleMarginBottom: 8,\n    bodySpacing: 5,\n    cornerRadius: 3,\n    xPadding: 6,\n    yPadding: 6,\n    caretSize: 0,\n  },\n  legend: {\n    display: true,\n    position: 'bottom',\n    labels: {\n      padding: 15,\n      usePointStyle: true,\n    },\n  },\n  hover: {\n    intersect: false,\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 20,\n    },\n  },\n});\n\nconst formatNumber = (number) =>\n  'Intl' in window ? new Intl.NumberFormat(i18n.language).format(number) : number;\n\nconst defaultOptions = {\n  responsive: true,\n  events: [\n    'click',\n    'mousemove',\n    'mouseout',\n    'touchstart',\n    'touchmove',\n    'touchend',\n  ],\n  maintainAspectRatio: false,\n  tooltips: {\n    backgroundColor: 'rgba(20,20,20,0.9)',\n    titleFontColor: 'rgba(255,255,255, 0.9)',\n    bodyFontColor: 'rgba(255,255,255, 0.9)',\n    caretSize: 0,\n    borderWidth: 0,\n    mode: 'index',\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let label = data.datasets[tooltipItem.datasetIndex].label || '';\n        if (label) {\n          label += ': ';\n        }\n        label += formatNumber(Math.round(tooltipItem.yLabel * 100) / 100);\n        return label;\n      },\n    },\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n    line: {\n      tension: 0.1,\n    },\n  },\n};\n\nconst yAxisDefaults = {\n  type: 'linear',\n  ticks: {\n    beginAtZero: true,\n    max: undefined,\n    precision: 0,\n    callback: (value) => formatNumber(value),\n  },\n  gridLines: {\n    color: 'rgba(0, 0, 0, 0.07)',\n    drawBorder: false,\n    tickMarkLength: 6,\n  },\n};\n\nconst xAxisDefaults = {\n  gridLines: {\n    color: 'rgba(0, 0, 0, 0)',\n  },\n};\n\nexport {defaultOptions, formatNumber, yAxisDefaults, xAxisDefaults};\n","import {defaultOptions, xAxisDefaults} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Bar} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction AgeChart(props) {\n  const {t} = useTranslation();\n  \n  const ages = Array(10).fill(0);\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.agebracket) {\n      const age = parseInt(patient.agebracket);\n      for (let i = 0; i < 10; i++) {\n        if (age > i * 10 && age <= (i + 1) * 10) {\n          ages[i]++;\n        }\n      }\n    }\n  });\n\n  const chartData = {\n    labels: [\n      '0-10',\n      '11-20',\n      '21-30',\n      '31-40',\n      '41-50',\n      '51-60',\n      '61-70',\n      '71-80',\n      '81-90',\n      '91-100',\n    ],\n    datasets: [\n      {\n        data: ages,\n        label: 'Cases',\n        backgroundColor: '#bc79c9',\n      },\n    ],\n  };\n\n  const chartOptions = deepmerge(defaultOptions, {\n    legend: {\n      display: false,\n    },\n    scales: {\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          stacked: true,\n        }),\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n  });\n\n  const sampleSize = ages.reduce((a, b) => a + b, 0);\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Bar data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">\n        {t(\"Sample size number of patients\", {size: sampleSize})}\n      </div>\n    </div>\n  );\n}\n\nexport default AgeChart;\n","export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nexport const MAP_STATISTICS = {\n  TOTAL: 0,\n  PER_MILLION: 1,\n};\n\nexport const MAPS_DIR = '/maps';\n\nexport const MAP_META = {\n  Myanmar: {\n    name: 'Myanmar',\n    geoDataFile: `${MAPS_DIR}/myanmar.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'myanmar',\n  },\n  Ayeyarwady: {\n    name: 'Ayeyarwady',\n    geoDataFile: `${MAPS_DIR}/ayeyarwady.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'ayeyarwady',\n  },\n  Bago: {\n    name: 'Bago',\n    geoDataFile: `${MAPS_DIR}/bago.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'bago',\n  },\n  Chin: {\n    name: 'Chin',\n    geoDataFile: `${MAPS_DIR}/chin.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chin',\n  },\n  Kachin: {\n    name: 'Kachin',\n    geoDataFile: `${MAPS_DIR}/kachin.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kachin',\n  },\n  Kayah: {\n    name: 'Kayah',\n    geoDataFile: `${MAPS_DIR}/kayah.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kayah',\n  },\n  Kayin: {\n    name: 'Kayin',\n    geoDataFile: `${MAPS_DIR}/kayin.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kayin',\n  },\n  Magway: {\n    name: 'Magway',\n    geoDataFile: `${MAPS_DIR}/magway.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'magway',\n  },\n  Mandalay: {\n    name: 'Mandalay',\n    geoDataFile: `${MAPS_DIR}/mandalay.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mandalay',\n  },\n  Mon: {\n    name: 'Mon',\n    geoDataFile: `${MAPS_DIR}/mon.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mon',\n  },\n  'Nay Pyi Taw': {\n    name: 'Nay Pyi Taw',\n    geoDataFile: `${MAPS_DIR}/naypyitaw.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'naypyitaw',\n  },\n  Rakhine: {\n    name: 'Rakhine',\n    geoDataFile: `${MAPS_DIR}/rakhine.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'rakhine',\n  },\n  Sagaing: {\n    name: 'Sagaing',\n    geoDataFile: `${MAPS_DIR}/sagaing.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'sagaing',\n  },\n  Shan: {\n    name: 'Shan',\n    geoDataFile: `${MAPS_DIR}/shan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'shan',\n  },\n  Tanintharyi: {\n    name: 'Tanintharyi',\n    geoDataFile: `${MAPS_DIR}/tanintharyi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tanintharyi',\n  },\n  Yangon: {\n    name: 'Yangon',\n    geoDataFile: `${MAPS_DIR}/yangon.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'yangon',\n  },\n};\n\nexport const STATE_CODES = {\n  \"MM-07\": 'Ayeyarwady',\n  \"MM-02\": 'Bago',\n  \"MM-14\": 'Chin',\n  \"MM-11\": 'Kachin',\n  \"MM-12\": 'Kayah',\n  \"MM-13\": 'Kayin',\n  \"MM-03\": 'Magway',\n  \"MM-04\": 'Mandalay',\n  \"MM-15\": 'Mon',\n  \"MM-18\": 'Nay Pyi Taw',\n  \"MM-16\": 'Rakhine',\n  \"MM-01\": 'Sagaing',\n  \"MM-17\": 'Shan',\n  \"MM-05\": 'Tanintharyi',\n  \"MM-06\": 'Yangon',\n};\n\nconst stateCodes = [];\nconst reverseStateCodes = {};\nObject.keys(STATE_CODES).map((key, index) => {\n  reverseStateCodes[STATE_CODES[key]] = key;\n  stateCodes.push({code: key, name: STATE_CODES[key]});\n  return null;\n});\nexport const STATE_CODES_REVERSE = reverseStateCodes;\nexport const STATE_CODES_ARRAY = stateCodes;\n\nexport const STATE_POPULATIONS = {\n};\n\nexport const DISTRICTS_ARRAY = [\n  \n];\n","import {STATE_CODES} from '../constants';\nimport i18n from 'i18next';\n\nimport {parse, isBefore, isSameDay, startOfDay} from 'date-fns';\nimport {utcToZonedTime} from 'date-fns-tz';\n\nconst months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nexport const localizedStateName = (name) => {\n  return i18n.t(`statenames.${name.toLowerCase()}`);\n};\n\nexport const getStateName = (code) => {\n  return localizedStateName(STATE_CODES[code.toUpperCase()]);\n};\n\nexport const getMyanmarDay = () => {\n  return startOfDay(utcToZonedTime(new Date(), 'Asia/Rangoon'));\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+06:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = Number(unformattedDate.slice(0, 2));\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return i18n.t(`absoluteDate`, {\n    time: time.slice(0, 5),\n    day: day,\n    month: i18n.t(months[month]),\n  });\n};\n\nconst validateCTS = (data = []) => {\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      // Skip data from the current day\n      const today = getMyanmarDay();\n      const date = parse(d.date, 'dd/MM/yyyy', new Date());\n      return isBefore(date, today);\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return validateCTS(timeseries).map((stat, index) => ({\n    date: parse(stat.date, 'dd/MM/yyyy', new Date()),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n    // Active = Confimed - Recovered - Deceased\n    totalactive:\n      +stat.totalconfirmed - +stat.totalrecovered - +stat.totaldeceased,\n    dailyactive:\n      +stat.dailyconfirmed - +stat.dailyrecovered - +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\nexport const formatNumber = (value) => {\n  const numberFormatter = new Intl.NumberFormat('en-US');\n  return isNaN(value) ? '-' : numberFormatter.format(value);\n};\n\nexport const parseStateTimeseries = ({states_daily: data}) => {\n  const statewiseSeries = Object.keys(STATE_CODES).reduce((a, c) => {\n    a[c] = [];\n    return a;\n  }, {});\n\n  const today = getMyanmarDay();\n  for (let i = 0; i < data.length; i += 3) {\n    const date = parse(data[i].date, 'dd/MM/yyyy', new Date());\n    // Skip data from the current day\n    if (isBefore(date, today)) {\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\n        const stateCode = k.toLowerCase();\n        const prev = v[v.length - 1] || {};\n        // Parser\n        const dailyconfirmed = +data[i][stateCode] || 0;\n        const dailyrecovered = +data[i + 1][stateCode] || 0;\n        const dailydeceased = +data[i + 2][stateCode] || 0;\n        const totalconfirmed = +data[i][stateCode] + (prev.totalconfirmed || 0);\n        const totalrecovered =\n          +data[i + 1][stateCode] + (prev.totalrecovered || 0);\n        const totaldeceased =\n          +data[i + 2][stateCode] + (prev.totaldeceased || 0);\n        // Push\n        v.push({\n          date: date,\n          dailyconfirmed: dailyconfirmed,\n          dailyrecovered: dailyrecovered,\n          dailydeceased: dailydeceased,\n          totalconfirmed: totalconfirmed,\n          totalrecovered: totalrecovered,\n          totaldeceased: totaldeceased,\n          // Active = Confimed - Recovered - Deceased\n          totalactive: totalconfirmed - totalrecovered - totaldeceased,\n          dailyactive: dailyconfirmed - dailyrecovered - dailydeceased,\n        });\n      });\n    }\n  }\n\n  return statewiseSeries;\n};\n\nexport const parseStateTestTimeseries = (data) => {\n  const stateCodeMap = Object.keys(STATE_CODES).reduce((ret, sc) => {\n    ret[STATE_CODES[sc]] = sc;\n    return ret;\n  }, {});\n\n  const testTimseries = Object.keys(STATE_CODES).reduce((ret, sc) => {\n    ret[sc] = [];\n    return ret;\n  }, {});\n\n  const today = getMyanmarDay();\n  data.forEach((d) => {\n    const date = parse(d.updatedon, 'dd/MM/yyyy', new Date());\n    const totaltested = +d.totaltested;\n    if (isBefore(date, today) && totaltested) {\n      const stateCode = stateCodeMap[d.state];\n      testTimseries[stateCode].push({\n        date: date,\n        totaltested: totaltested,\n      });\n    }\n  });\n  return testTimseries;\n};\n\nexport const parseTotalTestTimeseries = (data) => {\n  const testTimseries = [];\n  const today = getMyanmarDay();\n  data.forEach((d) => {\n    const date = parse(\n      d.updatetimestamp.split(' ')[0],\n      'dd/MM/yyyy',\n      new Date()\n    );\n    const totaltested = +d.totalsamplestested;\n    if (isBefore(date, today) && totaltested) {\n      testTimseries.push({\n        date: date,\n        totaltested: totaltested,\n      });\n    }\n  });\n  return testTimseries;\n};\n\nexport const mergeTimeseries = (ts1, ts2) => {\n  const tsRet = Object.assign({}, ts1);\n  for (const state in ts1) {\n    if (ts1.hasOwnProperty(state)) {\n      tsRet[state] = ts1[state].map((d1) => {\n        const testData = ts2[state].find((d2) => isSameDay(d1.date, d2.date));\n        return {\n          totaltested: testData?.totaltested,\n          ...d1,\n        };\n      });\n    }\n  }\n  return tsRet;\n};\n","import {defaultOptions, xAxisDefaults, yAxisDefaults} from './chart-defaults';\n\nimport {getStateName} from '../../utils/commonfunctions';\n\nimport {parse} from 'date-fns';\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction AllStatesChart(props) {\n  const {t} = useTranslation();\n  const dates = [];\n  const chartReference = React.createRef();\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n\n  props.data.forEach((data) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        const date = parse(data.date, 'dd/MM/yyyy', new Date());\n        dates.push(date);\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1])\n          : 0;\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n      statesData.get(key).push(previousValue + currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1] < b[1][b[1].length - 1] ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#718af0',\n    '#7dd6fa',\n    '#59b3aa',\n    '#9bc26b',\n    '#e5d22f',\n    '#ffb041',\n    '#ff8a66',\n    '#db6b8f',\n    '#bd66cc',\n    '#8e8e8e',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      borderWidth: 2,\n      data: statesData.get(key),\n      borderCapStyle: 'round',\n      pointBackgroundColor: colors[index],\n      label: getStateName(key),\n      borderColor: colors[index],\n      pointHoverRadius: 0.5,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: datasets,\n  };\n\n  const options = deepmerge(defaultOptions, {\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0,\n      },\n    },\n    legend: {\n      labels: {\n        boxWidth: 20,\n        fontSize: 11,\n      },\n    },\n    scales: {\n      yAxes: [\n        deepmerge(yAxisDefaults, {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        }),\n      ],\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        }),\n      ],\n    },\n  });\n\n  function toggleSelection() {\n    // Get reference of chartInstance and update it\n    const ci = chartReference.current.chartInstance;\n    for (let i = 0; i < ci.data.datasets.length; i++) {\n      const meta = ci.getDatasetMeta(i);\n      meta.hidden =\n        meta.hidden === null\n          ? !chartReference.current.chartInstance.data.datasets[i].hidden\n          : null;\n    }\n    ci.update();\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} ref={chartReference} />\n      </div>\n      <div className=\"chart-note\" style={{marginTop: '0px', height: '30px'}}>\n        <button onClick={toggleSelection}>{t(\"Toggle Selection\")}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AllStatesChart;\n","import {\n  defaultOptions,\n  xAxisDefaults,\n  yAxisDefaults,\n  formatNumber,\n} from './chart-defaults';\n\nimport {format, parse} from 'date-fns';\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction DailyConfirmedChart(props) {\n  const {t} = useTranslation();\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 31) {\n      const date = parse(data.date, 'dd/MM/yyyy', new Date());\n      dates.push(format(date, 'dd MMM'));\n      confirmed.push(data.dailyconfirmed);\n      recovered.push(data.dailyrecovered);\n      deceased.push(data.dailydeceased);\n    }\n  });\n\n  const barDataSet = {\n    labels: dates,\n    datasets: [\n      {\n        data: recovered,\n        label: t('recovered.full'),\n        backgroundColor: '#7ebf80',\n      },\n      {\n        data: deceased,\n        label: t('deceased.full'),\n        backgroundColor: '#6c757d',\n      },\n      {\n        data: confirmed,\n        label: t('confirmed.full'),\n        backgroundColor: '#ff6862',\n      },\n    ],\n  };\n\n  const options = deepmerge(defaultOptions, {\n    tooltips: {\n      mode: 'index',\n    },\n    legend: {\n      display: true,\n      reverse: true,\n      labels: {\n        usePointStyle: true, // Required to change pointstyle to 'rectRounded' from 'circle'\n        generateLabels: (chart) => {\n          const labels = defaults.global.legend.labels.generateLabels(chart);\n          labels.forEach((label) => {\n            label.pointStyle = 'rectRounded';\n          });\n          return labels;\n        },\n      },\n    },\n    scales: {\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          stacked: true,\n        }),\n      ],\n      yAxes: [\n        deepmerge(yAxisDefaults, {\n          stacked: true,\n          ticks: {\n            callback: (value) => formatNumber(value),\n          },\n        }),\n      ],\n    },\n  });\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Bar data={barDataSet} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default DailyConfirmedChart;\n","import {defaultOptions, formatNumber} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Doughnut} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction GenderChart(props) {\n  const {t} = useTranslation();\n  \n  let male = 0;\n  let female = 0;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.gender === 'M') {\n      male++;\n    } else if (patient.gender === 'F') {\n      female++;\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: [male, female],\n        backgroundColor: ['#6497f3', '#ea6e9a'],\n        label: 'Hola',\n      },\n    ],\n    labels: [t('Male'), t('Female')],\n  };\n\n  const chartOptions = deepmerge(defaultOptions, {\n    tooltips: {\n      mode: 'point',\n      position: 'nearest',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return formatNumber(currentValue) + ' (' + formatNumber(percentage) + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  });\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">\n        {t(\"Sample size number of patients\", {size: (male + female)})}\n      </div>\n    </div>\n  );\n}\n\nexport default GenderChart;\n","import {defaultOptions, xAxisDefaults, yAxisDefaults} from './chart-defaults';\n\nimport {getStateName} from '../../utils/commonfunctions';\n\nimport {parse} from 'date-fns';\nimport React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport deepmerge from 'deepmerge';\nimport {useTranslation} from 'react-i18next';\n\nfunction GrowthTrendChart(props) {\n  const {t} = useTranslation();\n  const dates = [];\n\n  defaults.global.elements.line.fill = false;\n\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n  const statesDailyData = new Map();\n\n  props.data.forEach((data, index) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        const date = parse(data.date, 'dd-MMM-yy', new Date());\n        dates.push(date);\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n\n      if (currentValue === 0 && !statesData.has(key)) {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n        statesDailyData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1].x)\n          : 0;\n\n      const stateData = statesDailyData.get(key);\n      let weekSum = 0;\n      for (let i = 1; i <= 7; ++i) {\n        const idx = stateData.length - i;\n        if (idx >= 0) {\n          weekSum += stateData[idx];\n        }\n      }\n      statesData.get(key).push({x: previousValue + currentValue, y: weekSum});\n      statesDailyData.get(key).push(currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1].x < b[1][b[1].length - 1].x ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#ff073a',\n    '#28a745',\n    '#342ead',\n    '#7D5BA6',\n    '#DD7596',\n    '#16c8f0',\n    '#f67575',\n    '#2b580c',\n    '#9D44B5',\n    '#91132d',\n    '#6D9DC5',\n    '#2b580c',\n    '#6c757d',\n    '#f67575',\n    '#d4f8e8',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      data: statesData.get(key),\n      label: getStateName(key),\n      order: index,\n      borderWidth: 1.0,\n      borderCapStyle: 'round',\n      borderColor: colors[index],\n      pointBackgroundColor: colors[index],\n      pointHoverRadius: 1.0,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    datasets: datasets,\n  };\n\n  const options = deepmerge(defaultOptions, {\n    responsive: true,\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        cubicInterpolationMode: 'monotone',\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        deepmerge(yAxisDefaults, {\n          type: 'logarithmic',\n          ticks: {\n            beginAtZero: true,\n            min: 1,\n            max: 2000,\n            precision: 0,\n            callback: function (value, index, values) {\n              return Number(value.toString());\n            },\n          },\n          scaleLabel: {\n            display: true,\n            labelString: t('New Cases (since last 7 days)'),\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        }),\n      ],\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          type: 'logarithmic',\n          ticks: {\n            beginAtZero: true,\n            min: 0,\n            max: 2000,\n            precision: 0,\n            callback: function (value, index, values) {\n              return Number(value.toString());\n            },\n          },\n          scaleLabel: {\n            display: true,\n            labelString: t('Total Cases'),\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        }),\n      ],\n    },\n  });\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default GrowthTrendChart;\n","import {defaultOptions, formatNumber} from './chart-defaults';\n\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Doughnut} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction NationalityChart(props) {\n  const {t} = useTranslation();\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const nationality = {};\n\n  props.data.forEach((patient) => {\n    if (!patient.nationality) {\n      return;\n    }\n    if (!nationality.hasOwnProperty(patient.nationality.toLowerCase())) {\n      nationality[patient.nationality.toLowerCase()] = 0;\n    }\n    nationality[patient.nationality.toLowerCase()]++;\n  });\n\n  // delete nationality.india;\n  const data = [];\n  const labels = [];\n\n  Object.keys(nationality).forEach((country) => {\n    if (country) {\n      labels.push(country.toUpperCase());\n      data.push(nationality[country]);\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: data,\n        backgroundColor: [\n          '#ff8a66',\n          '#718af0',\n          '#7dd6fa',\n          '#59b3aa',\n          '#9bc26b',\n          '#e5d22f',\n          '#ffb041',\n          '#db6b8f',\n          '#bd66cc',\n          '#8e8e8e',\n        ],\n      },\n    ],\n    labels: labels,\n  };\n\n  const chartOptions = deepmerge(defaultOptions, {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    legend: {\n      display: false,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return formatNumber(currentValue) + ' (' + formatNumber(percentage) + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  });\n\n  const sampleSize = data.reduce((a, b) => a + b, 0);\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">\n        {t(\"Sample size number of patients\", {size: sampleSize})}\n      </div>\n    </div>\n  );\n}\n\nexport default NationalityChart;\n","import {defaultOptions, xAxisDefaults, yAxisDefaults} from './chart-defaults';\n\nimport {parse} from 'date-fns';\nimport deepmerge from 'deepmerge';\nimport React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction TotalConfirmedChart(props) {\n  const {t} = useTranslation();\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 0) {\n      const date = parse(data.date, 'dd/MM/yyyy', new Date());\n      dates.push(date);\n      confirmed.push(data.totalconfirmed);\n      recovered.push(data.totalrecovered);\n      deceased.push(data.totaldeceased);\n    }\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: [\n      {\n        borderWidth: 2,\n        data: confirmed,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#ff6862',\n        label: t('confirmed.full'),\n        borderColor: '#ff6862',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: recovered,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#7ebf80',\n        label: t('recovered.full'),\n        borderColor: '#7ebf80',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: deceased,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#6c757d',\n        label: t('deceased.full'),\n        borderColor: '#6c757d',\n        pointHoverRadius: 2,\n      },\n    ],\n  };\n\n  const options = deepmerge(defaultOptions, {\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0.1,\n      },\n    },\n    scales: {\n      yAxes: [\n        deepmerge(yAxisDefaults, {\n          scaleLabel: {\n            display: false,\n            labelString: t('Total Cases'),\n          },\n        }),\n      ],\n      xAxes: [\n        deepmerge(xAxisDefaults, {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n        }),\n      ],\n    },\n  });\n\n  if (props.mode) {\n    options.scales.yAxes = [\n      {\n        type: 'logarithmic',\n        ticks: {\n          min: 0,\n          max: 10000,\n          callback: function (value, index, values) {\n            if (value === 10000) return '10000';\n            if (value === 2000) return '2500';\n            if (value === 500) return '500';\n            if (value === 100) return '100';\n            if (value === 20) return '25';\n            if (value === 5) return '5';\n            if (value === 0) return '0';\n            return null;\n          },\n        },\n        scaleLabel: {\n          display: false,\n          labelString: t('Total Cases'),\n        },\n      },\n    ];\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default TotalConfirmedChart;\n","import AgeChart from './Charts/agechart';\nimport AllStatesChart from './Charts/allstates';\nimport DailyConfirmedChart from './Charts/dailyconfirmedchart';\nimport GenderChart from './Charts/genderchart';\nimport GrowthTrendChart from './Charts/growthtrendchart';\nimport NationalityChart from './Charts/nationalitychart';\nimport TotalConfirmedChart from './Charts/totalconfirmedchart';\n\nimport axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useTranslation} from 'react-i18next';\n\nfunction DeepDive() {\n  const {t} = useTranslation();\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState([]);\n  const [rawData, setRawData] = useState([]);\n  const [statesTimeSeries, setStatesTimeSeries] = useState([]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        response,\n        rawDataResponse,\n        stateDailyResponse,\n      ] = await Promise.all([\n        axios.get('https://thantthet.github.io/covid19-api/data.json'),\n        axios.get('https://thantthet.github.io/covid19-api/raw_data.json'),\n        axios.get('https://thantthet.github.io/covid19-api/states_daily.json'),\n      ]);\n      setTimeseries(response.data.cases_time_series);\n      setStatesTimeSeries(stateDailyResponse.data.states_daily);\n      setRawData(rawDataResponse.data.raw_data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"cards-container\">\n      <Helmet>\n        <title>Deep Dive - covid19.ttkz.me</title>\n        <meta name=\"title\" content=\"Deep Dive - covid19.ttkz.me\" />\n      </Helmet>\n\n      <section className=\"cards\">\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <TotalConfirmedChart title={t(\"Total Cases\")} timeseries={timeseries} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <DailyConfirmedChart title={t(\"Daily Cases\")} timeseries={timeseries} />\n        </div>\n\n        <div\n          className=\"card card-big fadeInUp\"\n          style={{animationDelay: '0.7s'}}\n        >\n          <AllStatesChart\n            title={t(\"Total Cases by State\")}\n            data={statesTimeSeries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <GrowthTrendChart\n            title={t(\"States - Growth Trend\")}\n            data={statesTimeSeries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <GenderChart title={t(\"Patient Gender\")} data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AgeChart title={t(\"Patients by Age\")} data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <NationalityChart title={t(\"Patients by  Nationality\")} data={rawData} />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default DeepDive;\n","import React from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nfunction Footer(props) {\n  const {t} = useTranslation();\n  return (\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n      <h5>{t(\"We stand with everyone fighting on the frontlines\")}</h5>\n      <a\n        href=\"https://github.com/thantthet/covid19myanmar-react\"\n        className=\"button github\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.GitHub />\n        <span>A fork of covid19india.org</span>\n      </a>\n\n      <a\n        className=\"button excel\"\n        href=\"http://covidmyanmar.com\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.Database />\n        <span>Live data from covidmyanmar.com</span>\n      </a>\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n","import {formatNumber} from '../utils/commonfunctions';\n\nimport React, {useState} from 'react';\nimport {useEffectOnce} from 'react-use';\nimport {useTranslation} from 'react-i18next';\n\nfunction Level(props) {\n  const {t} = useTranslation();\n  const [data, setData] = useState(props.data);\n\n  useEffectOnce(() => {\n    setData({\n      active: +props.data.active,\n      confirmed: +props.data.confirmed,\n      recovered: +props.data.recovered,\n      deaths: +props.data.deaths,\n      deltaconfirmed: +props.data.deltaconfirmed,\n      deltadeaths: +props.data.deltadeaths,\n      deltarecovered: +props.data.deltarecovered,\n    });\n  });\n\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>{(t(\"confirmed.full\"))}</h5>\n        <h4>\n          [\n          {isNaN(data.deltaconfirmed)\n            ? ''\n            : data.deltaconfirmed > 0\n            ? '+' + formatNumber(data.deltaconfirmed)\n            : '+0'}\n          ]\n        </h4>\n        <h1>{formatNumber(data.confirmed)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">{t(\"active.full\")}</h5>\n        <h4>&nbsp;</h4>\n        <h1 className=\"title has-text-info\">{formatNumber(data.active)}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">{t(\"recovered.full\")}</h5>\n        <h4>\n          [\n          {isNaN(data.deltarecovered)\n            ? ''\n            : data.deltarecovered > 0\n            ? '+' + formatNumber(data.deltarecovered)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">\n          {formatNumber(data.recovered)}{' '}\n        </h1>\n      </div>\n\n      <div\n        className=\"level-item is-gray fadeInUp\"\n        style={{animationDelay: '1.3s'}}\n      >\n        <h5 className=\"heading\">{t(\"deceased.full\")}</h5>\n        <h4>\n          [\n          {isNaN(data.deltadeaths)\n            ? ''\n            : data.deltadeaths > 0\n            ? '+' + formatNumber(data.deltadeaths)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{formatNumber(data.deaths)}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Level);\n","/* Source: https://observablehq.com/@d3/color-legend */\n\nimport * as d3 from 'd3';\n\nfunction legend({\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n} = {}) {\n  const svg = d3\n    .create('svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', [0, 0, width, height])\n    .style('overflow', 'visible')\n    .style('display', 'block');\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\n      );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\n        ).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL());\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = d3\n          .range(n)\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? d3.format(tickFormat)\n        : tickFormat;\n\n    x = d3\n      .scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = d3.range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    x = d3\n      .scaleBand()\n      .domain(color.domain())\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.domain())\n      .join('rect')\n      .attr('x', x)\n      .attr('y', marginTop)\n      .attr('width', Math.max(0, x.bandwidth() - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', color);\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .append('g')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .call(\n      d3\n        .axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .call(tickAdjust)\n    .call((g) => g.select('.domain').remove())\n    .call((g) =>\n      g\n        .append('text')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  const canvas = document.createElement('canvas');\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n\nexport default legend;\n","import legend from './legend';\n\nimport {MAP_TYPES} from '../constants';\nimport {formatNumber} from '../utils/commonfunctions';\n\nimport * as d3 from 'd3';\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as Icon from 'react-feather';\nimport * as topojson from 'topojson';\nimport {useTranslation} from 'react-i18next';\n\nconst propertyFieldMap = {\n  country: 'ST',\n  state: 'DT',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n  setSelectedRegion,\n  isCountryLoaded,\n  mapOption,\n}) {\n  const {t} = useTranslation();\n  const choroplethMap = useRef(null);\n  const choroplethLegend = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const svg = d3.select(choroplethMap.current);\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n\n      // Set size of the map\n      let path;\n      let width;\n      let height;\n      if (!svg.attr('viewBox')) {\n        const widthStyle = parseInt(svg.style('width'));\n        if (isCountryLoaded) projection.fitWidth(widthStyle, topology);\n        else {\n          const heightStyle = parseInt(svg.style('height'));\n          projection.fitSize([widthStyle, heightStyle], topology);\n        }\n        path = d3.geoPath(projection);\n        const bBox = path.bounds(topology);\n        width = +bBox[1][0];\n        height = +bBox[1][1];\n        svg.attr('viewBox', `0 0 ${width} ${height}`);\n      }\n      const bBox = svg.attr('viewBox').split(' ');\n      width = +bBox[2];\n      height = +bBox[3];\n      projection.fitSize([width, height], topology);\n      path = d3.geoPath(projection);\n\n      /* Legend */\n      const svgLegend = d3.select(choroplethLegend.current);\n      svgLegend.selectAll('*').remove();\n      const colorInterpolator = (t) => {\n        switch (mapOption) {\n          case 'confirmed':\n            return d3.interpolateReds(t * 0.85);\n          case 'active':\n            return d3.interpolateBlues(t * 0.85);\n          case 'recovered':\n            return d3.interpolateGreens(t * 0.85);\n          case 'deceased':\n            return d3.interpolateGreys(t * 0.85);\n          default:\n            return;\n        }\n      };\n      const colorScale = d3.scaleSequential(\n        [0, Math.max(1, statistic[mapOption].max)],\n        colorInterpolator\n      );\n      // Colorbar\n      const widthLegend = parseInt(svgLegend.style('width'));\n      const heightLegend = +svgLegend.attr('height');\n      svgLegend.append('g').append(() =>\n        legend({\n          color: colorScale,\n          title: t(`${mapOption}.full`),\n          width: widthLegend,\n          height: 0.8 * heightLegend,\n          ticks: 6,\n          tickFormat: function (d, i, n) {\n            if (!Number.isInteger(d)) return;\n            if (i === n.length - 1) return formatNumber(d) + '+';\n            return formatNumber(d);\n          },\n          marginLeft: 2,\n          marginRight: 20,\n        })\n      );\n      svgLegend.attr('viewBox', `0 0 ${widthLegend} ${heightLegend}`);\n\n      /* Draw map */\n      let onceTouchedRegion = null;\n      const g = svg.append('g').attr('class', mapMeta.graphObjectName);\n      g.append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .join('path')\n        .attr('class', `path-region ${mapOption}`)\n        .attr('fill', function (d) {\n          const region = d.properties[propertyField];\n          const n = mapData[region] ? mapData[region][mapOption] : 0;\n          const color = n === 0 ? '#ffffff' : colorScale(n);\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseenter', (d) => {\n          handleMouseEnter(d.properties[propertyField]);\n        })\n        .on('mouseleave', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', handleClick)\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const region = d.properties[propertyField];\n          const value = mapData[region] ? mapData[region][mapOption] : 0;\n          return (\n            Number(\n              parseFloat(\n                100 * (value / (statistic[mapOption].total || 0.001))\n              ).toFixed(2)\n            ).toString() +\n            '% from ' +\n            toTitleCase(region)\n          );\n        });\n\n      g.append('path')\n        .attr('class', 'borders')\n        .attr(\n          'stroke',\n          `${\n            mapOption === 'confirmed'\n              ? '#ff073a30'\n              : mapOption === 'active'\n              ? '#007bff30'\n              : mapOption === 'recovered'\n              ? '#28a74530'\n              : mapOption === 'deceased'\n              ? '#6c757d30'\n              : ''\n          }`\n        )\n        .attr('fill', 'none')\n        .attr('stroke-width', width / 250)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n\n      const handleMouseEnter = (name) => {\n        try {\n          setSelectedRegion(name);\n          setHoveredRegion(name, mapMeta);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      function handleClick(d) {\n        d3.event.stopPropagation();\n        if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE) return;\n        // Disable pointer events till the new map is rendered\n        svg.attr('pointer-events', 'none');\n        g.selectAll('.path-region').attr('pointer-events', 'none');\n        // Switch map\n        changeMap(d.properties[propertyField]);\n      }\n\n      // Reset on tapping outside map\n      svg.attr('pointer-events', 'auto').on('click', () => {\n        if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n          setSelectedRegion(null);\n          setHoveredRegion('Total', mapMeta);\n        }\n      });\n    },\n    [\n      t,\n      mapMeta,\n      statistic,\n      mapOption,\n      isCountryLoaded,\n      mapData,\n      setSelectedRegion,\n      setHoveredRegion,\n      changeMap,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, ready]);\n\n  useEffect(() => {\n    const highlightRegionInMap = (name) => {\n      const paths = d3.selectAll('.path-region');\n      paths.classed('map-hover', (d, i, nodes) => {\n        const propertyField =\n          propertyFieldMap['state'] in d.properties\n            ? propertyFieldMap['state']\n            : propertyFieldMap['country'];\n        if (name === d.properties[propertyField]) {\n          nodes[i].parentNode.appendChild(nodes[i]);\n          return true;\n        }\n        return false;\n      });\n    };\n    highlightRegionInMap(selectedRegion);\n  }, [svgRenderCount, selectedRegion]);\n\n  return (\n    <div>\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n        <svg\n          id=\"chart\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethMap}\n        ></svg>\n        {(mapOption === 'recovered' && mapData?.Unknown?.recovered) ||\n        (mapOption === 'deceased' && mapData?.Unknown?.deceased) ? (\n          <div className=\"disclaimer\">\n            <Icon.AlertCircle />\n            {`District-wise ${mapOption} numbers are under reconciliation`}\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n      <div\n        className=\"svg-parent legend fadeInUp\"\n        style={{animationDelay: '2.5s'}}\n      >\n        <svg\n          id=\"legend\"\n          height=\"65\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethLegend}\n        ></svg>\n      </div>\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549 0 0 0 0.08627451 0 0.91372549 0 0 0.08627451 0 0 0.854901961 0 0.145098039 0 0 0 1 0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </div>\n  );\n}\n\nexport default React.memo(ChoroplethMap);\n","import ChoroplethMap from './choropleth';\n\nimport {MAP_TYPES, MAP_META} from '../constants';\nimport {localizedStateName, formatDate, formatNumber} from '../utils/commonfunctions';\n\nimport {formatDistance} from 'date-fns';\nimport React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport * as Icon from 'react-feather';\nimport {Link} from 'react-router-dom';\nimport {useLocalStorage} from 'react-use';\n\nconst getRegionFromState = (state) => {\n  if (!state) return;\n  const region = {...state};\n  if (!region.name) region.name = region.state;\n  return region;\n};\n\nconst getRegionFromDistrict = (districtData, name) => {\n  if (!districtData) return;\n  const region = {...districtData};\n  if (!region.name) region.name = name;\n  return region;\n};\n\nfunction MapExplorer({\n  mapMeta,\n  states,\n  stateDistrictWiseData,\n  regionHighlighted,\n  onMapHighlightChange,\n  isCountryLoaded,\n  anchor,\n  setAnchor,\n  mapOptionProp,\n}) {\n  const {t} = useTranslation();\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [panelRegion, setPanelRegion] = useState(getRegionFromState(states[0]));\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState(\n    getRegionFromState(states[0])\n  );\n  const [currentMap, setCurrentMap] = useState(mapMeta);\n  const [mapOption, setMapOption] = useLocalStorage('mapOption', 'active');\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const dataTypes = ['confirmed', 'active', 'recovered', 'deceased'];\n    const statistic = dataTypes.reduce((acc, dtype) => {\n      acc[dtype] = {total: 0, max: 0};\n      return acc;\n    }, {});\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        acc[state.state] = {};\n        dataTypes.forEach((dtype) => {\n          let typeCount = parseInt(\n            state[dtype !== 'deceased' ? dtype : 'deaths']\n          );\n          statistic[dtype].total += typeCount;\n          if (typeCount > statistic[dtype].max) {\n            statistic[dtype].max = typeCount;\n          }\n          acc[state.state][dtype] = typeCount;\n        });\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        acc[district] = {};\n        dataTypes.forEach((dtype) => {\n          const typeCount = parseInt(districtWiseData[district][dtype]);\n          statistic[dtype].total += typeCount;\n          if (typeCount > statistic[dtype].max) {\n            statistic[dtype].max = typeCount;\n          }\n          acc[district][dtype] = typeCount;\n        });\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        const region = getRegionFromState(\n          states.find((state) => name === state.state)\n        );\n        setCurrentHoveredRegion(region);\n        setPanelRegion(region);\n        onMapHighlightChange(region);\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            recovered: 0,\n            deaths: 0,\n          };\n        }\n        const currentHoveredRegion = getRegionFromDistrict(districtData, name);\n        const panelRegion = getRegionFromState(\n          states.find((state) => currentMap.name === state.state)\n        );\n        setPanelRegion(panelRegion);\n        currentHoveredRegion.statecode = panelRegion.statecode;\n        setCurrentHoveredRegion(currentHoveredRegion);\n        panelRegion.districtName = currentHoveredRegion.name;\n        if (onMapHighlightChange) onMapHighlightChange(panelRegion);\n      }\n    },\n    [states, stateDistrictWiseData, onMapHighlightChange]\n  );\n\n  useEffect(() => {\n    if (mapOptionProp) setMapOption(mapOptionProp);\n  }, [mapOptionProp, setMapOption]);\n\n  useEffect(() => {\n    if (regionHighlighted === undefined || regionHighlighted === null) return;\n\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = MAP_META.Myanmar;\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setHoveredRegion(region.name, newMap);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = MAP_META[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, setHoveredRegion]);\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = MAP_META[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setSelectedRegion(null);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[0].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const {districtData} = stateDistrictWiseData[name] || {\n          districtData: {},\n        };\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n        setSelectedRegion(topDistrict);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n\n\n\n  return (\n    <div\n      className={`MapExplorer fadeInUp ${\n        anchor === 'mapexplorer' ? 'stickied' : ''\n      }`}\n      style={{\n        animationDelay: '1.5s',\n        display: anchor === 'timeseries' ? 'none' : '',\n      }}\n    >\n      {window.innerWidth > 769 && (\n        <div\n          className={`anchor ${anchor === 'mapexplorer' ? 'stickied' : ''}`}\n          onClick={() => {\n            setAnchor(anchor === 'mapexplorer' ? null : 'mapexplorer');\n          }}\n        >\n          <Icon.Anchor />\n        </div>\n      )}\n      <div className=\"header\">\n        <h1>{t(\"Map\", {name: currentMap.mapType === MAP_TYPES.COUNTRY ? t(currentMap.name) : localizedStateName(currentMap.name)})}</h1>\n        <h6>\n        {window.innerWidth <= 769 ?\n        (currentMap.mapType === MAP_TYPES.COUNTRY ? t('map.tap.state') : t('map.tap.district'))\n        : (currentMap.mapType === MAP_TYPES.COUNTRY ? t('map.hover.state') : t('map.hover.district'))}\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div\n          className={`stats fadeInUp ${\n            mapOption === 'confirmed' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2s'}}\n          onClick={() => setMapOption('confirmed')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('confirmed.short') : t('confirmed.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltaconfirmed)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className={`stats is-blue fadeInUp ${\n            mapOption === 'active' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.1s'}}\n          onClick={() => setMapOption('active')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('active.short') : t('active.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.active)}</h1>\n            <h6>{` `}</h6>\n          </div>\n        </div>\n\n        <div\n          className={`stats is-green fadeInUp ${\n            mapOption === 'recovered' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.2s'}}\n          onClick={() => setMapOption('recovered')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('recovered.short') : t('recovered.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltarecovered)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className={`stats is-gray fadeInUp ${\n            mapOption === 'deceased' ? 'focused' : ''\n          }`}\n          style={{animationDelay: '2.3s'}}\n          onClick={() => setMapOption('deceased')}\n        >\n          <h5>{window.innerWidth <= 769 ? t('deceased.short') : t('deceased.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltadeaths)}`}</h6>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2 className={`${mapOption !== 'confirmed' ? mapOption : ''}`}>\n          {currentMap.mapType === MAP_TYPES.COUNTRY ? localizedStateName(currentHoveredRegion.name) : currentHoveredRegion.name }\n        </h2>\n        {currentHoveredRegion.lastupdatedtime && (\n          <div className=\"last-update\">\n            <h6>{t(\"Last updated\")}</h6>\n            <h3>\n              {isNaN(\n                Date.parse(formatDate(currentHoveredRegion.lastupdatedtime))\n              )\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(currentHoveredRegion.lastupdatedtime)),\n                    new Date()\n                  )}\n            </h3>\n          </div>\n        )}\n        \n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <Link to={`state/${currentHoveredRegion.statecode}`}>\n            <div className=\"button state-page-button\">\n              <abbr>{t(\"Visit state page\")}</abbr>\n              <Icon.ArrowRightCircle />\n            </div>\n          </Link>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentHoveredRegion.name !== currentMap.name ? (\n          <h1\n            className={`district ${mapOption !== 'confirmed' ? mapOption : ''}`}\n          >\n            {currentMapData[currentHoveredRegion.name]\n              ? currentMapData[currentHoveredRegion.name][mapOption]\n              : 0}\n            <br />\n            <span style={{fontSize: '0.75rem', fontWeight: 600}}>\n              {t(`${mapOption}.full`)}\n            </span>\n          </h1>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown &&\n        currentMapData.Unknown[mapOption] > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown[mapOption]} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('Myanmar')}\n          >\n            {t(\"Back\")}\n          </div>\n        ) : null}\n      </div>\n\n      {mapOption && (\n        <ChoroplethMap\n          statistic={statistic}\n          mapMeta={currentMap}\n          mapData={currentMapData}\n          setHoveredRegion={setHoveredRegion}\n          changeMap={switchMapToState}\n          selectedRegion={selectedRegion}\n          setSelectedRegion={setSelectedRegion}\n          isCountryLoaded={isCountryLoaded}\n          mapOption={mapOption}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(MapExplorer);\n","import * as d3 from 'd3';\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\n\nfunction Minigraph({timeseries}) {\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  useEffect(() => {\n    setTimeSeriesData(timeseries.slice(timeseries.length - 20));\n  }, [timeseries]);\n\n  const graphData = useCallback((data) => {\n    if (data.length <= 1) return 0;\n\n    const margin = {top: 10, right: 5, bottom: 20, left: 5};\n    const chartRight = 100 - margin.right;\n    const chartBottom = 100 - margin.bottom;\n\n    const svg1 = d3.select(svgRef1.current);\n    const svg2 = d3.select(svgRef2.current);\n    const svg3 = d3.select(svgRef3.current);\n    const svg4 = d3.select(svgRef4.current);\n\n    data.forEach((d) => {\n      d['dailyactive'] = d.dailyconfirmed - d.dailyrecovered - d.dailydeceased;\n    });\n\n    const xScale = d3\n      .scaleTime()\n      .domain(d3.extent(data, (d) => d.date))\n      .range([margin.left, chartRight]);\n\n    const svgArray = [svg1, svg2, svg3, svg4];\n    const dataTypes = [\n      'dailyconfirmed',\n      'dailyactive',\n      'dailyrecovered',\n      'dailydeceased',\n    ];\n    const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\n\n    const dailyMin = d3.min(data, (d) => d.dailyactive);\n    const dailyMax = d3.max(data, (d) =>\n      Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n    );\n    const domainMinMax = Math.max(-dailyMin, dailyMax);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([-domainMinMax, domainMinMax])\n      .range([chartBottom, margin.top]);\n\n    svgArray.forEach((svg, i) => {\n      const type = dataTypes[i];\n      const color = colors[i];\n\n      const path = svg\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', color + '99')\n        .attr('stroke-width', 2.5)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => xScale(d.date))\n            .y((d) => yScale(d[type]))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength = path.node().getTotalLength();\n      path\n        .attr('stroke-dasharray', totalLength + ' ' + totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', color)\n        .attr('stroke', color)\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => xScale(d.date))\n        .attr('cy', (d) => yScale(d[type]))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n    });\n  }, []);\n\n  useEffect(() => {\n    graphData(timeSeriesData);\n  }, [timeSeriesData, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\n        <svg\n          ref={svgRef1}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '1.5s'}}\n      >\n        <svg\n          ref={svgRef2}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '1.6s'}}\n      >\n        <svg\n          ref={svgRef3}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '1.7s'}}\n      >\n        <svg\n          ref={svgRef4}\n          width=\"100\"\n          height=\"75\"\n          viewBox=\"0 0 100 75\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Minigraph);\n","import {\n  localizedStateName,\n  formatDate,\n  formatDateAbsolute,\n  formatNumber,\n} from '../utils/commonfunctions';\n\nimport {formatDistance} from 'date-fns';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\n\nfunction Row(props) {\n  const {t} = useTranslation();\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn')\n      ? localStorage.getItem('district.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending')\n      ? localStorage.getItem('district.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n    setShowDistricts(!showDistricts);\n  };\n\n  const handleTooltip = (e) => {\n    e.stopPropagation();\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === 'district'\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === 'district'\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={`state ${props.total ? 'is-total' : ''} ${\n          props.index % 2 === 0 ? 'is-odd' : ''\n        } ${props.isHighlighted ? 'is-highlighted' : ''}`}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        onClick={!props.total ? handleReveal : null}\n        style={{background: props.index % 2 === 0 ? '#f8f9fa' : ''}}\n      >\n        <td style={{fontWeight: 600}}>\n          <div className=\"table__title-wrapper\">\n            {!props.total && (\n              <span\n                className={`dropdown ${\n                  props.reveal && showDistricts\n                    ? 'rotateRightDown'\n                    : 'rotateDownRight'\n                }`}\n              >\n                <Icon.ChevronDown />\n              </span>\n            )}\n            <span className=\"actual__title-wrapper\">\n              {localizedStateName(state.state)}\n              {state.statenotes && (\n                <span onClick={handleTooltip}>\n                  <span\n                    data-tip={[`${state.statenotes}`]}\n                    data-event=\"touchstart mouseover\"\n                    data-event-off=\"mouseleave\"\n                  >\n                    <Icon.Info />\n                  </span>\n                  <ReactTooltip\n                    place=\"right\"\n                    type=\"dark\"\n                    effect=\"solid\"\n                    multiline={true}\n                    scrollHide={true}\n                    globalEventOff=\"click\"\n                  />\n                </span>\n              )}\n            </span>\n          </div>\n        </td>\n        <td>\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\n            {state.deltaconfirmed > 0 && <Icon.ArrowUp />}\n            {state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.confirmed) === 0\n              ? '-'\n              : formatNumber(state.confirmed)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          {parseInt(state.active) === 0 ? '-' : formatNumber(state.active)}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          <span className=\"deltas\" style={{color: '#28a745'}}>\n            {state.deltarecovered > 0 && <Icon.ArrowUp />}\n            {state.deltarecovered > 0 ? `${state.deltarecovered}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.recovered) === 0\n              ? '-'\n              : formatNumber(state.recovered)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          <span className=\"deltas\" style={{color: '#6c757d'}}>\n            {state.deltadeaths > 0 && <Icon.ArrowUp />}\n            {state.deltadeaths > 0 ? `${state.deltadeaths}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.deaths) === 0 ? '-' : formatNumber(state.deaths)}\n          </span>\n        </td>\n      </tr>\n\n      {showDistricts && (\n        <React.Fragment>\n          <tr className={'state-last-update'}>\n            <td colSpan={2}>\n              <div className=\"last-update\">\n                <h6>{t(\"Last updated\")}&nbsp;</h6>\n                <h6\n                  title={\n                    isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                      ? ''\n                      : formatDateAbsolute(props.state.lastupdatedtime)\n                  }\n                >\n                  {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                    ? ''\n                    : `${formatDistance(\n                        new Date(formatDate(props.state.lastupdatedtime)),\n                        new Date()\n                      )} ago`}\n                </h6>\n              </div>\n            </td>\n          </tr>\n\n          <tr className={`district-heading`}>\n            <td onClick={(e) => handleSort('district')}>\n              <div className=\"heading-content\">\n                <abbr title=\"District\">{t(\"District\")}</abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'district' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </td>\n            <td onClick={(e) => handleSort('confirmed')}>\n              <div className=\"heading-content\">\n                <abbr\n                  className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                  title=\"Confirmed\"\n                >\n                  {window.innerWidth <= 769\n                    ? window.innerWidth <= 375\n                    ? t('confirmed.shorter')\n                    : t('confirmed.short')\n                  : t('confirmed.full')}\n                </abbr>\n                <div\n                  style={{\n                    display:\n                      sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n                  }}\n                >\n                  {sortData.isAscending ? (\n                    <div className=\"arrow-up\" />\n                  ) : (\n                    <div className=\"arrow-down\" />\n                  )}\n                </div>\n              </div>\n            </td>\n            <td className=\"state-page-link\" colSpan={3}>\n              <Link to={`state/${state.statecode}`}>\n                <div>\n                  <abbr>{t(\"Visit state page\")}</abbr>\n                  <Icon.ArrowRightCircle />\n                </div>\n              </Link>\n            </td>\n          </tr>\n        </React.Fragment>\n      )}\n\n      {sortedDistricts &&\n        showDistricts &&\n        Object.keys(sortedDistricts)\n          .filter((district) => district.toLowerCase() !== 'unknown')\n          .map((district, index) => {\n            if (district.toLowerCase() !== 'unknown') {\n              return (\n                <tr\n                  key={index}\n                  className={`district ${index % 2 === 0 ? 'is-odd' : ''} ${\n                    props.highlightedDistrict === district\n                      ? 'is-highlighted'\n                      : ''\n                  }`}\n                  style={{\n                    background: index % 2 === 0 ? '#f8f9fa' : '',\n                  }}\n                  onMouseEnter={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                  onMouseLeave={() => props.onHighlightDistrict?.()}\n                >\n                  <td className=\"unknown\" style={{fontWeight: 600}}>\n                    {district}\n                    <span onClick={handleTooltip}>\n                      <span\n                        data-for=\"unknown\"\n                        data-tip={[[sortedDistricts[district].notes]]}\n                        data-event=\"touchstart mouseover\"\n                        data-event-off=\"mouseleave\"\n                      >\n                        {sortedDistricts[district].notes && <Icon.Info />}\n                      </span>\n                    </span>\n                  </td>\n                  <td>\n                    <span className=\"deltas\" style={{color: '#ff073a'}}>\n                      {sortedDistricts[district].delta.confirmed > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.confirmed > 0\n                        ? `${sortedDistricts[district].delta.confirmed}`\n                        : ''}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {formatNumber(sortedDistricts[district].confirmed)}\n                    </span>\n                  </td>\n                </tr>\n              );\n            }\n            return null;\n          })}\n\n      {sortedDistricts?.Unknown && showDistricts && (\n        <React.Fragment>\n          <tr className={`district`}>\n            <td className=\"unknown\" style={{fontWeight: 600}}>\n              Unknown\n              <span onClick={handleTooltip}>\n                <span\n                  data-for=\"unknown\"\n                  data-tip={\n                    'Awaiting patient-level details from State Bulletin'\n                  }\n                  data-event=\"touchstart mouseover\"\n                  data-event-off=\"mouseleave\"\n                >\n                  <Icon.Info />\n                </span>\n              </span>\n            </td>\n            <td>\n              <span className=\"deltas\" style={{color: '#ff073a'}}>\n                {sortedDistricts['Unknown'].delta.confirmed > 0 && (\n                  <Icon.ArrowUp />\n                )}\n                {sortedDistricts['Unknown'].delta.confirmed > 0\n                  ? `${sortedDistricts['Unknown'].delta.confirmed}`\n                  : ''}\n              </span>\n              <span className=\"table__count-text\">\n                {formatNumber(sortedDistricts['Unknown'].confirmed)}\n              </span>\n            </td>\n          </tr>\n        </React.Fragment>\n      )}\n\n      {showDistricts && (\n        <React.Fragment>\n          <tr>\n            <td colSpan={2}>\n              <span className=\"unknown\">\n                <ReactTooltip\n                  id=\"unknown\"\n                  place=\"right\"\n                  type=\"dark\"\n                  effect=\"solid\"\n                  multiline={true}\n                  scrollHide={true}\n                  globalEventOff=\"click\"\n                />\n              </span>\n            </td>\n          </tr>\n        </React.Fragment>\n      )}\n\n      <tr\n        className={`spacer`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(Row);\n","import Row from './row';\n\nimport React, {useState, useEffect} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nconst isEqual = (prevProps, currProps) => {\n  return (\n    JSON.stringify(prevProps.rowHighlighted) ===\n    JSON.stringify(currProps.rowHighlighted)\n  );\n};\n\nfunction Table(props) {\n  const {t} = useTranslation();\n  const [states, setStates] = useState(props.states);\n  const [revealedStates, setRevealedStates] = useState({});\n  const [districts, setDistricts] = useState({});\n  const [count, setCount] = useState(0);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('state.sortColumn')\n      ? localStorage.getItem('state.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('state.isAscending')\n      ? localStorage.getItem('state.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9));\n    } else {\n      setStates(props.states);\n    }\n  }, [props.states, props.summary]);\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        props.states.reduce((a, state) => {\n          return {...a, [state.state]: false};\n        }, {})\n      );\n    }\n  }, [props.states]);\n\n  useEffect(() => {\n    if (states.length > 0) {\n      // slice to ignore the first item which is the total count\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\n    }\n  }, [states]);\n\n  useEffect(() => {\n    setDistricts(props.stateDistrictWiseData);\n  }, [props.stateDistrictWiseData]);\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1);\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn;\n      let value1 = StateData1[sortColumn];\n      let value2 = StateData2[sortColumn];\n\n      if (sortColumn !== 'state') {\n        value1 = parseInt(StateData1[sortColumn]);\n        value2 = parseInt(StateData2[sortColumn]);\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      }\n    });\n    states.unshift(totalRow[0]);\n  };\n\n  const handleSort = (e, props) => {\n    const currentsortColumn = e.currentTarget\n      .querySelector('abbr')\n      .getAttribute('title')\n      .toLowerCase();\n    const isAscending =\n      sortData.sortColumn === currentsortColumn\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'state';\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('state.sortColumn', currentsortColumn);\n    localStorage.setItem('state.isAscending', isAscending);\n  };\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    });\n  };\n\n  doSort();\n\n  if (states.length > 0) {\n    return (\n      <React.Fragment>\n        <h5\n          className=\"table-fineprint fadeInUp\"\n          style={{animationDelay: '1.5s'}}\n        >\n          {t(\"data compilation info\")}\n        </h5>\n        <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\n          <thead>\n            <tr>\n              <th\n                className=\"sticky state-heading\"\n                onClick={(e) => handleSort(e, props)}\n              >\n                <div className=\"heading-content\">\n                  <abbr title=\"State\">{t('states')}</abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'state' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                    title=\"Confirmed\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('confirmed.shorter')\n                        : t('confirmed.short')\n                      : t('confirmed.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'confirmed'\n                          ? 'initial'\n                          : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\n                    title=\"Active\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('active.shorter')\n                        : t('active.short')\n                      : t('active.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'active' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\n                    title=\"Recovered\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('recovered.shorter')\n                        : t('recovered.short')\n                      : t('recovered.full')}\n                  </abbr>\n                  <div\n                    className={\n                      sortData.sortColumn === 'recovered' ? 'sort-black' : ''\n                    }\n                  ></div>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'recovered'\n                          ? 'initial'\n                          : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                    title=\"Deaths\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('deceased.shorter')\n                        : t('deceased.short')\n                      : t('deceased.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'deaths' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {states.map((state, index) => {\n              if (index !== 0 && state.confirmed > 0) {\n                return (\n                  <Row\n                    key={state.state}\n                    index={index}\n                    state={state}\n                    total={false}\n                    reveal={revealedStates[state.state]}\n                    districts={\n                      state.state in districts\n                        ? districts[state.state].districtData\n                        : []\n                    }\n                    isHighlighted={\n                      !props.rowHighlighted.isDistrict &&\n                      props.rowHighlighted.statecode === state.statecode\n                    }\n                    highlightedDistrict={\n                      props.rowHighlighted.isDistrict &&\n                      props.rowHighlighted.statecode === state.statecode\n                        ? props.rowHighlighted.districtName\n                        : null\n                    }\n                    onHighlightState={props.onHighlightState}\n                    onHighlightDistrict={props.onHighlightDistrict}\n                    handleReveal={handleReveal}\n                  />\n                );\n              }\n              return null;\n            })}\n          </tbody>\n\n          <tbody>\n            {states.length > 1 && props.summary === false && (\n              <Row\n                key={0}\n                state={states[0]}\n                total={true}\n                onHighlightState={props.onHighlightState}\n              />\n            )}\n          </tbody>\n        </table>\n        <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\n          {t('States Affected', {count})}\n        </h5>\n      </React.Fragment>\n    );\n  } else {\n    return <div style={{height: '50rem'}}></div>;\n  }\n}\n\nexport default React.memo(Table, isEqual);\n","import {sliceTimeseriesFromEnd, formatNumber} from '../utils/commonfunctions';\nimport {useResizeObserver} from '../utils/hooks';\n\nimport * as d3 from 'd3';\nimport {addDays, subDays, format} from 'date-fns';\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nfunction TimeSeries(props) {\n  const {t} = useTranslation();\n\n  const [lastDaysCount, setLastDaysCount] = useState(\n    window.innerWidth > 512 ? Infinity : 30\n  );\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(0);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [chartType, setChartType] = useState(props.type);\n  const [moving, setMoving] = useState(false);\n\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const transformTimeSeries = useCallback(\n    (timeseries) => {\n      if (timeseries.length > 1) {\n        const slicedTimeseries = sliceTimeseriesFromEnd(\n          timeseries,\n          lastDaysCount\n        );\n        setIndex(slicedTimeseries.length - 1);\n        setTimeseries(slicedTimeseries);\n      }\n    },\n    [lastDaysCount]\n  );\n\n  useEffect(() => {\n    transformTimeSeries(props.timeseries);\n  }, [lastDaysCount, transformTimeSeries, props.timeseries]);\n\n  useEffect(() => {\n    setMode(props.mode);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n  }, [props.logMode]);\n\n  useEffect(() => {\n    setChartType(props.type);\n  }, [props.type]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      if (!dimensions) return;\n      const width = dimensions.width;\n      const height = dimensions.height;\n\n      // Margins\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\n      const chartRight = width - margin.right;\n      const chartBottom = height - margin.bottom;\n\n      const T = timeseries.length;\n      const yBufferTop = 1.2;\n      const yBufferBottom = 1.1;\n\n      setDatapoint(timeseries[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(svgRef1.current);\n      const svg2 = d3.select(svgRef2.current);\n      const svg3 = d3.select(svgRef3.current);\n      const svg4 = d3.select(svgRef4.current);\n\n      const dateMin = subDays(timeseries[0].date, 1);\n      const dateMax = addDays(timeseries[T - 1].date, 1);\n\n      const xScale = d3\n        .scaleTime()\n        .clamp(true)\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      // Number of x-axis ticks\n      const numTicksX = width < 480 ? 4 : 7;\n\n      const xAxis = (g) =>\n        g.attr('class', 'x-axis').call(d3.axisBottom(xScale).ticks(numTicksX));\n\n      const xAxis2 = (g, yScale) => {\n        g.attr('class', 'x-axis2')\n          .call(d3.axisBottom(xScale).tickValues([]).tickSize(0))\n          .select('.domain')\n          .style('transform', `translateY(${yScale(0)}px)`);\n\n        if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\n        else g.select('.domain').attr('opacity', 0);\n      };\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr('class', 'y-axis')\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5));\n\n      // Arrays of objects\n      const plotTotal = chartType === 1;\n      const dataTypesTotal = [\n        'totalconfirmed',\n        'totalactive',\n        'totalrecovered',\n        'totaldeceased',\n      ];\n      const dataTypesDaily = [\n        'dailyconfirmed',\n        'dailyactive',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n\n      const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d', '#201aa2'];\n\n      const svgArray = [svg1, svg2, svg3, svg4];\n\n      let yScales;\n      if (plotTotal) {\n        const uniformScaleMin = d3.min(timeseries, (d) =>\n          Math.min(d.totalactive, d.totalrecovered, d.totaldeceased)\n        );\n        const uniformScaleMax = d3.max(timeseries, (d) => d.totalconfirmed);\n        const yScaleUniformLinear = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([uniformScaleMin, Math.max(1, yBufferTop * uniformScaleMax)])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        const yScaleUniformLog = d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(1, uniformScaleMin),\n            Math.max(10, yBufferTop * uniformScaleMax),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesTotal.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(timeseries, (d) => d[type]),\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(timeseries, (d) => d[type])\n              ),\n              Math.max(10, yBufferTop * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          if (mode && type !== 'totaltested')\n            return logMode ? yScaleUniformLog : yScaleUniformLinear;\n          else return logMode ? yScaleLog : yScaleLinear;\n        });\n      } else {\n        const yScaleDailyUniform = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            yBufferBottom *\n              Math.min(\n                0,\n                d3.min(timeseries, (d) => d.dailyactive)\n              ),\n            Math.max(\n              1,\n              yBufferTop *\n                d3.max(timeseries, (d) =>\n                  Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n                )\n            ),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesDaily.map((type) => {\n          if (mode) return yScaleDailyUniform;\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              yBufferBottom *\n                Math.min(\n                  0,\n                  d3.min(timeseries, (d) => d[type])\n                ),\n              Math.max(1, yBufferTop * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          return yScaleLinear;\n        });\n      }\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll('.focus')\n          .data([timeseries[T - 1]], (d) => d.date)\n          .join((enter) =>\n            enter.append('circle').attr('cx', (d) => xScale(d.date))\n          )\n          .attr('class', 'focus')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 4);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(timeseries, date, 1);\n        if (0 <= i && i < T) {\n          if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\n          setDatapoint(timeseries[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = timeseries[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n            if (!isNaN(d[type]))\n              f.attr('cx', xScale(d.date))\n                .attr('cy', yScale(d[type]))\n                .attr('opacity', 1);\n            else f.attr('opacity', 0);\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(timeseries[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          if (!isNaN(timeseries[T - 1][type]))\n            f.attr('cx', xScale(timeseries[T - 1].date))\n              .attr('cy', yScale(timeseries[T - 1][type]))\n              .attr('opacity', 1);\n          else f.attr('opacity', 0);\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n        const typeTotal = dataTypesTotal[i];\n        const typeDaily = dataTypesDaily[i];\n        const type = plotTotal ? typeTotal : typeDaily;\n\n        const filteredTimeseries = timeseries.filter((d) => !isNaN(d[type]));\n        const color = colors[i];\n        const yScale = yScales[i];\n\n        /* X axis */\n        svg\n          .select('.x-axis')\n          .style('transform', `translateY(${chartBottom}px)`)\n          .transition(t)\n          .call(xAxis);\n        svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n        /* Y axis */\n        svg\n          .select('.y-axis')\n          .style('transform', `translateX(${chartRight}px)`)\n          .transition(t)\n          .call(yAxis, yScale);\n\n        /* Path dots */\n        svg\n          .selectAll('.dot')\n          .data(filteredTimeseries, (d) => d.date)\n          .join((enter) =>\n            enter\n              .append('circle')\n              .attr('cx', (d) => xScale(d.date))\n              .attr('cy', chartBottom)\n          )\n          .attr('class', 'dot')\n          .attr('fill', color)\n          .attr('stroke', color)\n          .attr('r', 2)\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        if (!isNaN(timeseries[T - 1][type]))\n          focus[i]\n            .transition(t)\n            .attr('cx', (d) => xScale(d.date))\n            .attr('cy', (d) => yScale(d[type]))\n            .attr('opacity', 1);\n        else focus[i].transition(t).attr('opacity', 0);\n\n        if (plotTotal) {\n          /* TOTAL TRENDS */\n          svg.selectAll('.stem').remove();\n          const path = svg\n            .selectAll('.trend')\n            .data([[...filteredTimeseries].reverse()])\n            .join('path')\n            .attr('class', 'trend')\n            .attr('fill', 'none')\n            .attr('stroke', color + '99')\n            .attr('stroke-width', 4);\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr('d')) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              'd',\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n          path\n            .transition(t)\n            .attr('opacity', plotTotal ? 1 : 0)\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => xScale(d.date))\n                .y((d) => yScale(d[typeTotal]))\n                .curve(d3.curveMonotoneX)\n            );\n          // Using d3-interpolate-path\n          // .attrTween('d', function (d) {\n          //   var previous = path.attr('d');\n          //   var current = line(d);\n          //   return interpolatePath(previous, current);\n          // });\n        } else {\n          /* DAILY TRENDS */\n          svg.selectAll('.trend').remove();\n          svg\n            .selectAll('.stem')\n            .data(timeseries, (d) => d.date)\n            .join((enter) =>\n              enter\n                .append('line')\n                .attr('x1', (d) => xScale(d.date))\n                .attr('x2', (d) => xScale(d.date))\n                .attr('y1', chartBottom)\n                .attr('y2', chartBottom)\n            )\n            .attr('class', 'stem')\n            .style('stroke', color + '99')\n            .style('stroke-width', 4)\n            .transition(t)\n            .attr('y1', yScale(0))\n            .attr('x1', (d) => xScale(d.date))\n            .attr('x2', (d) => xScale(d.date))\n            .attr('y2', (d) => yScale(d[typeDaily]));\n        }\n\n        svg\n          .on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n      });\n    },\n    [dimensions, chartType, logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const dateStr = datapoint.date ? format(datapoint.date, 'dd MMMM') : '';\n\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalactive' : 'dailyactive';\n  const chartKey3 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey4 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\n\n  // Function for calculate increased/decreased count for each type of data\n  const currentStatusCount = (chartType) => {\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length)\n      return '';\n    const currentDiff =\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"TimeSeries fadeInUp\" style={{animationDelay: '2.7s'}}>\n        <div className=\"svg-parent\" ref={wrapperRef}>\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"confirmed.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\n              <h6>{currentStatusCount(chartKey1)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-blue\">\n          <div className=\"stats is-blue\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('active.full')}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\n              <h6>{currentStatusCount(chartKey2)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('recovered.full')}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\n              <h6>{currentStatusCount(chartKey3)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t('deceased.full')}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey4])}</h2>\n              <h6>{currentStatusCount(chartKey4)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef4} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n      </div>\n\n      <div className=\"pills\">\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? 'selected' : ''}\n        >\n          {t(\"Beginning\")}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? 'selected' : ''}\n          aria-label={t(\"1 month\")}\n        >\n          {t(\"1 Month\")}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? 'selected' : ''}\n          aria-label={t(\"14 days\")}\n        >\n          {t(\"2 Weeks\")}\n        </button>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(TimeSeries);\n","import {ResizeObserver} from '@juggle/resize-observer';\nimport {useState, useEffect} from 'react';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n","import TimeSeries from './timeseries';\nimport {localizedStateName} from '../utils/commonfunctions';\n\nimport React from 'react';\nimport * as Icon from 'react-feather';\nimport {useLocalStorage} from 'react-use';\nimport {useTranslation} from 'react-i18next';\n\nfunction TimeSeriesExplorer({\n  timeseries,\n  activeStateCode,\n  onHighlightState,\n  states,\n  anchor,\n  setAnchor,\n}) {\n  const {t} = useTranslation();\n  const [graphOption, setGraphOption] = useLocalStorage(\n    'timeseriesGraphOption',\n    1\n  );\n\n  const [timeseriesMode, setTimeseriesMode] = useLocalStorage(\n    'timeseriesMode',\n    true\n  );\n  const [timeseriesLogMode, setTimeseriesLogMode] = useLocalStorage(\n    'timeseriesLogMode',\n    false\n  );\n\n  return (\n    <div\n      className={`TimeSeriesExplorer ${\n        anchor === 'timeseries' ? 'stickied' : ''\n      }`}\n      style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n    >\n      <div\n        className=\"timeseries-header fadeInUp\"\n        style={{animationDelay: '2.5s'}}\n      >\n        {window.innerWidth > 769 && anchor !== undefined && (\n          <div\n            className={`anchor ${anchor === 'timeseries' ? 'stickied' : ''}`}\n            onClick={() => {\n              setAnchor(anchor === 'timeseries' ? null : 'timeseries');\n            }}\n          >\n            <Icon.Anchor />\n          </div>\n        )}\n\n        <h1>{t(\"Spread Trends\")}</h1>\n        <div className=\"tabs\">\n          <div\n            className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n            onClick={() => {\n              setGraphOption(1);\n            }}\n          >\n            <h4>{t(\"Cumulative\")}</h4>\n          </div>\n          <div\n            className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n            onClick={() => {\n              setGraphOption(2);\n            }}\n          >\n            <h4>{t(\"Daily\")}</h4>\n          </div>\n        </div>\n\n        <div className=\"scale-modes\">\n          <label className=\"main\">{t(\"Scale Modes\")}</label>\n          <div className=\"timeseries-mode\">\n            <label htmlFor=\"timeseries-mode\">{t(\"chart.mode.uniform\")}</label>\n            <input\n              id=\"timeseries-mode\"\n              type=\"checkbox\"\n              checked={timeseriesMode}\n              className=\"switch\"\n              aria-label=\"Checked by default to scale uniformly.\"\n              onChange={(event) => {\n                setTimeseriesMode(!timeseriesMode);\n              }}\n            />\n          </div>\n          <div\n            className={`timeseries-logmode ${\n              graphOption !== 1 ? 'disabled' : ''\n            }`}\n          >\n            <label htmlFor=\"timeseries-logmode\">{t(\"chart.mode.logarithmic\")}</label>\n            <input\n              id=\"timeseries-logmode\"\n              type=\"checkbox\"\n              checked={graphOption === 1 && timeseriesLogMode}\n              className=\"switch\"\n              disabled={graphOption !== 1}\n              onChange={(event) => {\n                setTimeseriesLogMode(!timeseriesLogMode);\n              }}\n            />\n          </div>\n        </div>\n\n        {states && (\n          <div className=\"trends-state-name\">\n            <select\n              value={activeStateCode}\n              onChange={({target}) => {\n                const selectedState = target.selectedOptions[0].getAttribute(\n                  'statedata'\n                );\n                onHighlightState(JSON.parse(selectedState));\n              }}\n            >\n              {states.map((s) => {\n                return (\n                  <option\n                    value={s.statecode}\n                    key={s.statecode}\n                    statedata={JSON.stringify(s)}\n                  >\n                    {s.statecode === 'TT' ? t('All States') : localizedStateName(s.state)}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        )}\n      </div>\n\n      <TimeSeries\n        timeseries={timeseries}\n        type={graphOption}\n        mode={timeseriesMode}\n        logMode={timeseriesLogMode}\n        isTotal={activeStateCode === 'TT'}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(TimeSeriesExplorer);\n","import axios from 'axios';\nimport {formatDistance, format} from 'date-fns';\nimport React, {useState, useLayoutEffect} from 'react';\nimport {useEffectOnce} from 'react-use';\n\nconst newDate = new Date();\nlet currentDate = newDate;\n\nfunction Updates(props) {\n  const [updates, setUpdates] = useState([]);\n\n  useEffectOnce(() => {\n    axios\n      .get('https://thantthet.github.io/covid19-api/updatelog/log.json')\n      .then((response) => {\n        setUpdates(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n\n  // reset the currentDate after rendering is complete\n  // in case the currentDate was changed during addHeader\n  useLayoutEffect(() => {\n    currentDate = newDate;\n  });\n\n  return (\n    <div className=\"updates\">\n      <div className=\"updates-header\">\n        <h2>{format(currentDate, 'd MMM')}</h2>\n      </div>\n\n      {updates\n        .slice(-5)\n        .reverse()\n        .map(function (activity, index) {\n          activity.update = activity.update.replace('\\n', '<br/>');\n          const activityDate = new Date(activity.timestamp * 1000);\n          const addHeader = () => {\n            currentDate = activityDate;\n\n            return (\n              <React.Fragment>\n                {index === 0 ? (\n                  <div className=\"update\">\n                    <h4>No updates yet!</h4>\n                  </div>\n                ) : (\n                  ''\n                )}\n                <div className=\"updates-header\">\n                  <h2>{format(activityDate, 'd MMM')}</h2>\n                </div>\n              </React.Fragment>\n            );\n          };\n\n          return (\n            <React.Fragment key={index}>\n              {activityDate.getDate() !== currentDate.getDate()\n                ? addHeader()\n                : ' '}\n              <div key={index} className=\"update\">\n                <h5>\n                  {formatDistance(\n                    new Date(activity.timestamp * 1000),\n                    new Date()\n                  ) + ' ago'}\n                </h5>\n                <h4\n                  dangerouslySetInnerHTML={{\n                    __html: activity.update,\n                  }}\n                ></h4>\n              </div>\n            </React.Fragment>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default Updates;\n","import Footer from './footer';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport Table from './table';\nimport TimeSeriesExplorer from './timeseriesexplorer';\nimport Updates from './updates';\n\nimport {MAP_META} from '../constants';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  preprocessTimeseries,\n  parseStateTimeseries,\n} from '../utils/commonfunctions';\n\nimport axios from 'axios';\nimport React, {useState, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {Helmet} from 'react-helmet';\nimport {useEffectOnce, useLocalStorage, useFavicon} from 'react-use';\n\nfunction Home(props) {\n  const [states, setStates] = useState([]);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [activeStateCode, setActiveStateCode] = useState('TT');\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n  const [rowHighlighted, setRowHighlighted] = useState({\n    statecode: undefined,\n    isDistrict: false,\n    districtName: undefined,\n  });\n  const [showUpdates, setShowUpdates] = useState(false);\n  const [anchor, setAnchor] = useState(null);\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage(\n    'lastViewedLog',\n    null\n  );\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\n\n  useFavicon(newUpdate ? '/icon_update.png' : '/favicon.ico');\n\n  useEffectOnce(() => {\n    getStates();\n  });\n\n  useEffectOnce(() => {\n    axios\n      .get('https://thantthet.github.io/covid19-api/updatelog/log.json')\n      .then((response) => {\n        const lastTimestamp = response.data\n          .slice()\n          .reverse()[0]\n          .timestamp.toString();\n        if (lastTimestamp !== lastViewedLog) {\n          setNewUpdate(true);\n          setLastViewedLog(lastTimestamp);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n\n  const getStates = async () => {\n    try {\n      const [\n        {data},\n        stateDistrictWiseResponse,\n        {data: statesDailyResponse},\n      ] = await Promise.all([\n        axios.get('https://thantthet.github.io/covid19-api/data.json'),\n        axios.get('https://thantthet.github.io/covid19-api/state_district_wise.json'),\n        axios.get('https://thantthet.github.io/covid19-api/states_daily.json'),\n      ]);\n\n      setStates(data.statewise);\n\n      const ts = parseStateTimeseries(statesDailyResponse);\n      ts['TT'] = preprocessTimeseries(data.cases_time_series);\n      setTimeseries(ts);\n\n      setLastUpdated(data.statewise[0].lastupdatedtime);\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) return setRegionHighlighted(null);\n    setRegionHighlighted({state, index});\n  };\n\n  const onHighlightDistrict = (district, state, index) => {\n    if (!state && !index && !district) return setRegionHighlighted(null);\n    setRegionHighlighted({district, state, index});\n  };\n\n  const onMapHighlightChange = useCallback((region) => {\n    setActiveStateCode(region.statecode);\n    if ('districtName' in region)\n      setRowHighlighted({\n        statecode: region.statecode,\n        isDistrict: true,\n        districtName: region.districtName,\n      });\n    else\n      setRowHighlighted({\n        statecode: region.statecode,\n        isDistrict: false,\n        districtName: undefined,\n      });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"Home\">\n        <Helmet>\n          <title>Coronavirus Outbreak in Myanmar - covid19.ttkz.me</title>\n          <meta\n            name=\"title\"\n            content=\"Coronavirus Outbreak in Myanmar: Latest Map and Case Count\"\n          />\n        </Helmet>\n\n        <div className=\"home-left\">\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\n            <div className=\"actions\">\n              <h5>\n                {isNaN(Date.parse(formatDate(lastUpdated)))\n                  ? ''\n                  : formatDateAbsolute(lastUpdated)}\n              </h5>\n              {!showUpdates && (\n                <div className=\"bell-icon\">\n                  {fetched && (\n                    <Icon.Bell\n                      onClick={() => {\n                        setShowUpdates(!showUpdates);\n                        setNewUpdate(false);\n                      }}\n                    />\n                  )}\n                  {newUpdate && <div className=\"indicator\"></div>}\n                </div>\n              )}\n              {showUpdates && (\n                <Icon.BellOff\n                  onClick={() => {\n                    setShowUpdates(!showUpdates);\n                  }}\n                />\n              )}\n            </div>\n          </div>\n\n          {showUpdates && <Updates />}\n\n          {fetched && <Level data={states[0]} />}\n          {fetched && <Minigraph timeseries={timeseries['TT']} />}\n          {fetched && (\n            <Table\n              states={states}\n              summary={false}\n              stateDistrictWiseData={stateDistrictWiseData}\n              rowHighlighted={rowHighlighted}\n              onHighlightState={onHighlightState}\n              onHighlightDistrict={onHighlightDistrict}\n            />\n          )}\n        </div>\n\n        <div className=\"home-right\">\n          {fetched && (\n            <React.Fragment>\n              <MapExplorer\n                mapMeta={MAP_META.Myanmar}\n                states={states}\n                stateDistrictWiseData={stateDistrictWiseData}\n                // stateTestData={stateTestData}\n                regionHighlighted={regionHighlighted}\n                onMapHighlightChange={onMapHighlightChange}\n                isCountryLoaded={true}\n                anchor={anchor}\n                setAnchor={setAnchor}\n              />\n\n              {fetched && (\n                <TimeSeriesExplorer\n                  timeseries={timeseries[activeStateCode]}\n                  activeStateCode={activeStateCode}\n                  onHighlightState={onHighlightState}\n                  states={states}\n                  anchor={anchor}\n                  setAnchor={setAnchor}\n                />\n              )}\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n      {fetched && <Footer />}\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(Home);\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\n\nimport locales from '../i18n/locales.json';\n\nexport default function LanguageSwitcher() {\n  const {i18n, t} = useTranslation();\n\n  const onLanguageChange = (e) => {\n    i18n.changeLanguage(e.target.value);\n  };\n\n  return (\n    <div className=\"language-switcher select\">\n      <select onChange={onLanguageChange} aria-label={t('Select Language')} value={i18n.language}>\n        {Object.entries(locales).map(([key, lang]) => (\n          <option key={key} value={key}>\n            {lang}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","import anime from 'animejs';\nimport React, {useState, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {Link} from 'react-router-dom';\nimport {\n  useEffectOnce,\n  useLockBodyScroll,\n  useWindowSize,\n  useLocalStorage,\n} from 'react-use';\nimport LanguageSwitcher from './languageswitcher';\nimport {useTranslation} from 'react-i18next';\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n  style: {\n    animationDelay: `${animationDelay}s`,\n  },\n});\n\nconst activeNavIcon = (path) => ({\n  style: {\n    stroke: window.location.pathname === path ? '#4c75f2' : '',\n  },\n});\n\nfunction Navbar({pages, darkMode, setDarkMode}) {\n  const {t} = useTranslation();\n  const [expand, setExpand] = useState(false);\n  // eslint-disable-next-line\n  const [isThemeSet, setIsThemeSet] = useLocalStorage('isThemeSet', false);\n\n  useLockBodyScroll(expand);\n  const windowSize = useWindowSize();\n\n  return (\n    <div className=\"Navbar\">\n      <div\n        className=\"navbar-left\"\n        onClick={() => {\n          setDarkMode((prevMode) => !prevMode);\n          setIsThemeSet(true);\n        }}\n      >\n        {darkMode ? <Icon.Sun color={'#ffc107'} /> : <Icon.Moon />}\n      </div>\n      <div className=\"navbar-middle\">\n        <Link\n          to=\"/\"\n          onClick={() => {\n            setExpand(false);\n          }}\n        >\n          Covid19<span>Myanmar</span>\n        </Link>\n      </div>\n\n      <div\n        className=\"navbar-right\"\n        onClick={() => {\n          setExpand(!expand);\n        }}\n        onMouseEnter={() => {\n          if (window.innerWidth > 769) {\n            setExpand(true);\n            anime({\n              targets: '.navbar-right path',\n              strokeDashoffset: [anime.setDashoffset, 0],\n              easing: 'easeInOutSine',\n              duration: 250,\n              delay: function (el, i) {\n                return i * 250;\n              },\n              direction: 'alternate',\n              loop: false,\n            });\n          }\n        }}\n      >\n        {windowSize.width < 769 && <span>{expand ? t('Close') : t('Menu')}</span>}\n        {windowSize.width > 769 && (\n          <React.Fragment>\n            <span>\n              <Link to=\"/\">\n                <Icon.Home {...activeNavIcon('/')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/demographics\">\n                <Icon.Users {...activeNavIcon('/demographics')} />\n              </Link>\n            </span>\n            <span>\n              <Link to=\"/deepdive\">\n                <Icon.BarChart2 {...activeNavIcon('/deepdive')} />\n              </Link>\n            </span>\n          </React.Fragment>\n        )}\n      </div>\n\n      {expand && <Expand expand={expand} pages={pages} setExpand={setExpand} />}\n    </div>\n  );\n}\n\nfunction Expand({expand, pages, setExpand}) {\n  const expandElement = useRef(null);\n\n  useEffectOnce(() => {\n    anime({\n      targets: expandElement.current,\n      translateX: '10rem',\n      easing: 'easeOutExpo',\n      duration: 250,\n    });\n  });\n\n  return (\n    <div\n      className=\"expand\"\n      ref={expandElement}\n      onMouseLeave={() => {\n        setExpand(false);\n      }}\n    >\n      {pages.map((page, i) => {\n        if (page.showInNavbar === true) {\n          return (\n            <Link\n              to={page.pageLink}\n              key={i}\n              onClick={() => {\n                setExpand(false);\n              }}\n            >\n              <span\n                {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n              >\n                {page.displayName}\n              </span>\n            </Link>\n          );\n        }\n        return null;\n      })}\n      \n      <div className=\"expand-language fadeInUp\" style={{animationDelay: '0.6s'}}>\n        <h5>Change Language</h5>\n        <LanguageSwitcher />\n      </div>\n      <div className=\"expand-bottom fadeInUp\" style={{animationDelay: '0.7s'}}>\n        <h5>A crowdsourced initiative.</h5>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport * as Icon from 'react-feather';\n\nfunction DownloadBlock(props) {\n  return (\n    <div className=\"DownloadBlock fadeInUp\" style={{animationDelay: '0.5s'}}>\n      <a\n        className=\"button\"\n        target=\"_noblank\"\n        href=\"https://raw.githubusercontent.com/thantthet/covid19-api/gh-pages/raw_data.json\"\n      >\n        <Icon.Download /> <span>JSON</span>\n      </a>\n      <a\n        className=\"button\"\n        target=\"_noblank\"\n        href=\"https://raw.githubusercontent.com/thantthet/covid19-api/gh-pages/csv/latest/raw_data.csv\"\n      >\n        <Icon.Download /> <span>CSV</span>\n      </a>\n    </div>\n  );\n}\n\nexport default React.memo(DownloadBlock, () => {\n  return true;\n});\n","import {format} from 'date-fns';\nimport React from 'react';\n\nfunction PatientsView({\n  logs,\n  summary,\n  setModal,\n  setPatient,\n  expand,\n  applyClass,\n}) {\n  return (\n    <div className=\"Patients fadeInUp\" style={{animationDelay: '1s'}}>\n      {Object.keys(logs)\n        .slice(summary ? -1 : 0)\n        .map((day, index) => {\n          if (day !== 'Invalid Date') {\n            return (\n              <React.Fragment key={index}>\n                <h5 className=\"daylabel\">\n                  {format(new Date(day), 'dd MMM, yyyy')}{' '}\n                  {'(' + logs[day].length + ')'}\n                </h5>\n                <div key={index} className={`day ${summary ? 'summary' : ''}`}>\n                  {logs[day]\n                    .slice(summary ? -40 : 0)\n                    .map((patient, indexTwo) => {\n                      return (\n                        <div\n                          key={indexTwo}\n                          className={applyClass(patient)}\n                          onClick={() => {\n                            setModal(true);\n                            setPatient(patient);\n                          }}\n                        >\n                          <h3>{expand ? `P${patient.patientnumber}` : ''}</h3>\n                        </div>\n                      );\n                    })}\n                </div>\n              </React.Fragment>\n            );\n          } else {\n            return null;\n          }\n        })}\n    </div>\n  );\n}\n\nexport default PatientsView;\n","import PatientsView from './patientsview';\n\nimport {parse} from 'date-fns';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nfunction Patients(props) {\n  const {t} = useTranslation();\n\n  const [patients, setPatients] = useState(props.patients);\n  const [patient, setPatient] = useState(props.patients.slice(-1));\n  const [logs, setLogs] = useState({});\n  const [modal, setModal] = useState(false);\n\n  window.onclick = function (event) {\n    const modal = document.getElementById('modal');\n    if (event.target === modal) {\n      setModal(false);\n    }\n  };\n\n  useEffect(() => {\n    setPatients(props.patients);\n  }, [props.patients]);\n\n  const parseByDate = useCallback((patients) => {\n    const log = {};\n    for (let i = 0; i < patients.length; i++) {\n      const day = new Date(\n        parse(patients[i].dateannounced, 'dd/MM/yyyy', new Date())\n      );\n      if (!(day in log)) {\n        const list = [];\n        list.push(patients[i]);\n        log[day] = list;\n      } else {\n        const list = log[day];\n        list.push(patients[i]);\n        log[day] = list;\n      }\n    }\n    setLogs(log);\n  }, []);\n\n  useEffect(() => {\n    if (patients.length) {\n      parseByDate(patients);\n    }\n  }, [parseByDate, patients]);\n\n  const switchPatient = (patientIndex) => {\n    if (patientIndex === '') return;\n    try {\n      // eslint-disable-next-line\n      patients.map((patient, index) => {\n        if (+patient.patientnumber === +patientIndex) setPatient(patient);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getClassNameFn = (colorMode) => {\n    switch (colorMode) {\n      case 'genders':\n        return (patient) => {\n          return `patient-card ${\n            patient.gender === 'F'\n              ? 'is-femme'\n              : patient.gender === 'M'\n              ? 'is-male'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'transmission':\n        return (patient) => {\n          return `patient-card ${\n            patient.typeoftransmission === 'Local'\n              ? 'is-local'\n              : patient.typeoftransmission === 'Imported'\n              ? 'is-imported'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'nationality':\n        return (patient) => {\n          return `patient-card ${\n            patient.nationality === 'myanmar'\n              ? 'is-mm'\n              : patient.nationality === 'french'\n              ? 'is-fr'\n              : patient.nationality === 'swiz'\n              ? 'is-ch'\n              : patient.nationality === 'american'\n              ? 'is-us'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'age':\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n      default:\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PatientsView\n        logs={logs}\n        setModal={setModal}\n        setPatient={setPatient}\n        expand={props.expand}\n        applyClass={getClassNameFn(props.colorMode)}\n      />\n\n      {modal && (\n        <div className=\"modal\" id=\"modal\">\n          <div\n            className={`modal-content ${modal ? 'fadeInUp' : 'fadeOutDown'}`}\n          >\n            <div className=\"close-button\">\n              <Icon.XCircle\n                onClick={() => {\n                  setModal(false);\n                }}\n              />\n            </div>\n\n            <div className=\"modal-top\">\n              <h1>#{patient.patientnumber}</h1>\n            </div>\n\n            <div className=\"meta\">\n              <h5>{t(\"Date Announced\")}</h5>\n              <h3>{patient.dateannounced ? patient.dateannounced : '?'}</h3>\n\n              <h5>{t(\"Contracted from\")}</h5>\n              <h3 className=\"contracted-from\">\n                {patient.contractedfromwhichpatientsuspected\n                  ? patient.contractedfromwhichpatientsuspected.split(',').map((patientid, i) => {\n                    return <span key={i} onClick={() => switchPatient(patientid)}>{patientid},</span>\n                  })\n                  : '?'}\n              </h3>\n\n              <h5>{t(\"Detected City\")}</h5>\n              <h3>{patient.detectedcity ? patient.detectedcity : '?'}</h3>\n\n              <h5>{t(\"Detected District\")}</h5>\n              <h3>\n                {patient.detecteddistrict ? patient.detecteddistrict : '?'}\n              </h3>\n\n              <h5>{t(\"Detected State\")}</h5>\n              <h3>{patient.detectedstate ? patient.detectedstate : '?'}</h3>\n\n              <h5>{t(\"Nationality\")}</h5>\n              <h3>{patient.nationality ? patient.nationality : '?'}</h3>\n\n              <h5>{t(\"Age\")}</h5>\n              <h3>{patient.agebracket ? patient.agebracket : '?'}</h3>\n\n              <h5>{t(\"Gender\")}</h5>\n              <h3>{patient.gender ? patient.gender : '?'}</h3>\n\n              <h5>{t(\"Type of transmission\")}</h5>\n              <h3>\n                {patient.typeoftransmission ? patient.typeoftransmission : '?'}\n              </h3>\n            </div>\n\n            <div className=\"notes\">\n              <h5>{t(\"Notes\")}</h5>\n              <h3>{patient.notes}</h3>\n            </div>\n\n            <h5>{t(\"Source 1\")}</h5>\n            <div className=\"link\">\n              <a href={patient.source1} target=\"_noblank\">\n                {patient.source1}\n              </a>\n            </div>\n\n            <h5>{t(\"Source 2\")}</h5>\n            <div className=\"link\">\n              <a href={patient.source2} target=\"_noblank\">\n                {patient.source2}\n              </a>\n            </div>\n\n            <h5>{t(\"Source 3\")}</h5>\n            <div className=\"link\">\n              <a href={patient.source3} target=\"_noblank\">\n                {patient.source3}\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Patients;\n","import DownloadBlock from './downloadblock';\nimport Footer from './footer';\nimport Patients from './patients';\n\nimport axios from 'axios';\nimport {format, subDays} from 'date-fns';\nimport React, {useState, useEffect} from 'react';\nimport DatePicker from 'react-date-picker';\nimport {useTranslation} from 'react-i18next';\nimport * as Icon from 'react-feather';\nimport {Helmet} from 'react-helmet';\nimport {useLocation} from 'react-router-dom';\nimport {useEffectOnce, useLocalStorage} from 'react-use';\n\nfunction filterByObject(obj, filters) {\n  const keys = Object.keys(filters);\n  return obj.filter((p) => {\n    return keys.every((key) => {\n      if (!filters[key].length) return true;\n      return p[key] === filters[key];\n    });\n  });\n}\n\nfunction PatientDB(props) {\n  const {t} = useTranslation();\n  const [fetched, setFetched] = useState(false);\n  const [patients, setPatients] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const {pathname} = useLocation();\n  const [colorMode, setColorMode] = useState('genders');\n  const [scaleMode, setScaleMode] = useState(false);\n  const [filterDate, setFilterDate] = useState(null);\n  const [showReminder, setShowReminder] = useLocalStorage('showReminder', true);\n  const [message, setMessage] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    detectedstate: '',\n    detecteddistrict: '',\n    detectedcity: '',\n    dateannounced: '',\n    // unfilter until data are low enough to show\n  });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  useEffectOnce(() => {\n    try {\n      axios\n        .get('https://thantthet.github.io/covid19-api/raw_data.json')\n        .then((response) => {\n          setPatients(response.data.raw_data.reverse());\n          setFetched(true);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  });\n\n  useEffect(() => {\n    const datePickers = document.querySelectorAll(\n      '.react-date-picker__inputGroup input'\n    );\n    datePickers.forEach((el) => el.setAttribute('readOnly', true));\n  }, []);\n\n  const handleFilters = (label, value) => {\n    setFilters((f) => {\n      // Create new object (deep copy)\n      const newFilters = {...f};\n      newFilters[label] = value;\n      if (label === 'detectedstate') {\n        const district = document.getElementById('district');\n        const city = document.getElementById('city');\n        // Hide boxes\n        if (value === '') district.style.display = 'none';\n        else district.style.display = 'inline';\n        city.style.display = 'none';\n        // Default to empty selection\n        district.selectedIndex = 0;\n        city.selectedIndex = 0;\n        newFilters['detecteddistrict'] = '';\n        newFilters['detectedcity'] = '';\n      } else if (label === 'detecteddistrict') {\n        const city = document.getElementById('city');\n        // Hide box\n        if (value === '') city.style.display = 'none';\n        else city.style.display = 'inline';\n        // Default to empty selection\n        city.selectedIndex = 0;\n        newFilters['detectedcity'] = '';\n      }\n      return newFilters;\n    });\n  };\n\n  useEffect(() => {\n    if (filterByObject(patients, filters).length > 0) {\n      setFilteredPatients(filterByObject(patients, filters));\n      setMessage(false);\n      setLoading(false);\n    } else {\n      setMessage(true);\n    }\n  }, [patients, filters]);\n\n  function getSortedValues(obj, key) {\n    const setValues = new Set(obj.map((p) => p[key]));\n    if (setValues.size > 1) setValues.add('');\n    if (key === 'dateannounced') return Array.from(setValues);\n    return Array.from(setValues).sort();\n  }\n\n  return (\n    <div className=\"PatientsDB\">\n      <Helmet>\n        <title>Demographics - covid19.ttkz.me</title>\n        <meta name=\"title\" content={`Demographics - covid19.ttkz.me`} />\n        <meta\n          name=\"description\"\n          content=\"A demographical overview of the Myanmar population affected by the coronavirus.\"\n        />\n      </Helmet>\n\n      <div className=\"filters fadeInUp\" style={{animationDelay: '0.2s'}}>\n        <div className=\"filters-left\">\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.3s'}}\n              id=\"state\"\n              onChange={(event) => {\n                handleFilters('detectedstate', event.target.value);\n              }}\n              defaultValue={filters.detectedstate}\n            >\n              <option value=\"\" disabled selected>\n                {t(\"Select State\")}\n              </option>\n              {getSortedValues(patients, 'detectedstate').map(\n                (state, index) => {\n                  return (\n                    <option key={index} value={state}>\n                      {state === '' ? t('All') : t(`statenames.${state.toLowerCase()}`)}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('detecteddistrict', event.target.value);\n              }}\n              defaultValue={filters.detecteddistrict}\n            >\n              <option value=\"\" disabled>\n                Select District\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'detecteddistrict'\n              ).map((district, index) => {\n                return (\n                  <option key={index} value={district}>\n                    {district === '' ? t('All') : district}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n              defaultValue={filters.detectedcity}\n            >\n              <option value=\"\" disabled>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? t('All') : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n              defaultValue={filters.detectedcity}\n            >\n              <option value=\"\" disabled>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <DatePicker\n              value={filterDate}\n              minDate={new Date('22-Mar-2020')}\n              maxDate={subDays(new Date(), 1)}\n              format=\"dd/MM/y\"\n              calendarIcon={<Icon.Calendar />}\n              inputProps={\n                (onkeydown = (e) => {\n                  e.preventDefault();\n                })\n              }\n              clearIcon={<Icon.XCircle />}\n              onChange={(date) => {\n                setFilterDate(date);\n                const fomattedDate = !!date ? format(date, 'dd/MM/yyyy') : '';\n                handleFilters('dateannounced', fomattedDate);\n              }}\n            />\n          </div>\n\n          {/* <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              {Array.from(new Set(patients.map((p) => p.dateannounced))).map(\n                (date, index) => {\n                  return (\n                    <option key={index} value={date}>\n                      {date}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>*/}\n        </div>\n\n        <div className=\"legend\">\n          {colorMode === 'genders' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-female\"></div>\n              <h5 className=\"is-female\">{t(\"Female\")}</h5>\n              <div className=\"circle is-male\"></div>\n              <h5 className=\"is-male\">{t(\"Male\")}</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">{t(\"Unknown\")}</h5>\n            </div>\n          )}\n\n          {colorMode === 'transmission' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-local\"></div>\n              <h5 className=\"is-local\">{t(\"Local\")}</h5>\n              <div className=\"circle is-imported\"></div>\n              <h5 className=\"is-imported\">{t(\"Imported\")}</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">{t(\"Unknown\")}</h5>\n            </div>\n          )}\n\n          {colorMode === 'nationality' && (\n            <div className=\"legend-left nationality\">\n              <div className=\"circle is-mm\"></div>\n              <h5 className=\"is-mm\">Mm</h5>\n              <div className=\"circle is-fr\"></div>\n              <h5 className=\"is-us\">Fr</h5>\n              <div className=\"circle is-ch\"></div>\n              <h5 className=\"is-us\">Ch</h5>\n              <div className=\"circle is-us\"></div>\n              <h5 className=\"is-us\">Us</h5>\n            </div>\n          )}\n\n          <div className={`select ${colorMode}`}>\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                setColorMode(event.target.value);\n              }}\n              defaultValue={colorMode}\n            >\n              {/* <option value=\"\" disabled>\n                Color modes\n              </option> */}\n              <option value=\"genders\">{t(\"Genders\")}</option>\n              <option value=\"transmission\">{t(\"Transmission\")}</option>\n              <option value=\"nationality\">{t(\"Nationality\")}</option>\n              {/* <option value=\"age\">Age</option>*/}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"header fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <div>\n          <h1>{t('demographics.title')}</h1>\n\n          <div className=\"deep-dive\">\n            <h5>Expand</h5>\n            <input\n              type=\"checkbox\"\n              checked={scaleMode}\n              onChange={(event) => {\n                setScaleMode(!scaleMode);\n              }}\n              className=\"switch\"\n            />\n          </div>\n        </div>\n        <h6 className=\"disclaimer\">\n        {t('demographics.disclaimer')}\n        </h6>\n      </div>\n\n      <div\n        className=\"reminder fadeInUp\"\n        style={{animationDelay: '1s', display: showReminder ? '' : 'none'}}\n      >\n        <Icon.XCircle\n          onClick={() => {\n            setShowReminder(false);\n          }}\n        />\n        <p>\n        {t('demographics.reminder.line1')}\n        <br/>\n        <br/>\n        {t('demographics.reminder.line2')}\n        </p>\n      </div>\n\n      {fetched && (\n        <div className=\"patientdb-wrapper\">\n          {loading ? (\n            ' '\n          ) : message ? (\n            <div className=\"no-result\">\n              <h5>\n                There were no new cases in\n                <span>\n                  {filters.detectedcity.length > 0\n                    ? ` ${filters.detectedcity}, `\n                    : ''}\n                  {filters.detecteddistrict.length > 0\n                    ? ` ${filters.detecteddistrict}, `\n                    : ''}\n                  {' ' + filters.detectedstate}\n                </span>{' '}\n                on <span>{filters.dateannounced}.</span>\n              </h5>\n            </div>\n          ) : (\n            <Patients\n              patients={filteredPatients}\n              colorMode={colorMode}\n              expand={scaleMode}\n            />\n          )}\n        </div>\n      )}\n\n      <DownloadBlock patients={patients} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default PatientDB;\n","import axios from 'axios';\nimport * as d3 from 'd3';\nimport React, {useEffect, useRef, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport ForceGraph2D from 'react-force-graph-2d';\n\nconst isEqual = () => {\n  return true;\n};\n\nfunction Clusters({stateCode}) {\n  const [fetched, setFetched] = useState(false);\n  const [stateRawData, setStateRawData] = useState([]);\n  const [networkData, setNetworkData] = useState([]);\n\n  function prepareNetworkData(data) {\n    // Parse data\n    let contractedStr = data.reduce(\n      (acc, v) => acc + v.contractedfromwhichpatientsuspected + ', ',\n      ''\n    );\n    contractedStr = contractedStr.replace(/\\s+/g, '');\n    const sources = new Set(contractedStr.match(/[^,]+/g));\n\n    // Prepare nodes and links\n    const nodes = [];\n    const nodesSet = new Set();\n    const links = [];\n    data.forEach((d) => {\n      const contractedStr = d.contractedfromwhichpatientsuspected.replace(\n        /\\s+/g,\n        ''\n      );\n      const contracted = contractedStr.match(/[^,]+/g);\n      if (contracted) {\n        const pid = 'P' + d.patientnumber;\n        nodesSet.add(pid);\n        nodes.push({\n          id: pid,\n          group: sources.has(d.patientnumber) ? 'source' : 'target',\n          raw: d,\n        });\n        contracted.forEach((p) => {\n          links.push({\n            source: 'P' + p,\n            target: pid,\n          });\n        });\n      }\n    });\n\n    // Add missing nodes\n    links.forEach((d) => {\n      if (!nodesSet.has(d.source)) {\n        nodes.push({\n          id: d.source,\n          group: 'source',\n          raw: d.source,\n        });\n        nodesSet.add(d.source);\n      }\n    });\n    return {\n      nodes: nodes,\n      links: links,\n    };\n  }\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const rawDataResponse = await axios.get(\n          'https://thantthet.github.io/covid19-api/raw_data.json'\n        );\n        setStateRawData(\n          rawDataResponse.data.raw_data.filter((d) => d.statecode === stateCode)\n        );\n        setFetched(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    if (!fetched) {\n      getData();\n    }\n  }, [fetched, stateCode]);\n\n  useEffect(() => {\n    setNetworkData(prepareNetworkData(stateRawData));\n  }, [stateRawData]);\n\n  const NetworkGraph = () => {\n    const fgRef = useRef();\n\n    useEffect(() => {\n      const fg = fgRef.current;\n      const width = document.getElementById('clusters').offsetWidth;\n      const height = width;\n      // Deactivate existing forces\n      fg.d3Force('charge').strength(-60);\n      fg.d3Force('collision', d3.forceCollide());\n      fg.d3Force('x', d3.forceX().strength(0.3));\n      fg.d3Force('y', d3.forceY().strength(0.3));\n      fg.d3Force('box', boxForce);\n\n      // Custom force to keep everything inside box\n      function boxForce() {\n        for (let i = 0, n = networkData.nodes.length; i < n; ++i) {\n          const currNode = networkData.nodes[i];\n          currNode.x = Math.max(-width, Math.min(width, currNode.x));\n          currNode.y = Math.max(-height, Math.min(height, currNode.y));\n        }\n      }\n    }, []);\n\n    const width = document.getElementById('clusters').offsetWidth;\n    const height = width;\n\n    return (\n      <ForceGraph2D\n        ref={fgRef}\n        width={width}\n        height={height}\n        graphData={networkData}\n        nodeLabel=\"id\"\n        nodeColor={(node) => (node.group === 'source' ? '#dc3545' : 'gray')}\n        linkDirectionalParticleColor={() => 'red'}\n        linkDirectionalParticles={1}\n        linkDirectionalParticleWidth={(link) =>\n          link.source.id[0] === 'P' ? 2 : 0\n        }\n        enableZoomPanInteraction={false}\n      />\n    );\n  };\n\n  useEffect(() => {\n    ReactDOM.render(<NetworkGraph />, document.getElementById('clusters'));\n  }, [networkData]);\n\n  return <div id=\"clusters\"></div>;\n}\n\nexport default React.memo(Clusters, isEqual);\n","import * as d3 from 'd3';\nimport React, {useEffect, useRef, useState} from 'react';\n\nfunction DeltaBarGraph({timeseries, arrayKey}) {\n  const [data, setData] = useState([]);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    setData(timeseries);\n  }, [timeseries]);\n\n  useEffect(() => {\n    if (!data.length) return;\n\n    const svg = d3.select(svgRef.current);\n    const width = +svg.attr('width');\n    const height = +svg.attr('height');\n\n    const margin = {top: 50, right: 0, bottom: 50, left: 0};\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const barRadius = 5;\n\n    const formatTime = d3.timeFormat('%e %b');\n    const xScale = d3\n      .scaleBand()\n      .domain(data.map((d) => formatTime(d.date)))\n      .range([margin.left, chartRight])\n      .paddingInner(0.33);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([\n        0,\n        Math.max(\n          1,\n          d3.max(data, (d) => d[arrayKey])\n        ),\n      ])\n      .range([chartBottom, margin.top]); // - barRadius\n\n    const xAxis = d3.axisBottom(xScale).tickSize(0);\n\n    svg\n      .select('.x-axis')\n      .style('transform', `translateY(${chartBottom}px)`)\n      .call(xAxis)\n      .call((g) => g.select('.domain').remove())\n      .selectAll('text')\n      .attr('y', 0)\n      .attr('dy', '1.5em')\n      .style('text-anchor', 'middle');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .join('path')\n      .attr('class', 'bar')\n      .attr('d', (d) =>\n        roundedBar(\n          xScale(formatTime(d.date)),\n          chartBottom,\n          xScale.bandwidth(),\n          chartBottom - yScale(d[arrayKey]),\n          barRadius\n        )\n      )\n      .attr('fill', (d, i) => (i < data.length - 1 ? '#dc354590' : '#dc3545'));\n\n    svg\n      .selectAll('.delta')\n      .data(data)\n      .join('text')\n      .attr('class', 'delta')\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '11px')\n      .attr('x', (d) => xScale(formatTime(d.date)) + xScale.bandwidth() / 2)\n      .attr('y', (d) => yScale(d[arrayKey]) - 6)\n      .text((d) => d[arrayKey])\n      .append('tspan')\n      .attr('class', 'percent')\n      .attr('x', (d) => xScale(formatTime(d.date)) + xScale.bandwidth() / 2)\n      .attr('dy', '-1.2em')\n      .text((d, i) =>\n        i && data[i - 1][arrayKey]\n          ? d3.format('+.1%')(\n              (data[i][arrayKey] - data[i - 1][arrayKey]) /\n                data[i - 1][arrayKey]\n            )\n          : ''\n      );\n  }, [data, arrayKey]);\n\n  return (\n    <div className=\"DeltaBarGraph fadeInUp\" style={{animationDelay: '0.8s'}}>\n      <svg\n        ref={svgRef}\n        width=\"250\"\n        height=\"250\"\n        viewBox=\"0 0 250 250\"\n        preserveAspectRatio=\"xMidYMid meet\"\n      >\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  );\n}\n\nexport default React.memo(DeltaBarGraph, () => {\n  return true;\n});\n\nfunction roundedBar(x, y, w, h, r, f) {\n  if (!h) return;\n  // Flag for sweep:\n  if (f === undefined) f = 1;\n  // x coordinates of top of arcs\n  const x0 = x + r;\n  const x1 = x + w - r;\n  // y coordinates of bottom of arcs\n  const y0 = y - h + r;\n\n  const parts = [\n    'M',\n    x,\n    y,\n    'L',\n    x,\n    y0,\n    'A',\n    r,\n    r,\n    0,\n    0,\n    f,\n    x0,\n    y - h,\n    'L',\n    x1,\n    y - h,\n    'A',\n    r,\n    r,\n    0,\n    0,\n    f,\n    x + w,\n    y0,\n    'L',\n    x + w,\n    y,\n    'Z',\n  ];\n  return parts.join(' ');\n}\n","import {useTranslation} from 'react-i18next';\nimport Clusters from './clusters';\nimport DeltaBarGraph from './deltabargraph';\nimport Footer from './footer';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport TimeSeriesExplorer from './timeseriesexplorer';\n\nimport {MAP_META, STATE_CODES} from '../constants';\nimport {\n  getStateName,\n  formatDateAbsolute,\n  parseStateTimeseries,\n} from '../utils/commonfunctions';\n\nimport {Breadcrumb, Dropdown} from '@primer/components';\nimport anime from 'animejs';\nimport axios from 'axios';\nimport React, {useRef, useState} from 'react';\nimport * as Icon from 'react-feather';\nimport {Helmet} from 'react-helmet';\nimport {Link, useParams, Redirect} from 'react-router-dom';\nimport {useMeasure, useEffectOnce} from 'react-use';\n\nfunction State(props) {\n  const {t} = useTranslation();\n  const mapRef = useRef();\n\n  const stateCode = useParams().stateCode.toUpperCase();\n  const [allStateData, setAllStateData] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState({});\n  const [stateData, setStateData] = useState({});\n  const [districtData, setDistrictData] = useState({});\n  const [stateName] = useState(STATE_CODES[stateCode]);\n  const [mapOption, setMapOption] = useState('confirmed');\n  const [mapSwitcher, {width}] = useMeasure();\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\n\n  useEffectOnce(() => {\n    getState(stateCode);\n  });\n\n  const getState = async (code) => {\n    try {\n      const [\n        {data: dataResponse},\n        {data: stateDistrictWiseResponse},\n        {data: statesDailyResponse},\n      ] = await Promise.all([\n        axios.get('https://thantthet.github.io/covid19-api/data.json'),\n        axios.get('https://thantthet.github.io/covid19-api/state_district_wise.json'),\n        axios.get('https://thantthet.github.io/covid19-api/states_daily.json'),\n      ]);\n      const name = STATE_CODES[code];\n\n      const states = dataResponse.statewise;\n      setAllStateData(\n        states.filter(\n          (state) => state.statecode !== code && STATE_CODES[state.statecode]\n        )\n      );\n      setStateData(states.find((s) => s.statecode === code));\n      // Timeseries\n      const ts = parseStateTimeseries(statesDailyResponse)[code];\n      setTimeseries(ts);\n      // District data\n      setDistrictData({\n        [name]: stateDistrictWiseResponse[name],\n      });\n      setFetched(true);\n      anime({\n        targets: '.highlight',\n        duration: 200,\n        delay: 3000,\n        translateX:\n          mapOption === 'confirmed'\n            ? `${width * 0}px`\n            : mapOption === 'active'\n            ? `${width * 0.25}px`\n            : mapOption === 'recovered'\n            ? `${width * 0.5}px`\n            : mapOption === 'deceased'\n            ? `${width * 0.75}px`\n            : '0px',\n        easing: 'spring(1, 80, 90, 10)',\n        opacity: 1,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  function toggleShowAllDistricts() {\n    setShowAllDistricts(!showAllDistricts);\n  }\n\n  const getGridRowCount = () => {\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\n    const districtCount =\n      (districtData[stateName] &&\n        Object.keys(districtData[stateName].districtData).length) ||\n      0;\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\n    return gridRowCount;\n  };\n  const gridRowCount = getGridRowCount();\n  if (!stateName) {\n    return <Redirect to=\"/\" />;\n  } else {\n    return (\n      <React.Fragment>\n        <Helmet>\n          <title>\n            Coronavirus Outbreak in {STATE_CODES[stateCode]} - covid19.ttkz.me\n          </title>\n          <meta\n            name=\"title\"\n            content={`Coronavirus Outbreak in ${STATE_CODES[stateCode]}: Latest Map and Case Count`}\n          />\n        </Helmet>\n\n        <div className=\"State\">\n          <div className=\"state-left\">\n            <div className=\"breadcrumb\">\n              <Breadcrumb>\n                <Breadcrumb.Item href=\"/\">{t('menu.home')}</Breadcrumb.Item>\n                <Dropdown direction=\"w\">\n                  <summary>\n                    <Breadcrumb.Item href={`${stateCode}`} selected>\n                      {getStateName(stateCode)}\n                    </Breadcrumb.Item>\n                    <Dropdown.Caret className=\"caret\" />\n                  </summary>\n                  {fetched && (\n                    <Dropdown.Menu direction=\"se\">\n                      {allStateData.map((state) => (\n                        <Dropdown.Item key={state.statecode} className=\"item\">\n                          <Link to={`${state.statecode}`}>\n                            {getStateName(state.statecode)}\n                          </Link>\n                        </Dropdown.Item>\n                      ))}\n                    </Dropdown.Menu>\n                  )}\n                </Dropdown>\n              </Breadcrumb>\n            </div>\n\n            <div className=\"header\">\n              <div\n                className=\"header-left fadeInUp\"\n                style={{animationDelay: '0.3s'}}\n              >\n                <h1>{getStateName(stateCode)}</h1>\n                <h5>\n                  {t('statepage.lastUpdatedOn', {time: Object.keys(stateData).length\n                  ? formatDateAbsolute(stateData.lastupdatedtime)\n                  : ''})}\n                </h5>\n              </div>\n            </div>\n\n            {fetched && (\n              <div className=\"map-switcher\" ref={mapSwitcher}>\n                <div\n                  className={`highlight ${mapOption}`}\n                  style={{\n                    transform: `translateX(${width * 0}px)`,\n                    opacity: 0,\n                  }}\n                ></div>\n                <div\n                  className=\"clickable\"\n                  onClick={() => {\n                    setMapOption('confirmed');\n                    anime({\n                      targets: '.highlight',\n                      translateX: `${width * 0}px`,\n                      easing: 'spring(1, 80, 90, 10)',\n                    });\n                  }}\n                ></div>\n                <div\n                  className=\"clickable\"\n                  onClick={() => {\n                    setMapOption('active');\n                    anime({\n                      targets: '.highlight',\n                      translateX: `${width * 0.25}px`,\n                      easing: 'spring(1, 80, 90, 10)',\n                    });\n                  }}\n                ></div>\n                <div\n                  className=\"clickable\"\n                  onClick={() => {\n                    setMapOption('recovered');\n                    anime({\n                      targets: '.highlight',\n                      translateX: `${width * 0.5}px`,\n                      easing: 'spring(1, 80, 90, 10)',\n                    });\n                  }}\n                ></div>\n                <div\n                  className=\"clickable\"\n                  onClick={() => {\n                    setMapOption('deceased');\n                    anime({\n                      targets: '.highlight',\n                      translateX: `${width * 0.75}px`,\n                      easing: 'spring(1, 80, 90, 10)',\n                    });\n                  }}\n                ></div>\n              </div>\n            )}\n\n            {fetched && <Level data={stateData} />}\n            {fetched && <Minigraph timeseries={timeseries} />}\n            {fetched && (\n              <React.Fragment>\n                {\n                  <MapExplorer\n                    forwardRef={mapRef}\n                    mapMeta={MAP_META[stateName]}\n                    states={[stateData]}\n                    stateDistrictWiseData={districtData}\n                    isCountryLoaded={false}\n                    mapOptionProp={mapOption}\n                  />\n                }\n              </React.Fragment>\n            )}\n\n            {fetched && (\n              <div className=\"meta-secondary\">\n                <div className=\"alert\">\n                  <Icon.AlertCircle />\n                  <div className=\"alert-right\">\n                    Awaiting district details for{' '}\n                    {districtData[stateName]?.districtData['Unknown']\n                      ?.confirmed || '0'}{' '}\n                    cases\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"state-right\">\n            {fetched && (\n              <React.Fragment>\n                <div\n                  className=\"district-bar\"\n                  style={!showAllDistricts ? {display: 'flex'} : {}}\n                >\n                  <div\n                    className=\"district-bar-left fadeInUp\"\n                    style={{animationDelay: '0.6s'}}\n                  >\n                    <h2>Top districts</h2>\n                    <div\n                      className={`districts ${\n                        showAllDistricts ? 'is-grid' : ''\n                      }`}\n                      style={\n                        showAllDistricts\n                          ? {gridTemplateRows: `repeat(${gridRowCount}, 2rem)`}\n                          : {}\n                      }\n                    >\n                      {districtData[stateName]\n                        ? Object.keys(districtData[stateName].districtData)\n                            .filter((d) => d !== 'Unknown')\n                            .sort(\n                              (a, b) =>\n                                districtData[stateName].districtData[b]\n                                  .confirmed -\n                                districtData[stateName].districtData[a]\n                                  .confirmed\n                            )\n                            .slice(0, showAllDistricts ? undefined : 5)\n                            .map((district, index) => {\n                              return (\n                                <div key={index} className=\"district\">\n                                  <h2>\n                                    {\n                                      districtData[stateName].districtData[\n                                        district\n                                      ].confirmed\n                                    }\n                                  </h2>\n                                  <h5>{district}</h5>\n                                  <div className=\"delta\">\n                                    <Icon.ArrowUp />\n                                    <h6>\n                                      {\n                                        districtData[stateName].districtData[\n                                          district\n                                        ].delta.confirmed\n                                      }\n                                    </h6>\n                                  </div>\n                                </div>\n                              );\n                            })\n                        : ''}\n                    </div>\n                    {districtData[stateName] &&\n                      Object.keys(districtData[stateName].districtData).length >\n                        5 && (\n                        <button\n                          className=\"button\"\n                          onClick={toggleShowAllDistricts}\n                        >\n                          {showAllDistricts ? `View less` : `View all`}\n                        </button>\n                      )}\n                  </div>\n                  <div className=\"district-bar-right\">\n                    <div\n                      className=\"happy-sign fadeInUp\"\n                      style={{animationDelay: '0.6s'}}\n                    >\n                      {timeseries\n                        .slice(-5)\n                        .every((day) => day.dailyconfirmed === 0) && (\n                        <div className=\"alert is-green\">\n                          <Icon.Smile />\n                          <div className=\"alert-right\">\n                            No new confirmed cases in the past five days\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                    {\n                      <DeltaBarGraph\n                        timeseries={timeseries.slice(-5)}\n                        arrayKey={'dailyconfirmed'}\n                      />\n                    }\n                  </div>\n                </div>\n\n                {false && (\n                  <Link to=\"/essentials\">\n                    <div\n                      className=\"to-essentials fadeInUp\"\n                      style={{animationDelay: '0.9s'}}\n                    >\n                      <h2>Go to essentials</h2>\n                      <Icon.ArrowRightCircle />\n                    </div>\n                  </Link>\n                )}\n\n                <TimeSeriesExplorer timeseries={timeseries} />\n              </React.Fragment>\n            )}\n          </div>\n\n          <div className=\"state-left\">\n            <div className=\"Clusters fadeInUp\" style={{animationDelay: '0.8s'}}>\n              <h1>Network of Transmission</h1>\n              <Clusters stateCode={stateCode} />\n            </div>\n          </div>\n\n          <div className=\"state-right\"></div>\n        </div>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default React.memo(State);\n","import {useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const {pathname} = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import {useTranslation} from 'react-i18next';\nimport './App.scss';\n\nimport DeepDive from './components/deepdive';\nimport Home from './components/home';\nimport Navbar from './components/navbar';\nimport PatientDB from './components/patientdb';\nimport State from './components/state';\nimport ScrollToTop from './utils/ScrollToTop';\n\nimport React from 'react';\nimport {Helmet} from 'react-helmet';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport {useLocalStorage, useEffectOnce} from 'react-use';\n\nconst schemaMarkup = {\n  '@context': 'http://schema.org/',\n  '@type': 'NGO',\n  name: 'Coronavirus Outbreak in Myanmar: Latest Map and Case Count',\n  alternateName: 'COVID-19 Tracker',\n  url: 'https://covid19.ttkz.me/',\n  image: 'https://covid19.ttkz.me/thumbnail.png',\n};\n\nfunction App() {\n  const {t} = useTranslation();\n\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: t('menu.home'),\n      animationDelayForNavbar: 0.2,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/demographics',\n      view: PatientDB,\n      displayName: t('menu.demographics'),\n      animationDelayForNavbar: 0.3,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/deepdive',\n      view: DeepDive,\n      displayName: t('menu.deepdrive'),\n      animationDelayForNavbar: 0.4,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/state/:stateCode',\n      view: State,\n      displayName: t('menu.state'),\n      animationDelayForNavbar: 0.7,\n      showInNavbar: false,\n    },\n  ];\n\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\n  const [isThemeSet] = useLocalStorage('isThemeSet', false);\n\n  useEffectOnce(() => {\n    if (\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches &&\n      !isThemeSet\n    ) {\n      setDarkMode(true);\n    } else if (\n      window.matchMedia &&\n      !window.matchMedia('(prefers-color-scheme: dark)').matches &&\n      !isThemeSet\n    ) {\n      setDarkMode(false);\n    }\n  });\n\n  React.useEffect(() => {\n    if (darkMode) {\n      document.querySelector('body').classList.add('dark-mode');\n    } else {\n      document.querySelector('body').classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaMarkup)}\n        </script>\n      </Helmet>\n\n      <Router>\n        <ScrollToTop />\n        <Route\n          render={({location}) => (\n            <div className=\"Almighty-Router\">\n              <Navbar\n                pages={pages}\n                darkMode={darkMode}\n                setDarkMode={setDarkMode}\n              />\n              <Switch location={location}>\n                {pages.map((page, index) => {\n                  return (\n                    <Route\n                      exact\n                      path={page.pageLink}\n                      render={({match}) => (\n                        <page.view key={match.params.stateCode || index} />\n                      )}\n                      key={index}\n                    />\n                  );\n                })}\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n          )}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n  name: 'default',\n  lookup(options) {\n    if (localStorage.getItem('i18nextLng')) {\n      return undefined\n    }\n    // defaults\n    return 'my-MM';\n  }\n};","import i18n from 'i18next';\nimport moment from 'moment';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Detector from './detector';\n\nconst languageDetector = new LanguageDetector();\nlanguageDetector.addDetector(Detector);\n\ni18n\n  .use(Backend)\n  .use(languageDetector)\n  .init({\n    debug: false,\n    fallbackLng: 'en',\n    backend: {\n      loadPath: '/locales/{{lng}}.json',\n    },\n    detection: {\n      // order and from where user language should be detected\n      order: ['default', 'querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain']\n    },\n    interpolation: {\n      escapeValue: false,\n      format: function(value, format, lng) {\n        if (value instanceof Date) return moment(value).local(lng).format(format);\n        if (format === 'numeric') return Number(value).toLocaleString(lng);\n        return value;\n      }\n    }\n  });\n\nexport default i18n;\n","import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {I18nextProvider} from 'react-i18next';\nimport i18n from './i18n';\n\nReactDOM.render(\n  <Suspense fallback={''}>\n    <I18nextProvider i18n={i18n}>\n\t\t<App />\n    </I18nextProvider>\n  </Suspense>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}