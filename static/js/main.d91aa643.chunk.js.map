{"version":3,"sources":["components/Charts/agechart.js","constants.js","utils/commonfunctions.js","components/Charts/allstates.js","components/Charts/dailyconfirmedchart.js","components/Charts/genderchart.js","components/Charts/nationalitychart.js","components/Charts/totalconfirmedchart.js","components/deepdive.js","components/footer.js","components/level.js","components/legend.js","components/choropleth.js","components/mapexplorer.js","components/minigraph.js","components/row.js","components/table.js","components/timeseries.js","utils/hooks.js","components/timeseriesexplorer.js","components/updates.js","components/home.js","components/languageswitcher.js","components/navbar.js","components/downloadblock.js","components/patientsview.js","components/patients.js","components/patientdb.js","components/clusters.js","components/deltabargraph.js","components/state.js","App.js","serviceWorker.js","i18n/detector.js","i18n/index.js","index.js"],"names":["AgeChart","props","t","useTranslation","defaults","global","tooltips","intersect","mode","position","backgroundColor","displayColors","borderColor","borderWidth","titleFontColor","bodyFontColor","caretPadding","legend","display","hover","ages","Array","fill","unknown","data","length","forEach","patient","agebracket","age","parseInt","i","chartData","labels","datasets","label","className","title","options","events","responsive","maintainAspectRatio","layout","padding","left","right","top","bottom","scales","xAxes","stacked","gridLines","color","yAxes","count","MAP_TYPES","MAP_META","Myanmar","name","geoDataFile","mapType","graphObjectName","Ayeyarwady","Bago","Chin","Kachin","Kayah","Kayin","Magway","Mandalay","Mon","Rakhine","Sagaing","Shan","Tanintharyi","Yangon","STATE_CODES","reverseStateCodes","Object","keys","map","key","index","stateCodes","push","code","months","formatDate","unformattedDate","day","slice","month","year","time","formatDateAbsolute","Number","i18n","preprocessTimeseries","timeseries","today","Date","setHours","dataTypes","filter","d","every","dt","date","moment","toDate","validateCTS","stat","totalconfirmed","totalrecovered","totaldeceased","dailyconfirmed","dailyrecovered","dailydeceased","totalactive","dailyactive","formatNumber","value","numberFormatter","Intl","NumberFormat","isNaN","format","parseStateTimeseries","states_daily","statewiseSeries","reduce","a","c","isBefore","entries","k","v","stateCode","toLowerCase","prev","AllStatesChart","dates","chartReference","React","createRef","elements","line","statesData","Map","status","trim","has","set","previousValue","get","currentValue","sortedMap","sort","b","colors","borderCapStyle","pointBackgroundColor","toUpperCase","pointHoverRadius","dataset","point","radius","tension","type","ticks","beginAtZero","max","undefined","precision","scaleLabel","labelString","unit","tooltipFormat","stepSize","displayFormats","millisecond","second","minute","hour","week","quarter","ref","style","marginTop","height","onClick","ci","current","chartInstance","meta","getDatasetMeta","hidden","update","DailyConfirmedChart","confirmed","recovered","deceased","barDataSet","GenderChart","male","female","gender","chartOptions","callbacks","tooltipItem","datasetIndex","total","_meta","parseFloat","toFixed","NationalityChart","nationality","hasOwnProperty","country","TotalConfirmedChart","min","callback","values","DeepDive","useState","fetched","setFetched","setTimeseries","rawData","setRawData","statesTimeSeries","setStatesTimeSeries","useEffect","getStates","Promise","all","axios","response","rawDataResponse","stateDailyResponse","cases_time_series","raw_data","console","log","animationDelay","memo","href","target","rel","setData","useEffectOnce","active","deaths","deltaconfirmed","deltadeaths","deltarecovered","ramp","n","canvas","document","createElement","context","width","getContext","fillStyle","fillRect","x","tickSize","marginRight","marginBottom","marginLeft","tickFormat","tickValues","svg","d3","attr","tickAdjust","g","selectAll","interpolate","Math","domain","range","copy","rangeRound","append","toDataURL","interpolator","assign","round","invertExtent","thresholds","quantiles","thresholdFormat","join","bandwidth","call","select","remove","text","node","propertyFieldMap","state","statistic","mapData","setHoveredRegion","mapMeta","changeMap","selectedRegion","setSelectedRegion","isCountryLoaded","choroplethMap","useRef","choroplethLegend","svgRenderCount","setSvgRenderCount","ready","useCallback","geoData","path","propertyField","topology","topojson","objects","projection","widthStyle","fitWidth","heightStyle","fitSize","bBox","bounds","split","svgLegend","colorScale","maxConfirmed","widthLegend","margin","barWidth","heightLegend","isInteger","onceTouchedRegion","features","properties","on","handleMouseEnter","stopPropagation","toString","toTitleCase","err","str","charAt","prevCount","classed","nodes","parentNode","appendChild","id","preserveAspectRatio","getRegionFromState","region","states","stateDistrictWiseData","regionHighlighted","stateTestData","onMapHighlightChange","anchor","setAnchor","panelRegion","setPanelRegion","currentHoveredRegion","setCurrentHoveredRegion","currentMap","setCurrentMap","useMemo","currentMapData","acc","districtWiseData","districtData","district","find","getRegionFromDistrict","statecode","newMap","switchMapToState","topDistrict","lastupdatedtime","window","innerWidth","parse","formatDistance","fontSize","fontWeight","Unknown","to","timeSeriesData","setTimeSeriesData","svgRef1","svgRef2","svgRef3","svgRef4","graphData","chartRight","chartBottom","svg1","svg2","svg3","svg4","xScale","svgArray","dailyMin","dailyMax","domainMinMax","yScale","datum","y","curve","totalLength","getTotalLength","transition","delay","duration","enter","viewBox","setState","districts","setDistricts","sortedDistricts","setSortedDistricts","sortColumn","localStorage","getItem","isAscending","sortData","setSortData","tooltipStyles","tooltip","background","borderRadius","opacity","wrapper","cursor","textAlign","arrow","handleReveal","sortDistricts","aDistricts","sorted","district1","district2","value1","value2","comparisonValue","handleSort","column","setItem","Fragment","onMouseEnter","onHighlightState","onMouseLeave","reveal","statenotes","e","content","styles","colSpan","onHighlightDistrict","delta","setStates","revealedStates","setRevealedStates","setCount","summary","s","currentsortColumn","currentTarget","querySelector","getAttribute","totalRow","splice","StateData1","StateData2","unshift","doSort","Infinity","lastDaysCount","setLastDaysCount","datapoint","setDatapoint","setIndex","setMode","logMode","setLogMode","chartType","setChartType","moving","setMoving","wrapperRef","dimensions","setDimensions","observeTarget","resizeObserver","ResizeObserver","observer","entry","contentRect","observe","unobserve","useResizeObserver","transformTimeSeries","slicedTimeseries","days","sliceTimeseriesFromEnd","T","dateMin","setDate","getDate","dateMax","yScales","clamp","numTicksX","xAxis","xAxis2","yAxis","tickPadding","plotTotal","dataTypesTotal","dataTypesDaily","uniformScaleMin","yScaleUniformLinear","nice","yScaleUniformLog","yScaleLinear","yScaleLog","yScaleDailyUniform","focus","typeTotal","typeDaily","reverse","p","getPointAtLength","repeat","mousemove","mouseout","xm","this","invert","bisectDate","f","j","focusDate","dateStr","isSame","subtract","chartKey1","chartKey2","chartKey3","chartKey4","currentStatusCount","currentDiff","formatedDiff","aria-label","activeStateCode","useLocalStorage","graphOption","setGraphOption","timeseriesMode","setTimeseriesMode","timeseriesLogMode","setTimeseriesLogMode","htmlFor","checked","onChange","event","disabled","selectedState","selectedOptions","JSON","statedata","stringify","currentDate","Updates","updates","setUpdates","then","catch","activity","replace","activityDate","timestamp","dangerouslySetInnerHTML","__html","setStateDistrictWiseData","lastUpdated","setLastUpdated","setActiveStateCode","setRegionHighlighted","showUpdates","setShowUpdates","lastViewedLog","setLastViewedLog","newUpdate","setNewUpdate","useFavicon","lastTimestamp","stateDistrictWiseResponse","statesDailyResponse","statewise","ts","LanguageSwitcher","changeLanguage","language","locales","lang","Expand","expand","pages","setExpand","expandElement","anime","targets","translateX","easing","page","showInNavbar","pageLink","animationDelayForNavbar","location","pathname","displayName","Navbar","darkMode","setDarkMode","useLockBodyScroll","prevMode","strokeDashoffset","setDashoffset","el","direction","loop","PatientsView","logs","setModal","setPatient","applyClass","indexTwo","patientnumber","Patients","patients","setPatients","setLogs","modal","onclick","getElementById","parseByDate","dateannounced","list","colorMode","typeoftransmission","getClassNameFn","contractedfromwhichpatientsuspected","patientid","patientIndex","switchPatient","detectedcity","detecteddistrict","detectedstate","notes","source1","source2","source3","filterByObject","obj","filters","PatientDB","filteredPatients","setFilteredPatients","useLocation","setColorMode","scaleMode","setScaleMode","filterDate","setFilterDate","showReminder","setShowReminder","setFilters","scrollTo","querySelectorAll","setAttribute","handleFilters","newFilters","city","selectedIndex","getSortedValues","setValues","Set","size","add","from","defaultValue","selected","minDate","maxDate","subDays","calendarIcon","inputProps","onkeydown","preventDefault","clearIcon","fomattedDate","stateRawData","setStateRawData","networkData","setNetworkData","getData","contractedStr","sources","match","nodesSet","links","contracted","pid","group","raw","source","prepareNetworkData","NetworkGraph","fgRef","fg","offsetWidth","d3Force","strength","currNode","nodeLabel","nodeColor","linkDirectionalParticleColor","linkDirectionalParticles","linkDirectionalParticleWidth","link","enableZoomPanInteraction","ReactDOM","render","arrayKey","svgRef","formatTime","paddingInner","w","h","r","y0","roundedBar","mapRef","tsRef","useParams","stateData","setStateData","setDistrictData","stateName","getState","dataResponse","forwardRef","App","view","Home","State","classList","exact","component","Boolean","hostname","lookup","languageDetector","LanguageDetector","addDetector","Detector","use","Backend","init","debug","fallbackLng","backend","loadPath","detection","order","interpolation","escapeValue","lng","local","toLocaleString","fallback","navigator","serviceWorker","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d91aa643.chunk.js","sourcesContent":["import React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction AgeChart(props) {\n  const {t} = useTranslation();\n  \n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  const ages = Array(10).fill(0);\n  let unknown = 0;\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.agebracket) {\n      const age = parseInt(patient.agebracket);\n      for (let i = 0; i < 10; i++) {\n        if (age > i * 10 && age <= (i + 1) * 10) {\n          ages[i]++;\n        }\n      }\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    labels: [\n      '0-10',\n      '11-20',\n      '21-30',\n      '31-40',\n      '41-50',\n      '51-60',\n      '61-70',\n      '71-80',\n      '81-90',\n      '91-100',\n    ],\n    datasets: [\n      {\n        data: ages,\n        label: 'Cases',\n        backgroundColor: '#ff073a',\n      },\n    ],\n  };\n\n  const chartOptions = {\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 0,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Bar data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">*{t(\"awaiting details for\", {count: unknown})}</div>\n    </div>\n  );\n}\n\nexport default AgeChart;\n","export const MAP_TYPES = {\n  COUNTRY: 'country',\n  STATE: 'state',\n};\n\nexport const MAPS_DIR = '/maps';\n\nexport const MAP_META = {\n  Myanmar: {\n    name: 'Myanmar',\n    geoDataFile: `${MAPS_DIR}/myanmar.json`,\n    mapType: MAP_TYPES.COUNTRY,\n    graphObjectName: 'myanmar',\n  },\n  Ayeyarwady: {\n    name: 'Ayeyarwady',\n    geoDataFile: `${MAPS_DIR}/ayeyarwady.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'ayeyarwady',\n  },\n  Bago: {\n    name: 'Bago',\n    geoDataFile: `${MAPS_DIR}/bago.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'bago',\n  },\n  Chin: {\n    name: 'Chin',\n    geoDataFile: `${MAPS_DIR}/chin.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'chin',\n  },\n  Kachin: {\n    name: 'Kachin',\n    geoDataFile: `${MAPS_DIR}/kachin.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kachin',\n  },\n  Kayah: {\n    name: 'Kayah',\n    geoDataFile: `${MAPS_DIR}/kayah.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kayah',\n  },\n  Kayin: {\n    name: 'Kayin',\n    geoDataFile: `${MAPS_DIR}/kayin.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'kayin',\n  },\n  Magway: {\n    name: 'Magway',\n    geoDataFile: `${MAPS_DIR}/magway.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'magway',\n  },\n  Mandalay: {\n    name: 'Mandalay',\n    geoDataFile: `${MAPS_DIR}/mandalay.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mandalay',\n  },\n  Mon: {\n    name: 'Mon',\n    geoDataFile: `${MAPS_DIR}/mon.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'mon',\n  },\n  'Nay Pyi Taw': {\n    name: 'Nay Pyi Taw',\n    geoDataFile: `${MAPS_DIR}/naypyitaw.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'naypyitaw',\n  },\n  Rakhine: {\n    name: 'Rakhine',\n    geoDataFile: `${MAPS_DIR}/rakhine.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'rakhine',\n  },\n  Sagaing: {\n    name: 'Sagaing',\n    geoDataFile: `${MAPS_DIR}/sagaing.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'sagaing',\n  },\n  Shan: {\n    name: 'Shan',\n    geoDataFile: `${MAPS_DIR}/shan.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'shan',\n  },\n  Tanintharyi: {\n    name: 'Tanintharyi',\n    geoDataFile: `${MAPS_DIR}/tanintharyi.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'tanintharyi',\n  },\n  Yangon: {\n    name: 'Yangon',\n    geoDataFile: `${MAPS_DIR}/yangon.json`,\n    mapType: MAP_TYPES.STATE,\n    graphObjectName: 'yangon',\n  },\n};\n\nexport const STATE_CODES = {\n  \"MM-07\": 'Ayayarwady',\n  \"MM-02\": 'Bago',\n  \"MM-14\": 'Chin',\n  \"MM-11\": 'Kachin',\n  \"MM-12\": 'Kayah',\n  \"MM-13\": 'Kayin',\n  \"MM-03\": 'Magway',\n  \"MM-04\": 'Mandalay',\n  \"MM-15\": 'Mon',\n  \"MM-18\": 'Nay Pyi Taw',\n  \"MM-16\": 'Rakhine',\n  \"MM-01\": 'Sagaing',\n  \"MM-17\": 'Shan',\n  \"MM-05\": 'Tanintaryi',\n  \"MM-06\": 'Yangon',\n};\n\nconst reverseStateCodes = {};\nObject.keys(STATE_CODES).map((key, index) => {\n  reverseStateCodes[STATE_CODES[key]] = key;\n  return null;\n});\nexport const STATE_CODES_REVERSE = reverseStateCodes;\n\nconst stateCodes = [];\nObject.keys(STATE_CODES).map((key, index) => {\n  stateCodes.push({code: key, name: STATE_CODES[key]});\n  return null;\n});\nexport const STATE_CODES_ARRAY = stateCodes;\n\nexport const DISTRICTS_ARRAY = [\n  \n];\n","import {STATE_CODES} from '../constants';\nimport i18n from 'i18next';\n\nimport moment from 'moment';\n\nconst months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec',\n};\n\nexport const getStateName = (code) => {\n  return STATE_CODES[code.toUpperCase()];\n};\n\nexport const formatDate = (unformattedDate) => {\n  const day = unformattedDate.slice(0, 2);\n  const month = unformattedDate.slice(3, 5);\n  const year = unformattedDate.slice(6, 10);\n  const time = unformattedDate.slice(11);\n  return `${year}-${month}-${day}T${time}+06:30`;\n};\n\nexport const formatDateAbsolute = (unformattedDate) => {\n  const day = Number(unformattedDate.slice(0, 2));\n  const month = unformattedDate.slice(3, 5);\n  const time = unformattedDate.slice(11);\n  return i18n.t(`absoluteDate`, {\n    time: time.slice(0, 5),\n    day: day,\n    month: i18n.t(months[month]),\n  });\n};\n\nconst validateCTS = (data = []) => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const dataTypes = [\n    'dailyconfirmed',\n    'dailydeceased',\n    'dailyrecovered',\n    'totalconfirmed',\n    'totaldeceased',\n    'totalrecovered',\n  ];\n  return data\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\n    .filter((d) => {\n      return moment(d.date, \"DD/MM/yyyy\").toDate() < today;\n    });\n};\n\nexport const preprocessTimeseries = (timeseries) => {\n  return validateCTS(timeseries).map((stat) => ({\n    date: moment(stat.date, \"DD/MM/yyyy\").toDate(),\n    totalconfirmed: +stat.totalconfirmed,\n    totalrecovered: +stat.totalrecovered,\n    totaldeceased: +stat.totaldeceased,\n    dailyconfirmed: +stat.dailyconfirmed,\n    dailyrecovered: +stat.dailyrecovered,\n    dailydeceased: +stat.dailydeceased,\n    // Active = Confimed - Recovered - Deceased\n    totalactive:\n      +stat.totalconfirmed - +stat.totalrecovered - +stat.totaldeceased,\n    dailyactive:\n      +stat.dailyconfirmed - +stat.dailyrecovered - +stat.dailydeceased,\n  }));\n};\n\n/**\n * Returns the last `days` entries\n * @param {Array<Object>} timeseries\n * @param {number} days\n *\n * @return {Array<Object>}\n */\nexport function sliceTimeseriesFromEnd(timeseries, days) {\n  return timeseries.slice(-days);\n}\n\nexport const formatNumber = (value) => {\n  const numberFormatter = new Intl.NumberFormat('en-US');\n  return isNaN(value) ? '-' : numberFormatter.format(value);\n};\n\nexport const parseStateTimeseries = ({states_daily: data}) => {\n  const statewiseSeries = Object.keys(STATE_CODES).reduce((a, c) => {\n    a[c] = [];\n    return a;\n  }, {});\n\n  const today = moment();\n  for (let i = 0; i < data.length; i += 3) {\n    const date = moment(data[i].date, \"DD/MM/yyyy\");\n    // Skip data from the current day\n    if (date.isBefore(today, 'Date')) {\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\n        const stateCode = k.toLowerCase();\n        const prev = v[v.length - 1] || {};\n        // Parser\n        const dailyconfirmed = +data[i][stateCode] || 0;\n        const dailyrecovered = +data[i + 1][stateCode] || 0;\n        const dailydeceased = +data[i + 2][stateCode] || 0;\n        const totalconfirmed = +data[i][stateCode] + (prev.totalconfirmed || 0);\n        const totalrecovered =\n          +data[i + 1][stateCode] + (prev.totalrecovered || 0);\n        const totaldeceased =\n          +data[i + 2][stateCode] + (prev.totaldeceased || 0);\n        // Push\n        v.push({\n          date: date.toDate(),\n          dailyconfirmed: dailyconfirmed,\n          dailyrecovered: dailyrecovered,\n          dailydeceased: dailydeceased,\n          totalconfirmed: totalconfirmed,\n          totalrecovered: totalrecovered,\n          totaldeceased: totaldeceased,\n          // Active = Confimed - Recovered - Deceased\n          totalactive: totalconfirmed - totalrecovered - totaldeceased,\n          dailyactive: dailyconfirmed - dailyrecovered - dailydeceased,\n        });\n      });\n    }\n  }\n\n  return statewiseSeries;\n};\n","import {getStateName} from '../../utils/commonfunctions';\n\nimport moment from 'moment';\nimport React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction AllStatesChart(props) {\n  const {t} = useTranslation();\n  const dates = [];\n  const chartReference = React.createRef();\n\n  defaults.global.elements.line.fill = false;\n\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const statesData = new Map();\n\n  props.data.forEach((data, index) => {\n    if (data.status !== 'Confirmed') {\n      return;\n    }\n\n    Object.keys(data).forEach((key) => {\n      if (key === 'date') {\n        dates.push(moment(data.date.trim(), 'DD/MM/yyyy'));\n      }\n\n      if (key === 'status' || key === 'date') {\n        return;\n      }\n\n      if (!statesData.has(key)) {\n        statesData.set(key, []);\n      }\n      const previousValue =\n        statesData.get(key).length > 0\n          ? parseInt(statesData.get(key)[statesData.get(key).length - 1])\n          : 0;\n      const currentValue = data[key] !== '' ? parseInt(data[key]) : 0;\n      statesData.get(key).push(previousValue + currentValue);\n    });\n  });\n\n  const sortedMap = new Map(\n    [...statesData.entries()].sort((a, b) => {\n      return a[1][a[1].length - 1] < b[1][b[1].length - 1] ? 1 : -1;\n    })\n  );\n\n  const colors = [\n    '#ff073a',\n    '#28a745',\n    '#342ead',\n    '#7D5BA6',\n    '#DD7596',\n    '#16c8f0',\n    '#f67575',\n    '#2b580c',\n    '#9D44B5',\n    '#91132d',\n    '#6D9DC5',\n    '#2b580c',\n    '#6c757d',\n    '#f67575',\n    '#d4f8e8',\n  ];\n\n  let index = 0;\n  const datasets = [];\n  sortedMap.forEach((data, key) => {\n    if (key === 'tt') {\n      return;\n    }\n\n    if (index >= 10) {\n      return;\n    }\n\n    datasets.push({\n      borderWidth: 1.5,\n      data: statesData.get(key),\n      borderCapStyle: 'round',\n      pointBackgroundColor: colors[index],\n      label: t(`statenames.${getStateName(key).toLowerCase()}`),\n      borderColor: colors[index],\n      pointHoverRadius: 0.5,\n    });\n\n    index++;\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: datasets,\n  };\n\n  const options = {\n    responsive: true,\n    events: ['click', 'mousemove', 'mouseout', 'touchstart', 'touchmove'],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0,\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 0,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  function toggleSelection() {\n    // Get reference of chartInstance and update it\n    const ci = chartReference.current.chartInstance;\n    for (let i = 0; i < ci.data.datasets.length; i++) {\n      const meta = ci.getDatasetMeta(i);\n      meta.hidden =\n        meta.hidden === null\n          ? !chartReference.current.chartInstance.data.datasets[i].hidden\n          : null;\n    }\n    ci.update();\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} ref={chartReference} />\n      </div>\n      <div className=\"chart-note\" style={{marginTop: '0px', height: '30px'}}>\n        <button onClick={toggleSelection}>{t(\"Toggle Selection\")}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AllStatesChart;\n","import moment from 'moment';\nimport React from 'react';\nimport {Bar, defaults} from 'react-chartjs-2';\n\nfunction DailyConfirmedChart(props) {\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 0) {\n      dates.push(moment(data.date.trim(), 'DD/MM/yyyy').format('DD MMM'));\n      confirmed.push(\n        data.dailyconfirmed - data.dailyrecovered - data.dailydeceased\n      );\n      recovered.push(data.dailyrecovered);\n      deceased.push(data.dailydeceased);\n    }\n  });\n\n  const barDataSet = {\n    labels: dates,\n    datasets: [\n      {\n        data: recovered,\n        label: 'Recovered',\n        backgroundColor: '#28a745',\n      },\n      {\n        data: deceased,\n        label: 'Deceased',\n        backgroundColor: '#6c757d',\n      },\n      {\n        data: confirmed,\n        label: 'Active',\n        backgroundColor: '#ff073a',\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    tooltips: {\n      mode: 'index',\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Bar data={barDataSet} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default DailyConfirmedChart;\n","import React from 'react';\nimport {Doughnut, defaults} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction GenderChart(props) {\n  const {t} = useTranslation();\n  \n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  let male = 0;\n  let female = 0;\n  let unknown = 0;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  props.data.forEach((patient) => {\n    if (patient.gender === 'M') {\n      male++;\n    } else if (patient.gender === 'F') {\n      female++;\n    } else {\n      unknown++;\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: [male, female, unknown],\n        backgroundColor: ['blue', 'pink', 'grey'],\n        label: 'Hola',\n      },\n    ],\n    labels: [t('Male'), t('Female'), t('Awaiting Details')],\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      position: 'nearest',\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n    </div>\n  );\n}\n\nexport default GenderChart;\n","import React from 'react';\nimport {Doughnut, defaults} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction NationalityChart(props) {\n  const {t} = useTranslation();\n  \n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.8)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.data || props.data.length === 0) {\n    return <div></div>;\n  }\n\n  const nationality = {};\n  let unknown = 0;\n\n  props.data.forEach((patient) => {\n    if (!patient.nationality) {\n      unknown++;\n      return;\n    }\n    if (!nationality.hasOwnProperty(patient.nationality.toLowerCase())) {\n      nationality[patient.nationality.toLowerCase()] = 0;\n    }\n    nationality[patient.nationality.toLowerCase()]++;\n  });\n\n  // delete nationality.india;\n  const data = [];\n  const labels = [];\n\n  Object.keys(nationality).forEach((country) => {\n    if (country) {\n      labels.push(country.toUpperCase());\n      data.push(nationality[country]);\n    }\n  });\n\n  const chartData = {\n    datasets: [\n      {\n        data: data,\n        backgroundColor: [\n          '#ff7272',\n          '#ffb385',\n          '#fae7cb',\n          '#ffd31d',\n          '#00a8cc',\n          '#005082',\n          '#000839',\n          '#ffa41b',\n          '#f1e7b6',\n          '#400082',\n          '#fe346e',\n          '#5a3f11',\n          '#9c5518',\n          '#f67575',\n          '#d4f8e8',\n          '#1eb2a6',\n        ],\n      },\n    ],\n    labels: labels,\n  };\n\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    legend: {\n      display: false,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'point',\n      events: ['mousemove', 'mouseout', 'touchstart', 'touchmove', 'touchend'],\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const dataset = data.datasets[tooltipItem.datasetIndex];\n          const meta = dataset._meta[Object.keys(dataset._meta)[0]];\n          const total = meta.total;\n          const currentValue = dataset.data[tooltipItem.index];\n          const percentage = parseFloat(\n            ((currentValue / total) * 100).toFixed(1)\n          );\n          return currentValue + ' (' + percentage + '%)';\n        },\n        title: function (tooltipItem, data) {\n          return data.labels[tooltipItem[0].index];\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content doughnut\">\n        <Doughnut data={chartData} options={chartOptions} />\n      </div>\n      <div className=\"chart-note\">*{t(\"awaiting details for\", {count: unknown})}</div>\n    </div>\n  );\n}\n\nexport default NationalityChart;\n","import moment from 'moment';\nimport React from 'react';\nimport {Line, defaults} from 'react-chartjs-2';\nimport {useTranslation} from 'react-i18next';\n\nfunction TotalConfirmedChart(props) {\n  const {t} = useTranslation();\n  const dates = [];\n  const confirmed = [];\n  const recovered = [];\n  const deceased = [];\n\n  defaults.global.elements.line.fill = false;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'average';\n  defaults.global.tooltips.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n  defaults.global.tooltips.displayColors = false;\n  defaults.global.tooltips.borderColor = '#c62828';\n  defaults.global.tooltips.borderWidth = 1;\n  defaults.global.tooltips.titleFontColor = '#000';\n  defaults.global.tooltips.bodyFontColor = '#000';\n  defaults.global.tooltips.caretPadding = 4;\n  defaults.global.tooltips.intersect = false;\n  defaults.global.tooltips.mode = 'nearest';\n  defaults.global.tooltips.position = 'nearest';\n  defaults.global.legend.display = true;\n  defaults.global.legend.position = 'bottom';\n\n  defaults.global.hover.intersect = false;\n\n  if (!props.timeseries || props.timeseries.length === 0) {\n    return <div></div>;\n  }\n\n  props.timeseries.forEach((data, index) => {\n    if (index >= 0) {\n      dates.push(moment(data.date.trim(), 'DD/MM/YYYY'));\n      confirmed.push(data.totalconfirmed);\n      recovered.push(data.totalrecovered);\n      deceased.push(data.totaldeceased);\n    }\n  });\n\n  const dataset = {\n    labels: dates,\n    datasets: [\n      {\n        borderWidth: 2,\n        data: confirmed,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#ff073a',\n        label: t('confirmed.full'),\n        borderColor: '#ff073a',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: recovered,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#28a745',\n        label: t('recovered.full'),\n        borderColor: '#28a745',\n        pointHoverRadius: 2,\n      },\n      {\n        borderWidth: 2,\n        data: deceased,\n        borderCapStyle: 'round',\n        pointBackgroundColor: '#6c757d',\n        label: t('deceased.full'),\n        borderColor: '#6c757d',\n        pointHoverRadius: 2,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    events: [\n      'click',\n      'mousemove',\n      'mouseout',\n      'touchstart',\n      'touchmove',\n      'touchend',\n    ],\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: 'index',\n    },\n    elements: {\n      point: {\n        radius: 0,\n      },\n      line: {\n        tension: 0.1,\n      },\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 20,\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          ticks: {\n            beginAtZero: true,\n            max: undefined,\n            precision: 0,\n          },\n          scaleLabel: {\n            display: false,\n            labelString: 'Total Cases',\n          },\n        },\n      ],\n      xAxes: [\n        {\n          type: 'time',\n          time: {\n            unit: 'day',\n            tooltipFormat: 'MMM DD',\n            stepSize: 7,\n            displayFormats: {\n              millisecond: 'MMM DD',\n              second: 'MMM DD',\n              minute: 'MMM DD',\n              hour: 'MMM DD',\n              day: 'MMM DD',\n              week: 'MMM DD',\n              month: 'MMM DD',\n              quarter: 'MMM DD',\n              year: 'MMM DD',\n            },\n          },\n          gridLines: {\n            color: 'rgba(0, 0, 0, 0)',\n          },\n        },\n      ],\n    },\n  };\n\n  if (props.mode) {\n    options.scales.yAxes = [\n      {\n        type: 'logarithmic',\n        ticks: {\n          min: 0,\n          max: 10000,\n          callback: function (value, index, values) {\n            if (value === 10000) return '10000';\n            if (value === 2000) return '2500';\n            if (value === 500) return '500';\n            if (value === 100) return '100';\n            if (value === 20) return '25';\n            if (value === 5) return '5';\n            if (value === 0) return '0';\n            return null;\n          },\n        },\n        scaleLabel: {\n          display: false,\n          labelString: 'Total Cases',\n        },\n      },\n    ];\n  }\n\n  return (\n    <div className=\"charts-header\">\n      <div className=\"chart-title\">{props.title}</div>\n      <div className=\"chart-content\">\n        <Line data={dataset} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default TotalConfirmedChart;\n","import AgeChart from './Charts/agechart';\nimport AllStatesChart from './Charts/allstates';\nimport DailyConfirmedChart from './Charts/dailyconfirmedchart';\nimport GenderChart from './Charts/genderchart';\nimport NationalityChart from './Charts/nationalitychart';\nimport TotalConfirmedChart from './Charts/totalconfirmedchart';\n\nimport axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nfunction DeepDive(props) {\n  const {t} = useTranslation();\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState([]);\n  const [rawData, setRawData] = useState([]);\n  const [statesTimeSeries, setStatesTimeSeries] = useState([]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getStates();\n    }\n  }, [fetched]);\n\n  const getStates = async () => {\n    try {\n      const [\n        response,\n        rawDataResponse,\n        stateDailyResponse,\n      ] = await Promise.all([\n        axios.get('https://thantthet.github.io/covid19-api/data.json'),\n        axios.get('https://thantthet.github.io/covid19-api/raw_data.json'),\n        axios.get('https://thantthet.github.io/covid19-api/states_daily.json'),\n      ]);\n      setTimeseries(response.data.cases_time_series);\n      setStatesTimeSeries(stateDailyResponse.data.states_daily);\n      setRawData(rawDataResponse.data.raw_data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"cards-container\">\n      <section className=\"cards\">\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <TotalConfirmedChart\n            title={t(\"Myanmar - Total Cases\")}\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <DailyConfirmedChart\n            title={t(\"Myanmar - Daily Cases\")}\n            timeseries={timeseries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AllStatesChart\n            title={t(\"States - Total Cases\")}\n            data={statesTimeSeries}\n          />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <GenderChart title={t(\"Patient Gender\")} data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <AgeChart title={t(\"Patient Age\")} data={rawData} />\n        </div>\n\n        <div className=\"card fadeInUp\" style={{animationDelay: '0.7s'}}>\n          <NationalityChart title={t(\"Patient Nationality\")} data={rawData} />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default DeepDive;\n","import React from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nfunction Footer(props) {\n  const {t} = useTranslation();\n  return (\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n      <h5>{t(\"We stand with everyone fighting on the frontlines\")}</h5>\n      <a\n        href=\"https://github.com/thantthet/covid19myanmar-react\"\n        className=\"button github\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.GitHub />\n        <span>A fork of covid19india.org</span>\n      </a>\n\n      <a\n        className=\"button excel\"\n        href=\"http://covidmyanmar.com\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.Database />\n        <span>Live data from covidmyanmar.com</span>\n      </a>\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n","import {formatNumber} from '../utils/commonfunctions';\n\nimport React, {useState} from 'react';\nimport {useEffectOnce} from 'react-use';\nimport {useTranslation} from 'react-i18next';\n\nfunction Level(props) {\n  const {t} = useTranslation();\n  const [data, setData] = useState(props.data);\n\n  useEffectOnce(() => {\n    setData({\n      active: +props.data.active,\n      confirmed: +props.data.confirmed,\n      recovered: +props.data.recovered,\n      deaths: +props.data.deaths,\n      deltaconfirmed: +props.data.deltaconfirmed,\n      deltadeaths: +props.data.deltadeaths,\n      deltarecovered: +props.data.deltarecovered,\n    });\n  });\n\n  return (\n    <div className=\"Level\">\n      <div\n        className=\"level-item is-cherry fadeInUp\"\n        style={{animationDelay: '1s'}}\n      >\n        <h5>{(t(\"confirmed.full\"))}</h5>\n        <h4>\n          [\n          {isNaN(data.deltaconfirmed)\n            ? ''\n            : data.deltaconfirmed > 0\n            ? '+' + formatNumber(data.deltaconfirmed)\n            : '+0'}\n          ]\n        </h4>\n        <h1>{formatNumber(data.confirmed)} </h1>\n      </div>\n\n      <div\n        className=\"level-item is-blue fadeInUp\"\n        style={{animationDelay: '1.1s'}}\n      >\n        <h5 className=\"heading\">{t(\"active.full\")}</h5>\n        <h4>&nbsp;</h4>\n        <h1 className=\"title has-text-info\">{formatNumber(data.active)}</h1>\n      </div>\n\n      <div\n        className=\"level-item is-green fadeInUp\"\n        style={{animationDelay: '1.2s'}}\n      >\n        <h5 className=\"heading\">{t(\"recovered.full\")}</h5>\n        <h4>\n          [\n          {isNaN(data.deltarecovered)\n            ? ''\n            : data.deltarecovered > 0\n            ? '+' + formatNumber(data.deltarecovered)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-success\">\n          {formatNumber(data.recovered)}{' '}\n        </h1>\n      </div>\n\n      <div\n        className=\"level-item is-gray fadeInUp\"\n        style={{animationDelay: '1.3s'}}\n      >\n        <h5 className=\"heading\">{t(\"deceased.full\")}</h5>\n        <h4>\n          [\n          {isNaN(data.deltadeaths)\n            ? ''\n            : data.deltadeaths > 0\n            ? '+' + formatNumber(data.deltadeaths)\n            : '+0'}\n          ]\n        </h4>\n        <h1 className=\"title has-text-grey\">{formatNumber(data.deaths)}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Level);\n","/* Source: https://observablehq.com/@d3/color-legend */\n\nimport * as d3 from 'd3';\n\nfunction legend({\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n} = {}) {\n  const svg = d3\n    .create('svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('viewBox', [0, 0, width, height])\n    .style('overflow', 'visible')\n    .style('display', 'block');\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\n      );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\n        ).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .append('image')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL());\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = d3\n          .range(n)\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? d3.format(tickFormat)\n        : tickFormat;\n\n    x = d3\n      .scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = d3.range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    x = d3\n      .scaleBand()\n      .domain(color.domain())\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.domain())\n      .join('rect')\n      .attr('x', x)\n      .attr('y', marginTop)\n      .attr('width', Math.max(0, x.bandwidth() - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', color);\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .append('g')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .call(\n      d3\n        .axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .call(tickAdjust)\n    .call((g) => g.select('.domain').remove())\n    .call((g) =>\n      g\n        .append('text')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  const canvas = document.createElement('canvas');\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n\nexport default legend;\n","import legend from './legend';\n\nimport {MAP_TYPES} from '../constants';\n\nimport * as d3 from 'd3';\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\nimport * as topojson from 'topojson';\nimport {useTranslation} from 'react-i18next';\n\nconst propertyFieldMap = {\n  country: 'ST',\n  state: 'DT',\n};\n\nfunction ChoroplethMap({\n  statistic,\n  mapData,\n  setHoveredRegion,\n  mapMeta,\n  changeMap,\n  selectedRegion,\n  setSelectedRegion,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const choroplethMap = useRef(null);\n  const choroplethLegend = useRef(null);\n  const [svgRenderCount, setSvgRenderCount] = useState(0);\n\n  const ready = useCallback(\n    (geoData) => {\n      d3.selectAll('svg#chart > *').remove();\n\n      const propertyField = propertyFieldMap[mapMeta.mapType];\n      const svg = d3.select(choroplethMap.current);\n\n      const topology = topojson.feature(\n        geoData,\n        geoData.objects[mapMeta.graphObjectName]\n      );\n\n      const projection = d3.geoMercator();\n\n      // Set size of the map\n      let path;\n      let width;\n      let height;\n      if (!svg.attr('viewBox')) {\n        const widthStyle = parseInt(svg.style('width'));\n        if (isCountryLoaded) projection.fitWidth(widthStyle, topology);\n        else {\n          const heightStyle = parseInt(svg.style('height'));\n          projection.fitSize([widthStyle, heightStyle], topology);\n        }\n        path = d3.geoPath(projection);\n        const bBox = path.bounds(topology);\n        width = +bBox[1][0];\n        height = +bBox[1][1];\n        svg.attr('viewBox', `0 0 ${width} ${height}`);\n      }\n      const bBox = svg.attr('viewBox').split(' ');\n      width = +bBox[2];\n      height = +bBox[3];\n      projection.fitSize([width, height], topology);\n      path = d3.geoPath(projection);\n\n      /* Legend */\n      const svgLegend = d3.select(choroplethLegend.current);\n      svgLegend.selectAll('*').remove();\n      const redInterpolator = (t) => d3.interpolateReds(t * 0.85);\n      const colorScale = d3.scaleSequential(\n        [0, statistic.maxConfirmed],\n        redInterpolator\n      );\n      // Colorbar\n      const widthLegend = parseInt(svgLegend.style('width'));\n      const margin = {left: 0.02 * widthLegend, right: 0.02 * widthLegend};\n      const barWidth = widthLegend - margin.left - margin.right;\n      const heightLegend = +svgLegend.attr('height');\n      svgLegend\n        .append('g')\n        .style('transform', `translateX(${margin.left}px)`)\n        .append(() =>\n          legend({\n            color: colorScale,\n            title: t('map.legends.confirmedcases'),\n            width: barWidth,\n            height: 0.8 * heightLegend,\n            ticks: 6,\n            tickFormat: function (d, i, n) {\n              if (!Number.isInteger(d)) return;\n              if (i === n.length - 1) return d + '+';\n              return d;\n            },\n          })\n        );\n      svgLegend.attr('viewBox', `0 0 ${widthLegend} ${heightLegend}`);\n\n      /* Draw map */\n      let onceTouchedRegion = null;\n      const g = svg.append('g').attr('class', mapMeta.graphObjectName);\n      g.append('g')\n        .attr('class', 'states')\n        .selectAll('path')\n        .data(topology.features)\n        .join('path')\n        .attr('class', 'path-region')\n        .attr('fill', function (d) {\n          const n = parseInt(mapData[d.properties[propertyField]]) || 0;\n          const color = n === 0 ? '#ffffff' : colorScale(n);\n          return color;\n        })\n        .attr('d', path)\n        .attr('pointer-events', 'all')\n        .on('mouseenter', (d) => {\n          handleMouseEnter(d.properties[propertyField]);\n        })\n        .on('mouseleave', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n        })\n        .on('touchstart', (d) => {\n          if (onceTouchedRegion === d) onceTouchedRegion = null;\n          else onceTouchedRegion = d;\n        })\n        .on('click', handleClick)\n        .style('cursor', 'pointer')\n        .append('title')\n        .text(function (d) {\n          const value = mapData[d.properties[propertyField]] || 0;\n          return (\n            Number(\n              parseFloat(100 * (value / (statistic.total || 0.001))).toFixed(2)\n            ).toString() +\n            '% from ' +\n            toTitleCase(d.properties[propertyField])\n          );\n        });\n\n      g.append('path')\n        .attr('class', 'borders')\n        .attr('stroke', '#ff073a20')\n        .attr('fill', 'none')\n        .attr('stroke-width', 2)\n        .attr(\n          'd',\n          path(topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectName]))\n        );\n\n      const handleMouseEnter = (name) => {\n        try {\n          setSelectedRegion(name);\n          setHoveredRegion(name, mapMeta);\n        } catch (err) {\n          console.log('err', err);\n        }\n      };\n\n      function handleClick(d) {\n        d3.event.stopPropagation();\n        if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE) return;\n        changeMap(d.properties[propertyField]);\n      }\n\n      // Reset on tapping outside map\n      svg.on('click', () => {\n        setSelectedRegion(null);\n        if (mapMeta.mapType === MAP_TYPES.COUNTRY)\n          setHoveredRegion('Total', mapMeta);\n      });\n    },\n    [\n      mapData,\n      mapMeta,\n      statistic.total,\n      statistic.maxConfirmed,\n      changeMap,\n      setHoveredRegion,\n      setSelectedRegion,\n      isCountryLoaded,\n      t,\n    ]\n  );\n\n  const toTitleCase = (str) => {\n    str = str.toLowerCase().split(' ');\n    for (let i = 0; i < str.length; i++) {\n      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ');\n  };\n\n  useEffect(() => {\n    (async () => {\n      const data = await d3.json(mapMeta.geoDataFile);\n      if (statistic && choroplethMap.current) {\n        ready(data);\n        setSvgRenderCount((prevCount) => prevCount + 1);\n      }\n    })();\n  }, [mapMeta.geoDataFile, statistic, ready]);\n\n  const highlightRegionInMap = (name) => {\n    const paths = d3.selectAll('.path-region');\n    paths.classed('map-hover', (d, i, nodes) => {\n      const propertyField =\n        propertyFieldMap['state'] in d.properties\n          ? propertyFieldMap['state']\n          : propertyFieldMap['country'];\n      if (name === d.properties[propertyField]) {\n        nodes[i].parentNode.appendChild(nodes[i]);\n        return true;\n      }\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    highlightRegionInMap(selectedRegion);\n  }, [svgRenderCount, selectedRegion]);\n\n  return (\n    <div>\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '2.5s'}}>\n        <svg\n          id=\"chart\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethMap}\n        ></svg>\n      </div>\n      <div\n        className=\"svg-parent legend fadeInUp\"\n        style={{animationDelay: '2.5s'}}\n      >\n        <svg\n          id=\"legend\"\n          height=\"65\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={choroplethLegend}\n        ></svg>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(ChoroplethMap);\n","import ChoroplethMap from './choropleth';\n\nimport {MAP_TYPES, MAP_META} from '../constants';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  formatNumber,\n} from '../utils/commonfunctions';\n\nimport {formatDistance} from 'date-fns';\nimport React, {useState, useEffect, useMemo, useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport * as Icon from 'react-feather';\nimport {Link} from 'react-router-dom';\n\nconst getRegionFromState = (state) => {\n  if (!state) return;\n  const region = {...state};\n  if (!region.name) region.name = region.state;\n  return region;\n};\n\nconst getRegionFromDistrict = (districtData, name) => {\n  if (!districtData) return;\n  const region = {...districtData};\n  if (!region.name) region.name = name;\n  return region;\n};\n\nfunction MapExplorer({\n  mapMeta,\n  states,\n  stateDistrictWiseData,\n  stateTestData,\n  regionHighlighted,\n  onMapHighlightChange,\n  isCountryLoaded,\n  anchor,\n  setAnchor,\n}) {\n  const {t} = useTranslation();\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [panelRegion, setPanelRegion] = useState(getRegionFromState(states[0]));\n  const [currentHoveredRegion, setCurrentHoveredRegion] = useState(\n    getRegionFromState(states[0])\n  );\n  const [currentMap, setCurrentMap] = useState(mapMeta);\n\n  const [statistic, currentMapData] = useMemo(() => {\n    const statistic = {total: 0, maxConfirmed: 0};\n    let currentMapData = {};\n\n    if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n      currentMapData = states.reduce((acc, state) => {\n        if (state.state === 'Total') {\n          return acc;\n        }\n        const confirmed = parseInt(state.confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n\n        acc[state.state] = state.confirmed;\n        return acc;\n      }, {});\n    } else if (currentMap.mapType === MAP_TYPES.STATE) {\n      const districtWiseData = (\n        stateDistrictWiseData[currentMap.name] || {districtData: {}}\n      ).districtData;\n      currentMapData = Object.keys(districtWiseData).reduce((acc, district) => {\n        const confirmed = parseInt(districtWiseData[district].confirmed);\n        statistic.total += confirmed;\n        if (confirmed > statistic.maxConfirmed) {\n          statistic.maxConfirmed = confirmed;\n        }\n        acc[district] = districtWiseData[district].confirmed;\n        return acc;\n      }, {});\n    }\n    return [statistic, currentMapData];\n  }, [currentMap, states, stateDistrictWiseData]);\n\n  const setHoveredRegion = useCallback(\n    (name, currentMap) => {\n      if (currentMap.mapType === MAP_TYPES.COUNTRY) {\n        const region = getRegionFromState(\n          states.find((state) => name === state.state)\n        );\n        setCurrentHoveredRegion(region);\n        setPanelRegion(region);\n        onMapHighlightChange(region);\n      } else if (currentMap.mapType === MAP_TYPES.STATE) {\n        const state = stateDistrictWiseData[currentMap.name] || {\n          districtData: {},\n        };\n        let districtData = state.districtData[name];\n        if (!districtData) {\n          districtData = {\n            confirmed: 0,\n            active: 0,\n            deaths: 0,\n            recovered: 0,\n          };\n        }\n        const currentHoveredRegion = getRegionFromDistrict(districtData, name);\n        const panelRegion = getRegionFromState(\n          states.find((state) => currentMap.name === state.state)\n        );\n        setPanelRegion(panelRegion);\n        currentHoveredRegion.statecode = panelRegion.statecode;\n        setCurrentHoveredRegion(currentHoveredRegion);\n        if (onMapHighlightChange) onMapHighlightChange(panelRegion);\n      }\n    },\n    [states, stateDistrictWiseData, onMapHighlightChange]\n  );\n\n  useEffect(() => {\n    if (regionHighlighted === undefined || regionHighlighted === null) return;\n\n    const isState = !('district' in regionHighlighted);\n    if (isState) {\n      const newMap = MAP_META.Myanmar;\n      setCurrentMap(newMap);\n      const region = getRegionFromState(regionHighlighted.state);\n      setHoveredRegion(region.name, newMap);\n      setSelectedRegion(region.name);\n    } else {\n      const newMap = MAP_META[regionHighlighted.state.state];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setHoveredRegion(regionHighlighted.district, newMap);\n      setSelectedRegion(regionHighlighted.district);\n    }\n  }, [regionHighlighted, setHoveredRegion]);\n\n  const switchMapToState = useCallback(\n    (name) => {\n      const newMap = MAP_META[name];\n      if (!newMap) {\n        return;\n      }\n      setCurrentMap(newMap);\n      setSelectedRegion(null);\n      if (newMap.mapType === MAP_TYPES.COUNTRY) {\n        setHoveredRegion(states[0].state, newMap);\n      } else if (newMap.mapType === MAP_TYPES.STATE) {\n        const {districtData} = stateDistrictWiseData[name] || {districtData:{}};\n        const topDistrict = Object.keys(districtData)\n          .filter((name) => name !== 'Unknown')\n          .sort((a, b) => {\n            return districtData[b].confirmed - districtData[a].confirmed;\n          })[0];\n        setHoveredRegion(topDistrict, newMap);\n        setSelectedRegion(topDistrict);\n      }\n    },\n    [setHoveredRegion, stateDistrictWiseData, states]\n  );\n\n  const {name, lastupdatedtime} = currentHoveredRegion;\n\n  // useEffect(() => {\n  //   setTestObj(\n  //     stateTestData.find(\n  //       (obj) => obj.state === panelRegion.name && obj.totaltested !== ''\n  //     )\n  //   );\n  // }, [panelRegion, stateTestData, testObj]);\n\n  return (\n    <div\n      className={`MapExplorer fadeInUp ${\n        anchor === 'mapexplorer' ? 'stickied' : ''\n      }`}\n      style={{\n        animationDelay: '1.5s',\n        display: anchor === 'timeseries' ? 'none' : '',\n      }}\n    >\n      {window.innerWidth > 769 && (\n        <div\n          className={`anchor ${anchor === 'mapexplorer' ? 'stickied' : ''}`}\n          onClick={() => {\n            setAnchor(anchor === 'mapexplorer' ? null : 'mapexplorer');\n          }}\n        >\n          <Icon.Anchor />\n        </div>\n      )}\n      <div className=\"header\">\n        <h1>{t(\"Map\", {name: t(currentMap.name)})}</h1>\n        <h6>\n        {window.innerWidth <= 769 ?\n        (currentMap.mapType === MAP_TYPES.COUNTRY ? t('map.tap.state') : t('map.tap.district'))\n        : (currentMap.mapType === MAP_TYPES.COUNTRY ? t('map.hover.state') : t('map.hover.district'))}\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        <div className=\"stats fadeInUp\" style={{animationDelay: '2s'}}>\n          <h5>{window.innerWidth <= 769 ? t('confirmed.short') : t('confirmed.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.confirmed)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltaconfirmed)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-blue fadeInUp\"\n          style={{animationDelay: '2.1s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? t('active.short') : t('active.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.active)}</h1>\n            <h6>{` `}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-green fadeInUp\"\n          style={{animationDelay: '2.2s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? t('recovered.short') : t('recovered.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.recovered)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltarecovered)}`}</h6>\n          </div>\n        </div>\n\n        <div\n          className=\"stats is-gray fadeInUp\"\n          style={{animationDelay: '2.3s'}}\n        >\n          <h5>{window.innerWidth <= 769 ? t('deceased.short') : t('deceased.full')}</h5>\n          <div className=\"stats-bottom\">\n            <h1>{formatNumber(panelRegion.deaths)}</h1>\n            <h6>{`+${formatNumber(panelRegion.deltadeaths)}`}</h6>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meta fadeInUp\" style={{animationDelay: '2.4s'}}>\n        <h2>{currentMap.mapType === MAP_TYPES.COUNTRY ? t(`statenames.${name.toLowerCase()}`) : name}</h2>\n        {lastupdatedtime && (\n          <div\n            className={`last-update ${\n              currentMap.mapType === MAP_TYPES.STATE\n                ? 'district-last-update'\n                : 'state-last-update'\n            }`}\n          >\n            <h6>{t(\"Last updated\")}</h6>\n            <h3\n              title={\n                isNaN(Date.parse(formatDate(lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(lastupdatedtime)\n              }\n            >\n              {t('ago', {time: isNaN(Date.parse(formatDate(lastupdatedtime)))\n                ? ''\n                : formatDistance(\n                    new Date(formatDate(lastupdatedtime)),\n                    new Date()\n                  )})}\n            </h3>\n          </div>\n        )}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentHoveredRegion.name !== currentMap.name ? (\n          <h1 className=\"district-confirmed\">\n            {currentMapData[currentHoveredRegion.name]\n              ? currentMapData[currentHoveredRegion.name]\n              : 0}\n            <br />\n            <span style={{fontSize: '0.75rem', fontWeight: 600}}>\n              {t(\"confirmed.full\")}\n            </span>\n          </h1>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE &&\n        currentMapData.Unknown > 0 ? (\n          <h4 className=\"unknown\">\n            Districts unknown for {currentMapData.Unknown} people\n          </h4>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <div\n            className=\"button back-button\"\n            onClick={() => switchMapToState('Myanmar')}\n          >\n            {t(\"Back\")}\n          </div>\n        ) : null}\n\n        {currentMap.mapType === MAP_TYPES.STATE ? (\n          <Link to={`state/${currentHoveredRegion.statecode}`}>\n            <div className=\"button state-page-button\">\n              <abbr>{t(\"Visit state page\")}</abbr>\n              <Icon.ArrowRightCircle />\n            </div>\n          </Link>\n        ) : null}\n      </div>\n\n      <ChoroplethMap\n        statistic={statistic}\n        mapMeta={currentMap}\n        mapData={currentMapData}\n        setHoveredRegion={setHoveredRegion}\n        changeMap={switchMapToState}\n        selectedRegion={selectedRegion}\n        setSelectedRegion={setSelectedRegion}\n        isCountryLoaded={isCountryLoaded}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(MapExplorer);\n","import * as d3 from 'd3';\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\n\nfunction Minigraph({timeseries}) {\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  useEffect(() => {\n    setTimeSeriesData(timeseries.slice(timeseries.length - 20));\n  }, [timeseries]);\n\n  const graphData = useCallback((data) => {\n    if (data.length <= 1) return 0;\n\n    const margin = {top: 0, right: 10, bottom: 30, left: 0};\n    const chartRight = 100 - margin.right;\n    const chartBottom = 100 - margin.bottom;\n\n    const svg1 = d3.select(svgRef1.current);\n    const svg2 = d3.select(svgRef2.current);\n    const svg3 = d3.select(svgRef3.current);\n    const svg4 = d3.select(svgRef4.current);\n\n    data.forEach((d) => {\n      d['dailyactive'] = d.dailyconfirmed - d.dailyrecovered - d.dailydeceased;\n    });\n\n    const xScale = d3\n      .scaleTime()\n      .domain(d3.extent(data, (d) => d.date))\n      .range([margin.left, chartRight]);\n\n    const svgArray = [svg1, svg2, svg3, svg4];\n    const dataTypes = [\n      'dailyconfirmed',\n      'dailyactive',\n      'dailyrecovered',\n      'dailydeceased',\n    ];\n    const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\n\n    const dailyMin = d3.min(data, (d) => d.dailyactive);\n    const dailyMax = d3.max(data, (d) =>\n      Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n    );\n    const domainMinMax = Math.max(-dailyMin, dailyMax);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([-domainMinMax, domainMinMax])\n      .range([chartBottom, margin.top]);\n\n    svgArray.forEach((svg, i) => {\n      const type = dataTypes[i];\n      const color = colors[i];\n\n      const path = svg\n        .append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', color + '99')\n        .attr('stroke-width', 3)\n        .attr('cursor', 'pointer')\n        .attr(\n          'd',\n          d3\n            .line()\n            .x((d) => xScale(d.date))\n            .y((d) => yScale(d[type]))\n            .curve(d3.curveCardinal)\n        );\n\n      const totalLength = path.node().getTotalLength();\n      path\n        .attr('stroke-dasharray', totalLength + ' ' + totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .attr('stroke-dashoffset', 0);\n\n      svg\n        .selectAll('.dot')\n        .data(data.slice(data.length - 1))\n        .enter()\n        .append('circle')\n        .attr('fill', color)\n        .attr('stroke', color)\n        .attr('r', 2)\n        .attr('cursor', 'pointer')\n        .attr('cx', (d) => xScale(d.date))\n        .attr('cy', (d) => yScale(d[type]))\n        .on('mouseover', (d) => {\n          d3.select(d3.event.target).attr('r', '5');\n        })\n        .on('mouseout', (d) => {\n          d3.select(d3.event.target).attr('r', '2');\n        })\n        .style('opacity', 0)\n        .transition()\n        .delay(500)\n        .duration(2500)\n        .style('opacity', 1);\n    });\n  }, []);\n\n  useEffect(() => {\n    graphData(timeSeriesData);\n  }, [timeSeriesData, graphData]);\n\n  return (\n    <div className=\"Minigraph\">\n      <div className=\"svg-parent fadeInUp\" style={{animationDelay: '1.4s'}}>\n        <svg\n          ref={svgRef1}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-blue fadeInUp\"\n        style={{animationDelay: '1.5s'}}\n      >\n        <svg\n          ref={svgRef2}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-green fadeInUp\"\n        style={{animationDelay: '1.6s'}}\n      >\n        <svg\n          ref={svgRef3}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n\n      <div\n        className=\"svg-parent is-gray fadeInUp\"\n        style={{animationDelay: '1.7s'}}\n      >\n        <svg\n          ref={svgRef4}\n          width=\"100\"\n          height=\"100\"\n          viewBox=\"0 0 100 100\"\n          preserveAspectRatio=\"xMidYMid meet\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Minigraph);\n","import {\n  formatDate,\n  formatDateAbsolute,\n  formatNumber,\n} from '../utils/commonfunctions';\n\nimport {formatDistance} from 'date-fns';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {Tooltip} from 'react-lightweight-tooltip';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\n\nfunction Row(props) {\n  const {t} = useTranslation();\n  const [state, setState] = useState(props.state);\n  const [districts, setDistricts] = useState(props.districts);\n  const [sortedDistricts, setSortedDistricts] = useState(props.districts);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('district.sortColumn')\n      ? localStorage.getItem('district.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('district.isAscending')\n      ? localStorage.getItem('district.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    setState(props.state);\n  }, [props.state]);\n\n  useEffect(() => {\n    setDistricts(props.districts);\n    setSortedDistricts(props.districts);\n  }, [props.districts]);\n\n  const tooltipStyles = {\n    tooltip: {\n      background: '#000',\n      borderRadius: '10px',\n      fontSize: '.8em',\n      left: '250%',\n      opacity: 0.65,\n    },\n    wrapper: {\n      cursor: 'cursor',\n      display: 'inline-block',\n      position: 'relative',\n      textAlign: 'center',\n    },\n    arrow: {\n      left: '37%',\n    },\n  };\n\n  const handleReveal = () => {\n    props.handleReveal(props.state.state);\n  };\n\n  const handleTooltip = (e) => {\n    e.stopPropagation();\n  };\n\n  const sortDistricts = useCallback(\n    (aDistricts) => {\n      const sorted = {};\n      if (aDistricts) {\n        Object.keys(aDistricts)\n          .sort((district1, district2) => {\n            const sortColumn = sortData.sortColumn;\n            const value1 =\n              sortColumn === 'district'\n                ? district1\n                : parseInt(aDistricts[district1].confirmed);\n            const value2 =\n              sortColumn === 'district'\n                ? district2\n                : parseInt(aDistricts[district2].confirmed);\n            const comparisonValue =\n              value1 > value2\n                ? 1\n                : value1 === value2 && district1 > district2\n                ? 1\n                : -1;\n            return sortData.isAscending\n              ? comparisonValue\n              : comparisonValue * -1;\n          })\n          .forEach((key) => {\n            sorted[key] = aDistricts[key];\n          });\n        setSortedDistricts(sorted);\n      }\n    },\n    [sortData.isAscending, sortData.sortColumn]\n  );\n\n  const handleSort = (column) => {\n    const isAscending =\n      sortData.sortColumn === column\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'district';\n    setSortData({\n      sortColumn: column,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('district.sortColumn', column);\n    localStorage.setItem('district.isAscending', isAscending);\n  };\n\n  useEffect(() => {\n    sortDistricts(districts);\n  }, [districts, sortData, sortDistricts]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={`state ${props.total ? 'is-total' : ''} ${\n          props.index % 2 === 0 ? 'is-odd' : ''\n        }`}\n        onMouseEnter={() => props.onHighlightState?.(state, props.index)}\n        onMouseLeave={() => props.onHighlightState?.()}\n        onClick={!props.total ? handleReveal : null}\n        style={{background: props.index % 2 === 0 ? '#f8f9fa' : ''}}\n      >\n        <td style={{fontWeight: 600}}>\n          <div className=\"table__title-wrapper\">\n            <span\n              className={`dropdown ${\n                props.reveal ? 'rotateRightDown' : 'rotateDownRight'\n              }`}\n              style={{display: !props.total ? '' : 'none'}}\n              onClick={() => {\n                handleReveal();\n              }}\n            >\n              <Icon.ChevronDown />\n            </span>\n            <span className=\"actual__title-wrapper\">\n              {t(`statenames.${state.state.toLowerCase()}`)}\n              {state.statenotes && (\n                <span onClick={handleTooltip}>\n                  <Tooltip\n                    content={[`${state.statenotes}`]}\n                    styles={tooltipStyles}\n                  >\n                    <Icon.Info />\n                  </Tooltip>\n                </span>\n              )}\n            </span>\n          </div>\n        </td>\n        <td>\n          <span className=\"deltas\" style={{color: '#ff073a'}}>\n            {state.deltaconfirmed > 0 && <Icon.ArrowUp />}\n            {state.deltaconfirmed > 0 ? `${state.deltaconfirmed}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.confirmed) === 0\n              ? '-'\n              : formatNumber(state.confirmed)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.active) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          {parseInt(state.active) === 0 ? '-' : formatNumber(state.active)}\n        </td>\n        <td\n          style={{\n            color: parseInt(state.recovered) === 0 ? '#B5B5B5' : 'inherit',\n          }}\n        >\n          <span className=\"deltas\" style={{color: '#28a745'}}>\n            {state.deltarecovered > 0 && <Icon.ArrowUp />}\n            {state.deltarecovered > 0 ? `${state.deltarecovered}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.recovered) === 0\n              ? '-'\n              : formatNumber(state.recovered)}\n          </span>\n        </td>\n        <td\n          style={{color: parseInt(state.deaths) === 0 ? '#B5B5B5' : 'inherit'}}\n        >\n          <span className=\"deltas\" style={{color: '#6c757d'}}>\n            {state.deltadeaths > 0 && <Icon.ArrowUp />}\n            {state.deltadeaths > 0 ? `${state.deltadeaths}` : ''}\n          </span>\n          <span className=\"table__count-text\">\n            {parseInt(state.deaths) === 0 ? '-' : formatNumber(state.deaths)}\n          </span>\n        </td>\n      </tr>\n\n      <tr\n        className={'state-last-update'}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td colSpan={2}>\n          <div className=\"last-update\">\n            <h6>Last updated&nbsp;</h6>\n            <h6\n              title={\n                isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                  ? ''\n                  : formatDateAbsolute(props.state.lastupdatedtime)\n              }\n            >\n              {isNaN(Date.parse(formatDate(props.state.lastupdatedtime)))\n                ? ''\n                : `${formatDistance(\n                    new Date(formatDate(props.state.lastupdatedtime)),\n                    new Date()\n                  )} ago`}\n            </h6>\n          </div>\n        </td>\n      </tr>\n\n      <tr\n        className={`district-heading`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td onClick={(e) => handleSort('district')}>\n          <div className=\"heading-content\">\n            <abbr title=\"District\">{t(\"District\")}</abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'district' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td onClick={(e) => handleSort('confirmed')}>\n          <div className=\"heading-content\">\n            <abbr\n              className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n              title=\"Confirmed\"\n            >\n              {window.innerWidth <= 769\n                ? window.innerWidth <= 375\n                  ? t('confirmed.shorter')\n                  : t('confirmed.short')\n                : t('confirmed.full')}\n            </abbr>\n            <div\n              style={{\n                display:\n                  sortData.sortColumn === 'confirmed' ? 'initial' : 'none',\n              }}\n            >\n              {sortData.isAscending ? (\n                <div className=\"arrow-up\" />\n              ) : (\n                <div className=\"arrow-down\" />\n              )}\n            </div>\n          </div>\n        </td>\n        <td className=\"state-page-link\" colSpan={3}>\n          <Link to={`state/${state.statecode}`}>\n            <div>\n              <abbr>{t(\"Visit state page\")}</abbr>\n              <Icon.ArrowRightCircle />\n            </div>\n          </Link>\n        </td>\n      </tr>\n\n      {sortedDistricts &&\n        Object.keys(sortedDistricts)\n          .filter((district) => district.toLowerCase() !== 'unknown')\n          .map((district, index) => {\n            if (district.toLowerCase() !== 'unknown') {\n              return (\n                <tr\n                  key={index}\n                  className={`district ${index % 2 === 0 ? 'is-odd' : ''}`}\n                  style={{\n                    display: props.reveal && !props.total ? '' : 'none',\n                    background: index % 2 === 0 ? '#f8f9fa' : '',\n                  }}\n                  onMouseEnter={() =>\n                    props.onHighlightDistrict?.(district, state, props.index)\n                  }\n                  onMouseLeave={() => props.onHighlightDistrict?.()}\n                >\n                  <td style={{fontWeight: 600}}>{district}</td>\n                  <td>\n                    <span className=\"deltas\" style={{color: '#ff073a'}}>\n                      {sortedDistricts[district].delta.confirmed > 0 && (\n                        <Icon.ArrowUp />\n                      )}\n                      {sortedDistricts[district].delta.confirmed > 0\n                        ? `${sortedDistricts[district].delta.confirmed}`\n                        : ''}\n                    </span>\n                    <span className=\"table__count-text\">\n                      {formatNumber(sortedDistricts[district].confirmed)}\n                    </span>\n                  </td>\n                </tr>\n              );\n            }\n            return null;\n          })}\n\n      {sortedDistricts?.Unknown && (\n        <React.Fragment>\n          <tr\n            className={`district`}\n            style={{display: props.reveal && !props.total ? '' : 'none'}}\n          >\n            <td className=\"unknown\" style={{fontWeight: 600}}>\n              Unknown\n              <Tooltip\n                content={['Awaiting patient-level details from State Bulletin']}\n                styles={tooltipStyles}\n              >\n                <Icon.Info />\n              </Tooltip>\n            </td>\n            <td>\n              <span className=\"deltas\" style={{color: '#ff073a'}}>\n                {sortedDistricts['Unknown'].delta.confirmed > 0 && (\n                  <Icon.ArrowUp />\n                )}\n                {sortedDistricts['Unknown'].delta.confirmed > 0\n                  ? `${sortedDistricts['Unknown'].delta.confirmed}`\n                  : ''}\n              </span>\n              <span className=\"table__count-text\">\n                {formatNumber(sortedDistricts['Unknown'].confirmed)}\n              </span>\n            </td>\n          </tr>\n        </React.Fragment>\n      )}\n\n      <tr\n        className={`spacer`}\n        style={{display: props.reveal && !props.total ? '' : 'none'}}\n      >\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(Row);\n","import Row from './row';\n\nimport React, {useState, useEffect} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nconst isEqual = () => {\n  return true;\n};\n\nfunction Table(props) {\n  const {t} = useTranslation();\n  const [states, setStates] = useState(props.states);\n  const [revealedStates, setRevealedStates] = useState({});\n  const [districts, setDistricts] = useState({});\n  const [count, setCount] = useState(0);\n  const [sortData, setSortData] = useState({\n    sortColumn: localStorage.getItem('state.sortColumn')\n      ? localStorage.getItem('state.sortColumn')\n      : 'confirmed',\n    isAscending: localStorage.getItem('state.isAscending')\n      ? localStorage.getItem('state.isAscending') === 'true'\n      : false,\n  });\n\n  useEffect(() => {\n    if (props.summary === true) {\n      setStates(props.states.slice(0, 9));\n    } else {\n      setStates(props.states);\n    }\n  }, [props.states, props.summary]);\n\n  useEffect(() => {\n    if (props.states[0]) {\n      setRevealedStates(\n        props.states.reduce((a, state) => {\n          return {...a, [state.state]: false};\n        }, {})\n      );\n    }\n  }, [props.states]);\n\n  useEffect(() => {\n    if (states.length > 0) {\n      // slice to ignore the first item which is the total count\n      setCount(states.slice(1).filter((s) => s && s.confirmed > 0).length);\n    }\n  }, [states]);\n\n  useEffect(() => {\n    setDistricts(props.stateDistrictWiseData);\n  }, [props.stateDistrictWiseData]);\n\n  const doSort = (e, props) => {\n    const totalRow = states.splice(0, 1);\n    states.sort((StateData1, StateData2) => {\n      const sortColumn = sortData.sortColumn;\n      let value1 = StateData1[sortColumn];\n      let value2 = StateData2[sortColumn];\n\n      if (sortColumn !== 'state') {\n        value1 = parseInt(StateData1[sortColumn]);\n        value2 = parseInt(StateData2[sortColumn]);\n      }\n\n      if (sortData.isAscending) {\n        return value1 > value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      } else {\n        return value1 < value2\n          ? 1\n          : value1 === value2 && StateData1['state'] > StateData2['state']\n          ? 1\n          : -1;\n      }\n    });\n    states.unshift(totalRow[0]);\n  };\n\n  const handleSort = (e, props) => {\n    const currentsortColumn = e.currentTarget\n      .querySelector('abbr')\n      .getAttribute('title')\n      .toLowerCase();\n    const isAscending =\n      sortData.sortColumn === currentsortColumn\n        ? !sortData.isAscending\n        : sortData.sortColumn === 'state';\n    setSortData({\n      sortColumn: currentsortColumn,\n      isAscending: isAscending,\n    });\n    localStorage.setItem('state.sortColumn', currentsortColumn);\n    localStorage.setItem('state.isAscending', isAscending);\n  };\n\n  const handleReveal = (state) => {\n    setRevealedStates({\n      ...revealedStates,\n      [state]: !revealedStates[state],\n    });\n  };\n\n  doSort();\n\n  if (states.length > 0) {\n    return (\n      <React.Fragment>\n        <h5\n          className=\"table-fineprint fadeInUp\"\n          style={{animationDelay: '1.5s'}}\n        >\n          {t(\"data compilation info\")}\n        </h5>\n        <table className=\"table fadeInUp\" style={{animationDelay: '1.8s'}}>\n          <thead>\n            <tr>\n              <th\n                className=\"sticky state-heading\"\n                onClick={(e) => handleSort(e, props)}\n              >\n                <div className=\"heading-content\">\n                  <abbr title=\"State\">{t('states')}</abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'state' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-cherry' : ''}`}\n                    title=\"Confirmed\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('confirmed.shorter')\n                        : t('confirmed.short')\n                      : t('confirmed.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'confirmed'\n                          ? 'initial'\n                          : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-blue' : ''}`}\n                    title=\"Active\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('active.shorter')\n                        : t('active.short')\n                      : t('active.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'active' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-green' : ''}`}\n                    title=\"Recovered\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('recovered.shorter')\n                        : t('recovered.short')\n                      : t('recovered.full')}\n                  </abbr>\n                  <div\n                    className={\n                      sortData.sortColumn === 'recovered' ? 'sort-black' : ''\n                    }\n                  ></div>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'recovered'\n                          ? 'initial'\n                          : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n              <th className=\"sticky\" onClick={(e) => handleSort(e, props)}>\n                <div className=\"heading-content\">\n                  <abbr\n                    className={`${window.innerWidth <= 769 ? 'is-gray' : ''}`}\n                    title=\"Deaths\"\n                  >\n                    {window.innerWidth <= 769\n                      ? window.innerWidth <= 375\n                        ? t('deceased.shorter')\n                        : t('deceased.short')\n                      : t('deceased.full')}\n                  </abbr>\n                  <div\n                    style={{\n                      display:\n                        sortData.sortColumn === 'deaths' ? 'initial' : 'none',\n                    }}\n                  >\n                    {sortData.isAscending ? (\n                      <div className=\"arrow-up\" />\n                    ) : (\n                      <div className=\"arrow-down\" />\n                    )}\n                  </div>\n                </div>\n              </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {states.map((state, index) => {\n              if (index !== 0 && state.confirmed > 0) {\n                return (\n                  <Row\n                    key={index}\n                    index={index}\n                    state={state}\n                    total={false}\n                    reveal={revealedStates[state.state]}\n                    districts={\n                      state.state in districts\n                        ? districts[state.state].districtData\n                        : []\n                    }\n                    onHighlightState={props.onHighlightState}\n                    onHighlightDistrict={props.onHighlightDistrict}\n                    handleReveal={handleReveal}\n                  />\n                );\n              }\n              return null;\n            })}\n          </tbody>\n\n          <tbody>\n            {states.length > 1 && props.summary === false && (\n              <Row\n                key={0}\n                state={states[0]}\n                total={true}\n                onHighlightState={props.onHighlightState}\n              />\n            )}\n          </tbody>\n        </table>\n        <h5 className=\"table-fineprint fadeInUp\" style={{animationDelay: '1s'}}>\n          {t('States Affected', {count})}\n        </h5>\n      </React.Fragment>\n    );\n  } else {\n    return <div style={{height: '50rem'}}></div>;\n  }\n}\n\nexport default React.memo(Table, isEqual);\n","import {sliceTimeseriesFromEnd, formatNumber} from '../utils/commonfunctions';\nimport {useResizeObserver} from '../utils/hooks';\n\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport React, {useState, useEffect, useRef, useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nfunction TimeSeries(props) {\n  const {t} = useTranslation();\n\n  const [lastDaysCount, setLastDaysCount] = useState(\n    window.innerWidth > 512 ? Infinity : 30\n  );\n  const [timeseries, setTimeseries] = useState([]);\n  const [datapoint, setDatapoint] = useState({});\n  const [index, setIndex] = useState(0);\n  const [mode, setMode] = useState(props.mode);\n  const [logMode, setLogMode] = useState(props.logMode);\n  const [chartType, setChartType] = useState(props.type);\n  const [stateCode] = useState(props.stateCode);\n  const [moving, setMoving] = useState(false);\n\n  const svgRef1 = useRef();\n  const svgRef2 = useRef();\n  const svgRef3 = useRef();\n  const svgRef4 = useRef();\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const transformTimeSeries = useCallback(\n    (timeseries) => {\n      if (timeseries.length > 1) {\n        const slicedTimeseries = sliceTimeseriesFromEnd(\n          timeseries,\n          lastDaysCount\n        );\n        setIndex(slicedTimeseries.length - 1);\n        setTimeseries(slicedTimeseries);\n      }\n    },\n    [lastDaysCount]\n  );\n\n  useEffect(() => {\n    transformTimeSeries(props.timeseries);\n  }, [stateCode, lastDaysCount, transformTimeSeries, props.timeseries]);\n\n  useEffect(() => {\n    setMode(props.mode);\n  }, [props.mode]);\n\n  useEffect(() => {\n    setLogMode(props.logMode);\n  }, [props.logMode]);\n\n  useEffect(() => {\n    setChartType(props.type);\n  }, [props.type]);\n\n  const graphData = useCallback(\n    (timeseries) => {\n      if (!dimensions) return;\n      const width = dimensions.width;\n      const height = dimensions.height;\n\n      // Margins\n      const margin = {top: 15, right: 35, bottom: 25, left: 25};\n      const chartRight = width - margin.right;\n      const chartBottom = height - margin.bottom;\n\n      const T = timeseries.length;\n      const yBuffer = 1.1;\n\n      setDatapoint(timeseries[T - 1]);\n      setIndex(T - 1);\n\n      const svg1 = d3.select(svgRef1.current);\n      const svg2 = d3.select(svgRef2.current);\n      const svg3 = d3.select(svgRef3.current);\n      const svg4 = d3.select(svgRef4.current);\n\n      const dateMin = new Date(timeseries[0]['date']);\n      dateMin.setDate(dateMin.getDate() - 1);\n      const dateMax = new Date(timeseries[T - 1]['date']);\n      dateMax.setDate(dateMax.getDate() + 1);\n\n      const xScale = d3\n        .scaleTime()\n        .clamp(true)\n        .domain([dateMin, dateMax])\n        .range([margin.left, chartRight]);\n\n      // Number of x-axis ticks\n      const numTicksX = width < 480 ? 4 : 7;\n\n      const xAxis = (g) =>\n        g\n          .attr('class', 'x-axis')\n          .call(d3.axisBottom(xScale).ticks(numTicksX))\n          .style('transform', `translateY(${chartBottom}px)`);\n\n      const xAxis2 = (g, yScale) => {\n        g.attr('class', 'x-axis2')\n          .call(d3.axisBottom(xScale).tickValues([]).tickSize(0))\n          .select('.domain')\n          .style('transform', `translateY(${yScale(0)}px)`);\n\n        if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\n        else g.select('.domain').attr('opacity', 0);\n      };\n\n      const yAxis = (g, yScale) =>\n        g\n          .attr('class', 'y-axis')\n          .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(5))\n          .style('transform', `translateX(${chartRight}px)`);\n\n      // Arrays of objects\n      const svgArray = [svg1, svg2, svg3, svg4];\n      const plotTotal = chartType === 1;\n      const dataTypesTotal = [\n        'totalconfirmed',\n        'totalactive',\n        'totalrecovered',\n        'totaldeceased',\n      ];\n      const dataTypesDaily = [\n        'dailyconfirmed',\n        'dailyactive',\n        'dailyrecovered',\n        'dailydeceased',\n      ];\n\n      const colors = ['#ff073a', '#007bff', '#28a745', '#6c757d'];\n\n      let yScales;\n      if (plotTotal) {\n        let uniformScaleMin = Infinity;\n        dataTypesTotal.forEach((type) => {\n          uniformScaleMin = Math.min(\n            uniformScaleMin,\n            d3.min(timeseries, (d) => d[type])\n          );\n        });\n        const yScaleUniformLinear = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            uniformScaleMin,\n            Math.max(1, yBuffer * d3.max(timeseries, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        const yScaleUniformLog = d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(1, uniformScaleMin),\n            Math.max(1, yBuffer * d3.max(timeseries, (d) => d.totalconfirmed)),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesTotal.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              d3.min(timeseries, (d) => d[type]),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          const yScaleLog = d3\n            .scaleLog()\n            .clamp(true)\n            .domain([\n              Math.max(\n                1,\n                d3.min(timeseries, (d) => d[type])\n              ),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          if (logMode) return mode ? yScaleUniformLog : yScaleLog;\n          else return mode ? yScaleUniformLinear : yScaleLinear;\n        });\n      } else {\n        const yScaleDailyUniform = d3\n          .scaleLinear()\n          .clamp(true)\n          .domain([\n            yBuffer *\n              Math.min(\n                0,\n                d3.min(timeseries, (d) => d.dailyactive)\n              ),\n            Math.max(\n              1,\n              yBuffer *\n                d3.max(timeseries, (d) =>\n                  Math.max(d.dailyconfirmed, d.dailyrecovered, d.dailydeceased)\n                )\n            ),\n          ])\n          .nice()\n          .range([chartBottom, margin.top]);\n\n        yScales = dataTypesDaily.map((type) => {\n          const yScaleLinear = d3\n            .scaleLinear()\n            .clamp(true)\n            .domain([\n              yBuffer *\n                Math.min(\n                  0,\n                  d3.min(timeseries, (d) => d[type])\n                ),\n              Math.max(1, yBuffer * d3.max(timeseries, (d) => d[type])),\n            ])\n            .nice()\n            .range([chartBottom, margin.top]);\n          return mode ? yScaleDailyUniform : yScaleLinear;\n        });\n      }\n\n      /* Focus dots */\n      const focus = svgArray.map((svg, i) => {\n        return svg\n          .selectAll('.focus')\n          .data([timeseries[T - 1]], (d) => d.date)\n          .join('circle')\n          .attr('class', 'focus')\n          .attr('fill', colors[i])\n          .attr('stroke', colors[i])\n          .attr('r', 4);\n      });\n\n      function mousemove() {\n        const xm = d3.mouse(this)[0];\n        const date = xScale.invert(xm);\n        const bisectDate = d3.bisector((d) => d.date).left;\n        let i = bisectDate(timeseries, date, 1);\n        if (0 <= i && i < T) {\n          if (date - timeseries[i - 1].date < timeseries[i].date - date) --i;\n          setDatapoint(timeseries[i]);\n          setIndex(i);\n          setMoving(true);\n          const d = timeseries[i];\n          focus.forEach((f, j) => {\n            const yScale = yScales[j];\n            const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n            f.attr('cx', xScale(d.date)).attr('cy', yScale(d[type]));\n          });\n        }\n      }\n\n      function mouseout() {\n        setDatapoint(timeseries[T - 1]);\n        setIndex(T - 1);\n        setMoving(false);\n        focus.forEach((f, j) => {\n          const yScale = yScales[j];\n          const type = plotTotal ? dataTypesTotal[j] : dataTypesDaily[j];\n          f.attr('cx', xScale(timeseries[T - 1].date)).attr(\n            'cy',\n            yScale(timeseries[T - 1][type])\n          );\n        });\n      }\n\n      /* Begin drawing charts */\n      svgArray.forEach((svg, i) => {\n        // Transition interval\n        const t = svg.transition().duration(500);\n        const typeTotal = dataTypesTotal[i];\n        const typeDaily = dataTypesDaily[i];\n        const type = plotTotal ? typeTotal : typeDaily;\n\n        const color = colors[i];\n        const yScale = yScales[i];\n\n        /* X axis */\n        svg.select('.x-axis').transition(t).call(xAxis);\n        svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n        /* Y axis */\n        svg.select('.y-axis').transition(t).call(yAxis, yScale);\n\n        /* Path dots */\n        svg\n          .selectAll('.dot')\n          .data(timeseries, (d) => d.date)\n          .join((enter) => enter.append('circle').attr('cy', chartBottom))\n          .attr('class', 'dot')\n          .attr('fill', color)\n          .attr('stroke', color)\n          .attr('r', 2)\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        focus[i]\n          .transition(t)\n          .attr('cx', (d) => xScale(d.date))\n          .attr('cy', (d) => yScale(d[type]));\n\n        if (plotTotal) {\n          /* TOTAL TRENDS */\n          svg.selectAll('.stem').remove();\n          const path = svg\n            .selectAll('.trend')\n            .data([[...timeseries].reverse()])\n            .join('path')\n            .attr('class', 'trend')\n            .attr('fill', 'none')\n            .attr('stroke', color + '99')\n            .attr('stroke-width', 4);\n          // HACK\n          // Path interpolation is non-trivial. Ideally, a custom path tween\n          // function should be defined which takes care that old path dots\n          // transition synchronously along with the path transition. This hack\n          // simulates that behaviour.\n          if (path.attr('d')) {\n            const n = path.node().getTotalLength();\n            const p = path.node().getPointAtLength(n);\n            // Append points at end of path for better interpolation\n            path.attr(\n              'd',\n              () => path.attr('d') + `L${p.x},${p.y}`.repeat(3 * T)\n            );\n          }\n          path\n            .transition(t)\n            .attr('opacity', plotTotal ? 1 : 0)\n            .attr(\n              'd',\n              d3\n                .line()\n                .x((d) => xScale(d.date))\n                .y((d) => yScale(d[typeTotal]))\n                .curve(d3.curveMonotoneX)\n            );\n          // Using d3-interpolate-path\n          // .attrTween('d', function (d) {\n          //   var previous = path.attr('d');\n          //   var current = line(d);\n          //   return interpolatePath(previous, current);\n          // });\n        } else {\n          /* DAILY TRENDS */\n          svg.selectAll('.trend').remove();\n          svg\n            .selectAll('.stem')\n            .data(timeseries, (d) => d.date)\n            .join((enter) =>\n              enter\n                .append('line')\n                .attr('x1', (d) => xScale(d.date))\n                .attr('x2', (d) => xScale(d.date))\n                .attr('y1', chartBottom)\n                .attr('y2', chartBottom)\n            )\n            .attr('class', 'stem')\n            .style('stroke', color + '99')\n            .style('stroke-width', 4)\n            .transition(t)\n            .attr('y1', yScale(0))\n            .attr('x1', (d) => xScale(d.date))\n            .attr('x2', (d) => xScale(d.date))\n            .attr('y2', (d) => yScale(d[typeDaily]));\n        }\n\n        svg\n          .on('mousemove', mousemove)\n          .on('touchmove', mousemove)\n          .on('mouseout', mouseout)\n          .on('touchend', mouseout);\n      });\n    },\n    [dimensions, chartType, logMode, mode]\n  );\n\n  useEffect(() => {\n    if (timeseries.length > 1) {\n      graphData(timeseries);\n    }\n  }, [timeseries, graphData]);\n\n  const focusDate = moment(datapoint.date);\n  let dateStr = focusDate.isSame(moment().subtract(1, 'days'), 'day')\n    ? t(\"Yesterday\")\n    : focusDate.format('DD MMMM');\n\n  const chartKey1 = chartType === 1 ? 'totalconfirmed' : 'dailyconfirmed';\n  const chartKey2 = chartType === 1 ? 'totalactive' : 'dailyactive';\n  const chartKey3 = chartType === 1 ? 'totalrecovered' : 'dailyrecovered';\n  const chartKey4 = chartType === 1 ? 'totaldeceased' : 'dailydeceased';\n\n  // Function for calculate increased/decreased count for each type of data\n  const currentStatusCount = (chartType) => {\n    if (timeseries.length <= 0 || index <= 0 || index >= timeseries.length)\n      return '';\n    const currentDiff =\n      timeseries[index][chartType] - timeseries[index - 1][chartType];\n    const formatedDiff = formatNumber(currentDiff);\n    return currentDiff >= 0 ? `+${formatedDiff}` : formatedDiff;\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"TimeSeries fadeInUp\" style={{animationDelay: '2.7s'}}>\n        <div className=\"svg-parent\" ref={wrapperRef}>\n          <div className=\"stats\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"confirmed.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey1])}</h2>\n              <h6>{currentStatusCount(chartKey1)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef1} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-blue\">\n          <div className=\"stats is-blue\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"active.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey2])}</h2>\n              <h6>{currentStatusCount(chartKey2)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef2} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-green\">\n          <div className=\"stats is-green\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"recovered.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey3])}</h2>\n              <h6>{currentStatusCount(chartKey3)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef3} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n\n        <div className=\"svg-parent is-gray\">\n          <div className=\"stats is-gray\">\n            <h5 className={`${!moving ? 'title' : ''}`}>{t(\"deceased.full\")}</h5>\n            <h5 className={`${moving ? 'title' : ''}`}>{`${dateStr}`}</h5>\n            <div className=\"stats-bottom\">\n              <h2>{formatNumber(datapoint[chartKey4])}</h2>\n              <h6>{currentStatusCount(chartKey4)}</h6>\n            </div>\n          </div>\n          <svg ref={svgRef4} preserveAspectRatio=\"xMidYMid meet\">\n            <g className=\"x-axis\" />\n            <g className=\"x-axis2\" />\n            <g className=\"y-axis\" />\n          </svg>\n        </div>\n      </div>\n\n      <div className=\"pills\">\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(Infinity)}\n          className={lastDaysCount === Infinity ? 'selected' : ''}\n        >\n          {t(\"Beginning\")}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(30)}\n          className={lastDaysCount === 30 ? 'selected' : ''}\n          aria-label={t(\"1 month\")}\n        >\n          {t(\"1 Month\")}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setLastDaysCount(14)}\n          className={lastDaysCount === 14 ? 'selected' : ''}\n          aria-label={t(\"14 days\")}\n        >\n          {t(\"2 Weeks\")}\n        </button>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(TimeSeries);\n","import {ResizeObserver} from '@juggle/resize-observer';\nimport {useState, useEffect} from 'react';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n","import TimeSeries from './timeseries';\n\nimport React from 'react';\nimport * as Icon from 'react-feather';\nimport {useLocalStorage} from 'react-use';\nimport {useTranslation} from 'react-i18next';\n\nfunction TimeSeriesExplorer({\n  timeseries,\n  activeStateCode,\n  onHighlightState,\n  states,\n  anchor,\n  setAnchor,\n}) {\n  const {t} = useTranslation();\n  const [graphOption, setGraphOption] = useLocalStorage(\n    'timeseriesGraphOption',\n    1\n  );\n\n  const [timeseriesMode, setTimeseriesMode] = useLocalStorage(\n    'timeseriesMode',\n    true\n  );\n  const [timeseriesLogMode, setTimeseriesLogMode] = useLocalStorage(\n    'timeseriesLogMode',\n    false\n  );\n\n  return (\n    <div\n      className={`TimeSeriesExplorer ${\n        anchor === 'timeseries' ? 'stickied' : ''\n      }`}\n      style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n    >\n      <div\n        className=\"timeseries-header fadeInUp\"\n        style={{animationDelay: '2.5s'}}\n      >\n        {window.innerWidth > 769 && (\n          <div\n            className={`anchor ${anchor === 'timeseries' ? 'stickied' : ''}`}\n            onClick={() => {\n              setAnchor(anchor === 'timeseries' ? null : 'timeseries');\n            }}\n          >\n            <Icon.Anchor />\n          </div>\n        )}\n\n        <h1>{t(\"Spread Trends\")}</h1>\n        <div className=\"tabs\">\n          <div\n            className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n            onClick={() => {\n              setGraphOption(1);\n            }}\n          >\n            <h4>{t(\"Cumulative\")}</h4>\n          </div>\n          <div\n            className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n            onClick={() => {\n              setGraphOption(2);\n            }}\n          >\n            <h4>{t(\"Daily\")}</h4>\n          </div>\n        </div>\n\n        <div className=\"scale-modes\">\n          <label className=\"main\">{t(\"Scale Modes\")}</label>\n          <div className=\"timeseries-mode\">\n            <label htmlFor=\"timeseries-mode\">{t(\"chart.mode.uniform\")}</label>\n            <input\n              id=\"timeseries-mode\"\n              type=\"checkbox\"\n              checked={timeseriesMode}\n              className=\"switch\"\n              aria-label=\"Checked by default to scale uniformly.\"\n              onChange={(event) => {\n                setTimeseriesMode(!timeseriesMode);\n              }}\n            />\n          </div>\n          <div\n            className={`timeseries-logmode ${\n              graphOption !== 1 ? 'disabled' : ''\n            }`}\n          >\n            <label htmlFor=\"timeseries-logmode\">{t(\"chart.mode.logarithmic\")}</label>\n            <input\n              id=\"timeseries-logmode\"\n              type=\"checkbox\"\n              checked={graphOption === 1 && timeseriesLogMode}\n              className=\"switch\"\n              disabled={graphOption !== 1}\n              onChange={(event) => {\n                setTimeseriesLogMode(!timeseriesLogMode);\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"trends-state-name\">\n          <select\n            value={activeStateCode}\n            onChange={({target}) => {\n              const selectedState = target.selectedOptions[0].getAttribute(\n                'statedata'\n              );\n              onHighlightState(JSON.parse(selectedState));\n            }}\n          >\n            {states.map((s) => {\n              return (\n                <option\n                  value={s.statecode}\n                  key={s.statecode}\n                  statedata={JSON.stringify(s)}\n                >\n                  {s.statecode === 'TT' ? t('All States') : t(`statenames.${s.state.toLowerCase()}`)}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n      </div>\n\n      <TimeSeries\n        timeseries={timeseries[activeStateCode]}\n        stateCode={activeStateCode}\n        type={graphOption}\n        mode={timeseriesMode}\n        logMode={timeseriesLogMode}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(TimeSeriesExplorer);\n","import axios from 'axios';\nimport {formatDistance, format} from 'date-fns';\nimport React, {useState} from 'react';\nimport {useEffectOnce} from 'react-use';\n\nlet currentDate = new Date();\n\nfunction Updates(props) {\n  const [updates, setUpdates] = useState([]);\n\n  useEffectOnce(() => {\n    axios\n      .get('https://thantthet.github.io/covid19-api/updatelog/log.json')\n      .then((response) => {\n        setUpdates(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n\n  return (\n    <div className=\"updates\">\n      <div className=\"updates-header\">\n        <h2>{format(currentDate, 'd MMM')}</h2>\n      </div>\n\n      {updates\n        .slice(-5)\n        .reverse()\n        .map(function (activity, index) {\n          activity.update = activity.update.replace('\\n', '<br/>');\n          const activityDate = new Date(activity.timestamp * 1000);\n          const addHeader = () => {\n            currentDate = activityDate;\n\n            return (\n              <React.Fragment>\n                {index === 0 ? (\n                  <div className=\"update\">\n                    <h4>No updates yet!</h4>\n                  </div>\n                ) : (\n                  ''\n                )}\n                <div className=\"updates-header\">\n                  <h2>{format(activityDate, 'd MMM')}</h2>\n                </div>\n              </React.Fragment>\n            );\n          };\n\n          return (\n            <React.Fragment key={index}>\n              {activityDate.getDate() !== currentDate.getDate()\n                ? addHeader()\n                : ' '}\n              <div key={index} className=\"update\">\n                <h5>\n                  {formatDistance(\n                    new Date(activity.timestamp * 1000),\n                    new Date()\n                  ) + ' ago'}\n                </h5>\n                <h4\n                  dangerouslySetInnerHTML={{\n                    __html: activity.update,\n                  }}\n                ></h4>\n              </div>\n            </React.Fragment>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default Updates;\n","import Footer from './footer';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport Table from './table';\nimport TimeSeriesExplorer from './timeseriesexplorer';\nimport Updates from './updates';\n\nimport {MAP_META} from '../constants';\nimport {\n  formatDate,\n  formatDateAbsolute,\n  preprocessTimeseries,\n  parseStateTimeseries,\n} from '../utils/commonfunctions';\n\nimport axios from 'axios';\nimport React, {useState, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {useEffectOnce, useLocalStorage, useFavicon} from 'react-use';\n\nfunction Home(props) {\n  const [states, setStates] = useState([]);\n  const [stateDistrictWiseData, setStateDistrictWiseData] = useState({});\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [timeseries, setTimeseries] = useState({});\n  const [fetched, setFetched] = useState(false);\n  const [activeStateCode, setActiveStateCode] = useState('TT');\n  const [regionHighlighted, setRegionHighlighted] = useState(undefined);\n  const [showUpdates, setShowUpdates] = useState(false);\n  const [anchor, setAnchor] = useState(null);\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage(\n    'lastViewedLog',\n    null\n  );\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\n\n  useFavicon(newUpdate ? '/icon_update.png' : '/favicon.ico');\n\n  useEffectOnce(() => {\n    getStates();\n  });\n\n  useEffectOnce(() => {\n    axios\n      .get('https://thantthet.github.io/covid19-api/log.json')\n      .then((response) => {\n        const lastTimestamp = response.data\n          .slice()\n          .reverse()[0]\n          .timestamp.toString();\n        if (lastTimestamp !== lastViewedLog) {\n          setNewUpdate(true);\n          setLastViewedLog(lastTimestamp);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  });\n\n  const getStates = async () => {\n    try {\n      const [\n        {data},\n        stateDistrictWiseResponse,\n        {data: statesDailyResponse},\n      ] = await Promise.all([\n        axios.get('https://thantthet.github.io/covid19-api/data.json'),\n        axios.get('https://thantthet.github.io/covid19-api/state_district_wise.json'),\n        axios.get('https://thantthet.github.io/covid19-api/states_daily.json'),\n      ]);\n\n      setStates(data.statewise);\n\n      const ts = parseStateTimeseries(statesDailyResponse);\n      ts['TT'] = preprocessTimeseries(data.cases_time_series);\n      setTimeseries(ts);\n\n      setLastUpdated(data.statewise[0].lastupdatedtime);\n      setStateDistrictWiseData(stateDistrictWiseResponse.data);\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onHighlightState = (state, index) => {\n    if (!state && !index) return setRegionHighlighted(null);\n    setRegionHighlighted({state, index});\n  };\n\n  const onHighlightDistrict = (district, state, index) => {\n    if (!state && !index && !district) return setRegionHighlighted(null);\n    setRegionHighlighted({district, state, index});\n  };\n\n  const onMapHighlightChange = useCallback(({statecode}) => {\n    setActiveStateCode(statecode);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"Home\">\n        <div className=\"home-left\">\n          <div className=\"header fadeInUp\" style={{animationDelay: '1s'}}>\n            <div className=\"actions\">\n              <h5>\n                {isNaN(Date.parse(formatDate(lastUpdated)))\n                  ? ''\n                  : formatDateAbsolute(lastUpdated)}\n              </h5>\n              {!showUpdates && (\n                <div className=\"bell-icon\">\n                  {fetched && (\n                    <Icon.Bell\n                      onClick={() => {\n                        setShowUpdates(!showUpdates);\n                        setNewUpdate(false);\n                      }}\n                    />\n                  )}\n                  {newUpdate && <div className=\"indicator\"></div>}\n                </div>\n              )}\n              {showUpdates && (\n                <Icon.BellOff\n                  onClick={() => {\n                    setShowUpdates(!showUpdates);\n                  }}\n                />\n              )}\n            </div>\n          </div>\n\n          {showUpdates && <Updates />}\n\n          {fetched && <Level data={states[0]} />}\n          {fetched && <Minigraph timeseries={timeseries['TT']} />}\n          {fetched && (\n            <Table\n              states={states}\n              summary={false}\n              stateDistrictWiseData={stateDistrictWiseData}\n              onHighlightState={onHighlightState}\n              onHighlightDistrict={onHighlightDistrict}\n            />\n          )}\n        </div>\n\n        <div className=\"home-right\">\n          {fetched && (\n            <React.Fragment>\n              <MapExplorer\n                mapMeta={MAP_META.Myanmar}\n                states={states}\n                stateDistrictWiseData={stateDistrictWiseData}\n                // stateTestData={stateTestData}\n                regionHighlighted={regionHighlighted}\n                onMapHighlightChange={onMapHighlightChange}\n                isCountryLoaded={true}\n                anchor={anchor}\n                setAnchor={setAnchor}\n              />\n\n              {fetched && (\n                <TimeSeriesExplorer\n                  timeseries={timeseries}\n                  activeStateCode={activeStateCode}\n                  onHighlightState={onHighlightState}\n                  states={states}\n                  anchor={anchor}\n                  setAnchor={setAnchor}\n                />\n              )}\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n      {fetched && <Footer />}\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(Home);\n","import React from 'react';\nimport {useTranslation} from 'react-i18next';\n\nimport locales from '../i18n/locales.json';\n\nexport default function LanguageSwitcher() {\n  const {i18n, t} = useTranslation();\n\n  const onLanguageChange = (e) => {\n    i18n.changeLanguage(e.target.value);\n  };\n\n  return (\n    <div className=\"select-dropdown\">\n      <select onChange={onLanguageChange} aria-label={t('Select Language')} value={i18n.language}>\n        {Object.entries(locales).map(([key, lang]) => (\n          <option key={key} value={key}>\n            {lang}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","import anime from 'animejs';\nimport React, {useState, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {Link} from 'react-router-dom';\nimport {useEffectOnce, useLockBodyScroll} from 'react-use';\nimport LanguageSwitcher from './languageswitcher';\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `fadeInUp ${window.location.pathname === path ? 'focused' : ''}`,\n  style: {\n    animationDelay: `${animationDelay}s`,\n  },\n});\n\nfunction Navbar({pages, darkMode, setDarkMode}) {\n  const [expand, setExpand] = useState(false);\n  useLockBodyScroll(expand);\n\n  return (\n    <div className=\"Navbar\">\n      <div className=\"navbar-language\">\n        <LanguageSwitcher />\n      </div>\n      <div\n        className=\"navbar-left\"\n        onClick={() => setDarkMode((prevMode) => !prevMode)}\n      >\n        {darkMode ? <Icon.Sun color={'#ffc107'} /> : <Icon.Moon />}\n      </div>\n      <div className=\"navbar-middle\">\n        <Link to=\"/\">\n          Covid19<span>Myanmar</span>\n        </Link>\n      </div>\n\n      <div\n        className=\"navbar-right\"\n        onClick={() => {\n          setExpand(!expand);\n        }}\n        onMouseEnter={() => {\n          if (window.innerWidth > 769) {\n            setExpand(true);\n            anime({\n              targets: '.navbar-right path',\n              strokeDashoffset: [anime.setDashoffset, 0],\n              easing: 'easeInOutSine',\n              duration: 250,\n              delay: function (el, i) {\n                return i * 250;\n              },\n              direction: 'alternate',\n              loop: false,\n            });\n          }\n        }}\n      >\n        {window.innerWidth < 769 && <span>{expand ? 'Close' : 'Menu'}</span>}\n        {window.innerWidth > 769 && (\n          <React.Fragment>\n            <span>\n              <Icon.Home />\n            </span>\n            <span>\n              <Icon.Users />\n            </span>\n            <span>\n              <Icon.BarChart2 />\n            </span>\n          </React.Fragment>\n        )}\n      </div>\n\n      {expand && <Expand expand={expand} pages={pages} setExpand={setExpand} />}\n    </div>\n  );\n}\n\nfunction Expand({expand, pages, setExpand}) {\n  const expandElement = useRef(null);\n\n  useEffectOnce(() => {\n    anime({\n      targets: expandElement.current,\n      translateX: '10rem',\n      easing: 'easeOutExpo',\n      duration: 250,\n    });\n  });\n\n  return (\n    <div\n      className=\"expand\"\n      ref={expandElement}\n      onMouseLeave={() => {\n        setExpand(false);\n      }}\n    >\n      {pages.map((page, i) => {\n        if (page.showInNavbar === true) {\n          return (\n            <Link\n              to={page.pageLink}\n              key={i}\n              onClick={() => {\n                setExpand(false);\n              }}\n            >\n              <span\n                {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n              >\n                {page.displayName}\n              </span>\n            </Link>\n          );\n        }\n        return null;\n      })}\n\n      <div className=\"expand-bottom fadeInUp\" style={{animationDelay: '1s'}}>\n        <h5>A crowdsourced initiative.</h5>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport * as Icon from 'react-feather';\n\nfunction DownloadBlock(props) {\n  return (\n    <div className=\"DownloadBlock fadeInUp\" style={{animationDelay: '0.5s'}}>\n      <a\n        className=\"button\"\n        target=\"_noblank\"\n        href=\"https://raw.githubusercontent.com/covid19india/api/gh-pages/raw_data.json\"\n      >\n        <Icon.Download /> <span>JSON</span>\n      </a>\n      <a\n        className=\"button\"\n        target=\"_noblank\"\n        href=\"https://raw.githubusercontent.com/covid19india/api/gh-pages/csv/latest/raw_data.csv\"\n      >\n        <Icon.Download /> <span>CSV</span>\n      </a>\n    </div>\n  );\n}\n\nexport default React.memo(DownloadBlock, () => {\n  return true;\n});\n","import {format} from 'date-fns';\nimport React from 'react';\n\nfunction PatientsView({\n  logs,\n  summary,\n  setModal,\n  setPatient,\n  expand,\n  applyClass,\n}) {\n  return (\n    <div className=\"Patients fadeInUp\" style={{animationDelay: '1s'}}>\n      {Object.keys(logs)\n        .slice(summary ? -1 : 0)\n        .map((day, index) => {\n          if (day !== 'Invalid Date') {\n            return (\n              <React.Fragment key={index}>\n                <h5 className=\"daylabel\">\n                  {format(new Date(day), 'dd MMM, yyyy')}{' '}\n                  {'(' + logs[day].length + ')'}\n                </h5>\n                <div key={index} className={`day ${summary ? 'summary' : ''}`}>\n                  {logs[day]\n                    .slice(summary ? -40 : 0)\n                    .map((patient, indexTwo) => {\n                      return (\n                        <div\n                          key={indexTwo}\n                          className={applyClass(patient)}\n                          onClick={() => {\n                            setModal(true);\n                            setPatient(patient);\n                          }}\n                        >\n                          <h3>{expand ? `P${patient.patientnumber}` : ''}</h3>\n                        </div>\n                      );\n                    })}\n                </div>\n              </React.Fragment>\n            );\n          } else {\n            return null;\n          }\n        })}\n    </div>\n  );\n}\n\nexport default PatientsView;\n","import PatientsView from './patientsview';\n\nimport {parse} from 'date-fns';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport * as Icon from 'react-feather';\nimport {useLockBodyScroll} from 'react-use';\nimport {useTranslation} from 'react-i18next';\n\nfunction Patients(props) {\n  const {t} = useTranslation();\n\n  const [patients, setPatients] = useState(props.patients);\n  const [patient, setPatient] = useState(props.patients.slice(-1));\n  const [logs, setLogs] = useState({});\n  const [modal, setModal] = useState(false);\n\n  useLockBodyScroll(modal);\n\n  window.onclick = function (event) {\n    const modal = document.getElementById('modal');\n    if (event.target === modal) {\n      setModal(false);\n    }\n  };\n\n  useEffect(() => {\n    setPatients(props.patients);\n  }, [props.patients]);\n\n  const parseByDate = useCallback((patients) => {\n    const log = {};\n    for (let i = 0; i < patients.length; i++) {\n      const day = new Date(\n        parse(patients[i].dateannounced, 'dd/MM/yyyy', new Date())\n      );\n      if (!(day in log)) {\n        const list = [];\n        list.push(patients[i]);\n        log[day] = list;\n      } else {\n        const list = log[day];\n        list.push(patients[i]);\n        log[day] = list;\n      }\n    }\n    setLogs(log);\n  }, []);\n\n  useEffect(() => {\n    if (patients.length) {\n      parseByDate(patients);\n    }\n  }, [parseByDate, patients]);\n\n  const switchPatient = (patientIndex) => {\n    if (patientIndex === '') return;\n    try {\n      // eslint-disable-next-line\n      patients.map((patient, index) => {\n        if (+patient.patientnumber === +patientIndex) setPatient(patient);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getClassNameFn = (colorMode) => {\n    switch (colorMode) {\n      case 'genders':\n        return (patient) => {\n          return `patient-card ${\n            patient.gender === 'F'\n              ? 'is-femme'\n              : patient.gender === 'M'\n              ? 'is-male'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'transmission':\n        return (patient) => {\n          return `patient-card ${\n            patient.typeoftransmission === 'Local'\n              ? 'is-local'\n              : patient.typeoftransmission === 'Imported'\n              ? 'is-imported'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'nationality':\n        return (patient) => {\n          return `patient-card ${\n            patient.nationality === 'myanmar'\n              ? 'is-mm'\n              : patient.nationality === 'french'\n              ? 'is-fr'\n              : patient.nationality === 'swiz'\n              ? 'is-ch'\n              : patient.nationality === 'american'\n              ? 'is-us'\n              : ''\n          } ${props.expand ? '' : 'is-small'}`;\n        };\n      case 'age':\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n      default:\n        return (patient) => {\n          return `patient-card ${props.expand ? '' : 'is-small'}`;\n        };\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <PatientsView\n        logs={logs}\n        setModal={setModal}\n        setPatient={setPatient}\n        expand={props.expand}\n        applyClass={getClassNameFn(props.colorMode)}\n      />\n\n      {modal && (\n        <div className=\"modal\" id=\"modal\">\n          <div\n            className={`modal-content ${modal ? 'fadeInUp' : 'fadeOutDown'}`}\n          >\n            <div className=\"close-button\">\n              <Icon.XCircle\n                onClick={() => {\n                  setModal(false);\n                }}\n              />\n            </div>\n\n            <div className=\"modal-top\">\n              <h1>#{patient.patientnumber}</h1>\n            </div>\n\n            <div className=\"meta\">\n              <h5>{t(\"Date Announced\")}</h5>\n              <h3>{patient.dateannounced ? patient.dateannounced : '?'}</h3>\n\n              <h5>{t(\"Contracted from\")}</h5>\n              <h3 className=\"contracted-from\">\n                {patient.contractedfromwhichpatientsuspected\n                  ? patient.contractedfromwhichpatientsuspected.split(',').map((patientid, i) => {\n                    return <span key={i} onClick={() => switchPatient(patientid)}>{patientid},</span>\n                  })\n                  : '?'}\n              </h3>\n\n              <h5>{t(\"Detected City\")}</h5>\n              <h3>{patient.detectedcity ? patient.detectedcity : '?'}</h3>\n\n              <h5>{t(\"Detected District\")}</h5>\n              <h3>\n                {patient.detecteddistrict ? patient.detecteddistrict : '?'}\n              </h3>\n\n              <h5>{t(\"Detected State\")}</h5>\n              <h3>{patient.detectedstate ? patient.detectedstate : '?'}</h3>\n\n              <h5>{t(\"Nationality\")}</h5>\n              <h3>{patient.nationality ? patient.nationality : '?'}</h3>\n\n              <h5>{t(\"Age\")}</h5>\n              <h3>{patient.agebracket ? patient.agebracket : '?'}</h3>\n\n              <h5>{t(\"Gender\")}</h5>\n              <h3>{patient.gender ? patient.gender : '?'}</h3>\n\n              <h5>{t(\"Type of transmission\")}</h5>\n              <h3>\n                {patient.typeoftransmission ? patient.typeoftransmission : '?'}\n              </h3>\n            </div>\n\n            <div className=\"notes\">\n              <h5>{t(\"Notes\")}</h5>\n              <h3>{patient.notes}</h3>\n            </div>\n\n            <h5>{t(\"Source 1\")}</h5>\n            <div className=\"link\">\n              <a href={patient.source1} target=\"_noblank\">\n                {patient.source1}\n              </a>\n            </div>\n\n            <h5>{t(\"Source 2\")}</h5>\n            <div className=\"link\">\n              <a href={patient.source2} target=\"_noblank\">\n                {patient.source2}\n              </a>\n            </div>\n\n            <h5>{t(\"Source 3\")}</h5>\n            <div className=\"link\">\n              <a href={patient.source3} target=\"_noblank\">\n                {patient.source3}\n              </a>\n            </div>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Patients;\n","import DownloadBlock from './downloadblock';\nimport Footer from './footer';\nimport Patients from './patients';\n\nimport axios from 'axios';\nimport {format, subDays} from 'date-fns';\nimport React, {useState, useEffect} from 'react';\nimport DatePicker from 'react-date-picker';\nimport {useTranslation} from 'react-i18next';\nimport * as Icon from 'react-feather';\nimport {useLocation} from 'react-router-dom';\nimport {useEffectOnce, useLocalStorage} from 'react-use';\n\nfunction filterByObject(obj, filters) {\n  const keys = Object.keys(filters);\n  return obj.filter((p) => {\n    return keys.every((key) => {\n      if (!filters[key].length) return true;\n      return p[key] === filters[key];\n    });\n  });\n}\n\nfunction PatientDB(props) {\n  const {t} = useTranslation();\n  const [fetched, setFetched] = useState(false);\n  const [patients, setPatients] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const {pathname} = useLocation();\n  const [colorMode, setColorMode] = useState('genders');\n  const [scaleMode, setScaleMode] = useState(true);\n  const [filterDate, setFilterDate] = useState(null);\n  const [showReminder, setShowReminder] = useLocalStorage('showReminder', true);\n  const [filters, setFilters] = useState({\n    detectedstate: '',\n    detecteddistrict: '',\n    detectedcity: '',\n    dateannounced: '',\n    // unfilter until data are low enough to show\n  });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  useEffectOnce(() => {\n    try {\n      axios\n        .get('https://thantthet.github.io/covid19-api/raw_data.json')\n        .then((response) => {\n          setPatients(response.data.raw_data.reverse());\n          setFetched(true);\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  });\n\n  useEffect(() => {\n    const datePickers = document.querySelectorAll(\n      '.react-date-picker__inputGroup input'\n    );\n    datePickers.forEach((el) => el.setAttribute('readOnly', true));\n  }, []);\n\n  const handleFilters = (label, value) => {\n    setFilters((f) => {\n      // Create new object (deep copy)\n      const newFilters = {...f};\n      newFilters[label] = value;\n      if (label === 'detectedstate') {\n        const district = document.getElementById('district');\n        const city = document.getElementById('city');\n        // Hide boxes\n        if (value === '') district.style.display = 'none';\n        else district.style.display = 'inline';\n        city.style.display = 'none';\n        // Default to empty selection\n        district.selectedIndex = 0;\n        city.selectedIndex = 0;\n        newFilters['detecteddistrict'] = '';\n        newFilters['detectedcity'] = '';\n      } else if (label === 'detecteddistrict') {\n        const city = document.getElementById('city');\n        // Hide box\n        if (value === '') city.style.display = 'none';\n        else city.style.display = 'inline';\n        // Default to empty selection\n        city.selectedIndex = 0;\n        newFilters['detectedcity'] = '';\n      }\n      return newFilters;\n    });\n  };\n\n  useEffect(() => {\n    setFilteredPatients(filterByObject(patients, filters));\n  }, [patients, filters]);\n\n  function getSortedValues(obj, key) {\n    const setValues = new Set(obj.map((p) => p[key]));\n    if (setValues.size > 1) setValues.add('');\n    if (key === 'dateannounced') return Array.from(setValues);\n    return Array.from(setValues).sort();\n  }\n\n  return (\n    <div className=\"PatientsDB\">\n      <div className=\"filters fadeInUp\" style={{animationDelay: '0.2s'}}>\n        <div className=\"filters-left\">\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.3s'}}\n              id=\"state\"\n              onChange={(event) => {\n                handleFilters('detectedstate', event.target.value);\n              }}\n              defaultValue={filters.detectedstate}\n            >\n              <option value=\"\" disabled selected>\n                {t(\"Select State\")}\n              </option>\n              {getSortedValues(patients, 'detectedstate').map(\n                (state, index) => {\n                  return (\n                    <option key={index} value={state}>\n                      {state === '' ? t('All') : t(`statenames.${state.toLowerCase()}`)}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"district\"\n              onChange={(event) => {\n                handleFilters('detecteddistrict', event.target.value);\n              }}\n              defaultValue={filters.detecteddistrict}\n            >\n              <option value=\"\" disabled>\n                Select District\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                }),\n                'detecteddistrict'\n              ).map((district, index) => {\n                return (\n                  <option key={index} value={district}>\n                    {district === '' ? t('All') : district}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n              defaultValue={filters.detectedcity}\n            >\n              <option value=\"\" disabled>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? t('All') : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s', display: 'none'}}\n              id=\"city\"\n              onChange={(event) => {\n                handleFilters('detectedcity', event.target.value);\n              }}\n              defaultValue={filters.detectedcity}\n            >\n              <option value=\"\" disabled>\n                Select City\n              </option>\n              {getSortedValues(\n                filterByObject(patients, {\n                  detectedstate: filters.detectedstate,\n                  detecteddistrict: filters.detecteddistrict,\n                }),\n                'detectedcity'\n              ).map((city, index) => {\n                return (\n                  <option key={index} value={city}>\n                    {city === '' ? 'All' : city}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n\n          <div className=\"select\">\n            <DatePicker\n              value={filterDate}\n              minDate={new Date('22-Mar-2020')}\n              maxDate={subDays(new Date(), 1)}\n              format=\"dd/MM/y\"\n              calendarIcon={<Icon.Calendar />}\n              inputProps={\n                (onkeydown = (e) => {\n                  e.preventDefault();\n                })\n              }\n              clearIcon={<Icon.XCircle size={16} />}\n              className={'calendar-close'}\n              onChange={(date) => {\n                setFilterDate(date);\n                const fomattedDate = !!date ? format(date, 'dd/MM/yyyy') : '';\n                handleFilters('dateannounced', fomattedDate);\n              }}\n            />\n          </div>\n\n          {/* <div className=\"select\">\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                handleFilters('dateannounced', event.target.value);\n              }}\n            >\n              {Array.from(new Set(patients.map((p) => p.dateannounced))).map(\n                (date, index) => {\n                  return (\n                    <option key={index} value={date}>\n                      {date}\n                    </option>\n                  );\n                }\n              )}\n            </select>\n          </div>*/}\n        </div>\n\n        <div className=\"legend\">\n          {colorMode === 'genders' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-female\"></div>\n              <h5 className=\"is-female\">{t(\"Female\")}</h5>\n              <div className=\"circle is-male\"></div>\n              <h5 className=\"is-male\">{t(\"Male\")}</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">{t(\"Unknown\")}</h5>\n            </div>\n          )}\n\n          {colorMode === 'transmission' && (\n            <div className=\"legend-left\">\n              <div className=\"circle is-local\"></div>\n              <h5 className=\"is-local\">{t(\"Local\")}</h5>\n              <div className=\"circle is-imported\"></div>\n              <h5 className=\"is-imported\">{t(\"Imported\")}</h5>\n              <div className=\"circle\"></div>\n              <h5 className=\"\">{t(\"Unknown\")}</h5>\n            </div>\n          )}\n\n          {colorMode === 'nationality' && (\n            <div className=\"legend-left nationality\">\n              <div className=\"circle is-mm\"></div>\n              <h5 className=\"is-mm\">Mm</h5>\n              <div className=\"circle is-fr\"></div>\n              <h5 className=\"is-us\">Fr</h5>\n              <div className=\"circle is-ch\"></div>\n              <h5 className=\"is-us\">Ch</h5>\n              <div className=\"circle is-us\"></div>\n              <h5 className=\"is-us\">Us</h5>\n            </div>\n          )}\n\n          <div className={`select ${colorMode}`}>\n            <select\n              style={{animationDelay: '0.4s'}}\n              onChange={(event) => {\n                setColorMode(event.target.value);\n              }}\n              defaultValue={colorMode}\n            >\n              {/* <option value=\"\" disabled>\n                Color modes\n              </option> */}\n              <option value=\"genders\">{t(\"Genders\")}</option>\n              <option value=\"transmission\">{t(\"Transmission\")}</option>\n              <option value=\"nationality\">{t(\"Nationality\")}</option>\n              {/* <option value=\"age\">Age</option>*/}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"header fadeInUp\" style={{animationDelay: '0.3s'}}>\n        <div>\n          <h1>{t('demographics.title')}</h1>\n\n          <div className=\"deep-dive\">\n            <h5>Expand</h5>\n            <input\n              type=\"checkbox\"\n              checked={scaleMode}\n              onChange={(event) => {\n                setScaleMode(!scaleMode);\n              }}\n              className=\"switch\"\n            />\n          </div>\n        </div>\n        <h6 className=\"disclaimer\">\n        {t('demographics.disclaimer')}\n        </h6>\n      </div>\n\n      <div\n        className=\"reminder fadeInUp\"\n        style={{animationDelay: '1s', display: showReminder ? '' : 'none'}}\n      >\n        <Icon.XCircle\n          onClick={() => {\n            setShowReminder(false);\n          }}\n        />\n        <p>\n        {t('demographics.reminder.line1')}\n        <br/>\n        <br/>\n        {t('demographics.reminder.line2')}\n        </p>\n      </div>\n\n      {fetched && (\n        <div className=\"patientdb-wrapper\">\n          <Patients\n            patients={filteredPatients}\n            colorMode={colorMode}\n            expand={scaleMode}\n          />\n        </div>\n      )}\n\n      <DownloadBlock patients={patients} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default PatientDB;\n","import axios from 'axios';\nimport * as d3 from 'd3';\nimport React, {useEffect, useRef, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport ForceGraph2D from 'react-force-graph-2d';\n\nconst isEqual = () => {\n  return true;\n};\n\nfunction Clusters({stateCode}) {\n  const [fetched, setFetched] = useState(false);\n  const [stateRawData, setStateRawData] = useState([]);\n  const [networkData, setNetworkData] = useState([]);\n\n  function prepareNetworkData(data) {\n    // Parse data\n    let contractedStr = data.reduce(\n      (acc, v) => acc + v.contractedfromwhichpatientsuspected + ', ',\n      ''\n    );\n    contractedStr = contractedStr.replace(/\\s+/g, '');\n    const sources = new Set(contractedStr.match(/[^,]+/g));\n\n    // Prepare nodes and links\n    const nodes = [];\n    const nodesSet = new Set();\n    const links = [];\n    data.forEach((d) => {\n      const contractedStr = d.contractedfromwhichpatientsuspected.replace(\n        /\\s+/g,\n        ''\n      );\n      const contracted = contractedStr.match(/[^,]+/g);\n      if (contracted) {\n        const pid = 'P' + d.patientnumber;\n        nodesSet.add(pid);\n        nodes.push({\n          id: pid,\n          group: sources.has(d.patientnumber) ? 'source' : 'target',\n          raw: d,\n        });\n        contracted.forEach((p) => {\n          links.push({\n            source: 'P' + p,\n            target: pid,\n          });\n        });\n      }\n    });\n\n    // Add missing nodes\n    links.forEach((d) => {\n      if (!nodesSet.has(d.source)) {\n        nodes.push({\n          id: d.source,\n          group: 'source',\n          raw: d.source,\n        });\n        nodesSet.add(d.source);\n      }\n    });\n    return {\n      nodes: nodes,\n      links: links,\n    };\n  }\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const rawDataResponse = await axios.get(\n          'https://thantthet.github.io/covid19-api/raw_data.json'\n        );\n        setStateRawData(\n          rawDataResponse.data.raw_data.filter((d) => d.statecode === stateCode)\n        );\n        setFetched(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    if (!fetched) {\n      getData();\n    }\n  }, [fetched, stateCode]);\n\n  useEffect(() => {\n    setNetworkData(prepareNetworkData(stateRawData));\n  }, [stateRawData]);\n\n  const NetworkGraph = () => {\n    const fgRef = useRef();\n\n    useEffect(() => {\n      const fg = fgRef.current;\n      const width = document.getElementById('clusters').offsetWidth;\n      const height = width;\n      // Deactivate existing forces\n      fg.d3Force('charge').strength(-60);\n      fg.d3Force('collision', d3.forceCollide());\n      fg.d3Force('x', d3.forceX().strength(0.3));\n      fg.d3Force('y', d3.forceY().strength(0.3));\n      fg.d3Force('box', boxForce);\n\n      // Custom force to keep everything inside box\n      function boxForce() {\n        for (let i = 0, n = networkData.nodes.length; i < n; ++i) {\n          const currNode = networkData.nodes[i];\n          currNode.x = Math.max(-width, Math.min(width, currNode.x));\n          currNode.y = Math.max(-height, Math.min(height, currNode.y));\n        }\n      }\n    }, []);\n\n    const width = document.getElementById('clusters').offsetWidth;\n    const height = width;\n\n    return (\n      <ForceGraph2D\n        ref={fgRef}\n        width={width}\n        height={height}\n        graphData={networkData}\n        nodeLabel=\"id\"\n        nodeColor={(node) => (node.group === 'source' ? '#dc3545' : 'gray')}\n        linkDirectionalParticleColor={() => 'red'}\n        linkDirectionalParticles={1}\n        linkDirectionalParticleWidth={(link) =>\n          link.source.id[0] === 'P' ? 2 : 0\n        }\n        enableZoomPanInteraction={false}\n      />\n    );\n  };\n\n  useEffect(() => {\n    ReactDOM.render(<NetworkGraph />, document.getElementById('clusters'));\n  }, [networkData]);\n\n  return <div id=\"clusters\"></div>;\n}\n\nexport default React.memo(Clusters, isEqual);\n","import * as d3 from 'd3';\nimport React, {useEffect, useRef, useState} from 'react';\n\nfunction DeltaBarGraph({timeseries, arrayKey}) {\n  const [data, setData] = useState([]);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    setData(timeseries);\n  }, [timeseries]);\n\n  useEffect(() => {\n    if (!data.length) return;\n\n    const svg = d3.select(svgRef.current);\n    const width = +svg.attr('width');\n    const height = +svg.attr('height');\n\n    const margin = {top: 50, right: 0, bottom: 50, left: 0};\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n    const barRadius = 5;\n\n    const formatTime = d3.timeFormat('%e %b');\n    const xScale = d3\n      .scaleBand()\n      .domain(data.map((d) => formatTime(d.date)))\n      .range([margin.left, chartRight])\n      .paddingInner(0.33);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([\n        0,\n        Math.max(\n          1,\n          d3.max(data, (d) => d[arrayKey])\n        ),\n      ])\n      .range([chartBottom, margin.top]); // - barRadius\n\n    const xAxis = d3.axisBottom(xScale).tickSize(0);\n\n    svg\n      .select('.x-axis')\n      .style('transform', `translateY(${chartBottom}px)`)\n      .call(xAxis)\n      .call((g) => g.select('.domain').remove())\n      .selectAll('text')\n      .attr('y', 0)\n      .attr('x', -40)\n      .attr('dy', '.35em')\n      .attr('transform', 'rotate(-90)')\n      .style('text-anchor', 'start');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .join('path')\n      .attr('class', 'bar')\n      .attr('d', (d) =>\n        roundedBar(\n          xScale(formatTime(d.date)),\n          chartBottom,\n          xScale.bandwidth(),\n          chartBottom - yScale(d[arrayKey]),\n          barRadius\n        )\n      )\n      .attr('fill', (d, i) => (i < data.length - 1 ? '#dc354590' : '#dc3545'));\n\n    svg\n      .selectAll('.delta')\n      .data(data)\n      .join('text')\n      .attr('class', 'delta')\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '11px')\n      .attr('x', (d) => xScale(formatTime(d.date)) + xScale.bandwidth() / 2)\n      .attr('y', (d) => yScale(d[arrayKey]) - 6)\n      .text((d) => d[arrayKey])\n      .append('tspan')\n      .attr('class', 'percent')\n      .attr('x', (d) => xScale(formatTime(d.date)) + xScale.bandwidth() / 2)\n      .attr('dy', '-1.2em')\n      .text((d, i) =>\n        i && data[i - 1][arrayKey]\n          ? d3.format('+.1%')(\n              (data[i][arrayKey] - data[i - 1][arrayKey]) /\n                data[i - 1][arrayKey]\n            )\n          : ''\n      );\n  }, [data, arrayKey]);\n\n  return (\n    <div className=\"DeltaBarGraph fadeInUp\" style={{animationDelay: '0.8s'}}>\n      <svg\n        ref={svgRef}\n        width=\"250\"\n        height=\"250\"\n        viewBox=\"0 0 250 250\"\n        preserveAspectRatio=\"xMidYMid meet\"\n      >\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n    </div>\n  );\n}\n\nexport default React.memo(DeltaBarGraph);\n\nfunction roundedBar(x, y, w, h, r, f) {\n  if (!h) return;\n  // Flag for sweep:\n  if (f === undefined) f = 1;\n  // x coordinates of top of arcs\n  const x0 = x + r;\n  const x1 = x + w - r;\n  // y coordinates of bottom of arcs\n  const y0 = y - h + r;\n\n  const parts = [\n    'M',\n    x,\n    y,\n    'L',\n    x,\n    y0,\n    'A',\n    r,\n    r,\n    0,\n    0,\n    f,\n    x0,\n    y - h,\n    'L',\n    x1,\n    y - h,\n    'A',\n    r,\n    r,\n    0,\n    0,\n    f,\n    x + w,\n    y0,\n    'L',\n    x + w,\n    y,\n    'Z',\n  ];\n  return parts.join(' ');\n}\n","import {useTranslation} from 'react-i18next';\nimport Clusters from './clusters';\nimport DeltaBarGraph from './deltabargraph';\nimport Footer from './footer';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport TimeSeries from './timeseries';\n\nimport {MAP_META, STATE_CODES} from '../constants';\nimport {\n  formatDateAbsolute,\n  parseStateTimeseries,\n} from '../utils/commonfunctions';\n\nimport axios from 'axios';\nimport React, {useEffect, useRef, useState} from 'react';\nimport * as Icon from 'react-feather';\nimport {Link, useParams} from 'react-router-dom';\n\nfunction State(props) {\n  const {t} = useTranslation();\n  const mapRef = useRef();\n  const tsRef = useRef();\n\n  const {stateCode} = useParams();\n\n  const [fetched, setFetched] = useState(false);\n  const [timeseries, setTimeseries] = useState({});\n  const [graphOption, setGraphOption] = useState(1);\n  const [timeseriesMode, setTimeseriesMode] = useState(true);\n  const [timeseriesLogMode, setTimeseriesLogMode] = useState(false);\n  const [stateData, setStateData] = useState({});\n  const [districtData, setDistrictData] = useState({});\n  const [stateName] = useState(STATE_CODES[stateCode]);\n\n  useEffect(() => {\n    if (fetched === false) {\n      getState(stateCode);\n    }\n  }, [fetched, stateCode]);\n\n  const getState = async (code) => {\n    try {\n      const [\n        {data: dataResponse},\n        {data: stateDistrictWiseResponse},\n        {data: statesDailyResponse},\n      ] = await Promise.all([\n        axios.get('https://thantthet.github.io/covid19-api/data.json'),\n        axios.get('https://thantthet.github.io/covid19-api/state_district_wise.json'),\n        axios.get('https://thantthet.github.io/covid19-api/states_daily.json'),\n      ]);\n      const states = dataResponse.statewise;\n      setStateData(states.find((s) => s.statecode === code));\n      const ts = parseStateTimeseries(statesDailyResponse)[code];\n      setTimeseries(ts);\n      const name = STATE_CODES[code];\n      setDistrictData({\n        [name]: stateDistrictWiseResponse[name],\n      });\n      setFetched(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"State\">\n        <div className=\"state-left\">\n          <div className=\"breadcrumb fadeInUp\">\n            <Link to=\"/\">Home</Link>/\n            <Link to={`${stateCode}`}>{stateName}</Link>\n          </div>\n\n          <div className=\"header\">\n            <div\n              className=\"header-left fadeInUp\"\n              style={{animationDelay: '0.3s'}}\n            >\n              <h1>{t(`statenames.${stateName.toLowerCase()}`)}</h1>\n              <h5>\n                {t('statepage.lastUpdatedOn', {time: Object.keys(stateData).length\n                  ? formatDateAbsolute(stateData.lastupdatedtime)\n                  : ''})}\n              </h5>\n            </div>\u001b\n          </div>\n\n          {fetched && <Level data={stateData} />}\n          {fetched && <Minigraph timeseries={timeseries} />}\n          {fetched && (\n            <React.Fragment>\n              {\n                <MapExplorer\n                  forwardRef={mapRef}\n                  mapMeta={MAP_META[stateName]}\n                  states={[stateData]}\n                  stateDistrictWiseData={districtData}\n                  isCountryLoaded={false}\n                />\n              }\n            </React.Fragment>\n          )}\n\n          {fetched && (\n            <div className=\"meta-secondary\">\n              <div className=\"unknown\">\n                <Icon.AlertCircle />\n                <div className=\"unknown-right\">\n                  Awaiting district details for{' '}\n                  {districtData[stateName]?.districtData['Unknown']\n                    ?.confirmed || '0'}{' '}\n                  cases\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"state-right\">\n          {fetched && (\n            <React.Fragment>\n              <div className=\"district-bar\">\n                <div\n                  className=\"district-bar-left fadeInUp\"\n                  style={{animationDelay: '0.6s'}}\n                >\n                  <h2>{t(\"statepage.topDistrict\")}</h2>\n                  <div className=\"districts\">\n                    {districtData[stateName]\n                      ? Object.keys(districtData[stateName].districtData)\n                          .filter((d) => d !== 'Unknown')\n                          .sort(\n                            (a, b) =>\n                              districtData[stateName].districtData[b]\n                                .confirmed -\n                              districtData[stateName].districtData[a].confirmed\n                          )\n                          .slice(0, 6)\n                          .map((district, index) => {\n                            return (\n                              <div key={index} className=\"district\">\n                                <h2>\n                                  {\n                                    districtData[stateName].districtData[\n                                      district\n                                    ].confirmed\n                                  }\n                                </h2>\n                                <h5>{district}</h5>\n                                <div className=\"delta\">\n                                  <Icon.ArrowUp />\n                                  <h6>\n                                    {\n                                      districtData[stateName].districtData[\n                                        district\n                                      ].delta.confirmed\n                                    }\n                                  </h6>\n                                </div>\n                              </div>\n                            );\n                          })\n                      : ''}\n                  </div>\n                </div>\n                <div className=\"district-bar-right\">\n                  {\n                    <DeltaBarGraph\n                      timeseries={timeseries.slice(-5)}\n                      arrayKey={'dailyconfirmed'}\n                    />\n                  }\n                </div>\n              </div>\n\n              <div\n                className=\"timeseries-header fadeInUp\"\n                style={{animationDelay: '2.5s'}}\n                ref={tsRef}\n              >\n                <div className=\"tabs\">\n                  <div\n                    className={`tab ${graphOption === 1 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(1);\n                    }}\n                  >\n                    <h4>{t(\"Cumulative\")}</h4>\n                  </div>\n                  <div\n                    className={`tab ${graphOption === 2 ? 'focused' : ''}`}\n                    onClick={() => {\n                      setGraphOption(2);\n                    }}\n                  >\n                    <h4>{t(\"Daily\")}</h4>\n                  </div>\n                </div>\n\n                <div className=\"scale-modes\">\n                  <label className=\"main\">{t(\"Scale Modes\")}</label>\n                  <div className=\"timeseries-mode\">\n                    <label htmlFor=\"timeseries-mode\">{t(\"chart.mode.uniform\")}</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={timeseriesMode}\n                      className=\"switch\"\n                      aria-label=\"Checked by default to scale uniformly.\"\n                      onChange={(event) => {\n                        setTimeseriesMode(!timeseriesMode);\n                      }}\n                    />\n                  </div>\n                  <div\n                    className={`timeseries-logmode ${\n                      graphOption !== 1 ? 'disabled' : ''\n                    }`}\n                  >\n                    <label htmlFor=\"timeseries-logmode\">{t(\"chart.mode.logarithmic\")}</label>\n                    <input\n                      type=\"checkbox\"\n                      checked={graphOption === 1 && timeseriesLogMode}\n                      className=\"switch\"\n                      disabled={graphOption !== 1}\n                      onChange={(event) => {\n                        setTimeseriesLogMode(!timeseriesLogMode);\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <TimeSeries\n                timeseries={timeseries}\n                type={graphOption}\n                mode={timeseriesMode}\n                logMode={timeseriesLogMode}\n              />\n            </React.Fragment>\n          )}\n        </div>\n\n        <div className=\"state-left\">\n          <div className=\"Clusters fadeInUp\" style={{animationDelay: '0.8s'}}>\n            <h1>{t(\"Network of transmission\")}</h1>\n            <Clusters stateCode={stateCode} />\n          </div>\n        </div>\n\n        <div className=\"state-right\"></div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default React.memo(State);\n","import {useTranslation} from 'react-i18next';\nimport './App.scss';\n\nimport DeepDive from './components/deepdive';\nimport Home from './components/home';\nimport Navbar from './components/navbar';\nimport PatientDB from './components/patientdb';\nimport State from './components/state';\n\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport {useLocalStorage} from 'react-use';\n\nfunction App() {\n  const {t} = useTranslation();\n\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home,\n      displayName: t('menu.home'),\n      animationDelayForNavbar: 0.2,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/demographics',\n      view: PatientDB,\n      displayName: t('menu.demographics'),\n      animationDelayForNavbar: 0.3,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/deepdive',\n      view: DeepDive,\n      displayName: t('menu.deepdrive'),\n      animationDelayForNavbar: 0.4,\n      showInNavbar: true,\n    },\n    {\n      pageLink: '/state/:stateCode',\n      view: State,\n      displayName: t('menu.state'),\n      animationDelayForNavbar: 0.7,\n      showInNavbar: false,\n    },\n  ];\n\n  const [darkMode, setDarkMode] = useLocalStorage('darkMode', false);\n\n  React.useEffect(() => {\n    if (darkMode) {\n      document.querySelector('body').classList.add('dark-mode');\n    } else {\n      document.querySelector('body').classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  return (\n    <div className={`App ${darkMode ? 'dark-mode' : ''}`}>\n      <Router>\n        <Route\n          render={({location}) => (\n            <div className=\"Almighty-Router\">\n              <Navbar\n                pages={pages}\n                darkMode={darkMode}\n                setDarkMode={setDarkMode}\n              />\n              <Switch location={location}>\n                {pages.map((page, index) => {\n                  return (\n                    <Route\n                      exact\n                      path={page.pageLink}\n                      component={page.view}\n                      key={index}\n                    />\n                  );\n                })}\n                <Redirect to=\"/\" />\n              </Switch>\n            </div>\n          )}\n        />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n  name: 'default',\n  lookup(options) {\n    if (localStorage.getItem('i18nextLng')) {\n      return undefined\n    }\n    // defaults\n    return 'my-MM';\n  }\n};","import i18n from 'i18next';\nimport moment from 'moment';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Detector from './detector';\n\nconst languageDetector = new LanguageDetector();\nlanguageDetector.addDetector(Detector);\n\ni18n\n  .use(Backend)\n  .use(languageDetector)\n  .init({\n    debug: false,\n    fallbackLng: 'en',\n    backend: {\n      loadPath: '/locales/{{lng}}.json',\n    },\n    detection: {\n      // order and from where user language should be detected\n      order: ['default', 'querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain']\n    },\n    interpolation: {\n      escapeValue: false,\n      format: function(value, format, lng) {\n        if (value instanceof Date) return moment(value).local(lng).format(format);\n        if (format === 'numeric') return Number(value).toLocaleString(lng);\n        return value;\n      }\n    }\n  });\n\nexport default i18n;\n","import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {I18nextProvider} from 'react-i18next';\nimport i18n from './i18n';\n\nReactDOM.render(\n  <Suspense fallback={''}>\n    <I18nextProvider i18n={i18n}>\n\t\t<App />\n    </I18nextProvider>\n  </Suspense>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}